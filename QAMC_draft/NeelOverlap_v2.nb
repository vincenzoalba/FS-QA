(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    252289,       5248]
NotebookOptionsPosition[    248983,       5138]
NotebookOutlinePosition[    249356,       5154]
CellTagsIndexPosition[    249313,       5151]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Notebooks", "[", "\"\<NeelOverlap_v2.nb\>\"", "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
    RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"incr", "[", 
    RowBox[{"digs_", ",", "base_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"carry", "=", "1"}], ",", 
       RowBox[{"ndigs", "=", "digs"}], ",", 
       RowBox[{"k", "=", "1"}], ",", "nd"}], "}"}], ",", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "digs", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"carry", ",", "nd"}], "}"}], "=", 
          RowBox[{"QuotientRemainder", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "ndigs", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
             "+", "carry"}], ",", 
            RowBox[{
            "base", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
           "]"}]}], ";", 
         RowBox[{
          RowBox[{
          "ndigs", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "=", "nd"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"carry", "\[Equal]", "0"}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
         RowBox[{"k", "++"}], ";"}]}], "]"}], ";", "ndigs"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"2.", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"i", ",", "j"}], "]"}]}], "-", 
    RowBox[{"1.", " ", 
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"i", ",", "j"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpB", "[", 
    RowBox[{"L_", ",", "M_", ",", "\[Alpha]_", ",", "n_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"L", "-", "1.", "-", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1."}], "M"], 
      RowBox[{
       RowBox[{"t", "[", 
        RowBox[{"n", ",", "j"}], "]"}], " ", 
       RowBox[{
       "\[Alpha]", "\[LeftDoubleBracket]", "j", 
        "\[RightDoubleBracket]"}]}]}]}], "2."]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenString", "[", "M_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "part", ",", "part1", ",", "pair", ",", "d", ",", "j", ",", "k", ",", 
       "m", ",", "p", ",", "check"}], "}"}], ",", 
     RowBox[{
      RowBox[{"m", "=", "M"}], ";", 
      RowBox[{"part", "=", 
       RowBox[{"Reap", "[", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"m", "\[NotEqual]", "0"}], ",", 
           RowBox[{
            RowBox[{"d", "=", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"1.", ",", 
                 RowBox[{"M", "+", "1", "-", 
                  FractionBox["1", 
                   SuperscriptBox["10", "12"]]}]}], "}"}], "]"}], "]"}]}], 
            ";", 
            RowBox[{"j", "=", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"1.", ",", 
                 RowBox[{"M", "+", "1", "-", 
                  FractionBox["1", 
                   SuperscriptBox["10", "12"]]}]}], "}"}], "]"}], "]"}]}], 
            ";", 
            RowBox[{"p", "=", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"p", "\[LessEqual]", 
               FractionBox[
                RowBox[{"d", " ", 
                 RowBox[{"PartitionsP", "[", 
                  RowBox[{"m", "-", 
                   RowBox[{"j", " ", "d"}]}], "]"}]}], 
                RowBox[{"m", " ", 
                 RowBox[{"PartitionsP", "[", "m", "]"}]}]]}], ",", 
              RowBox[{
               RowBox[{"Sow", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{"d", ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "1", ",", "j"}], "}"}]}], "]"}], "]"}], 
               ";", 
               RowBox[{"m", "=", 
                RowBox[{"m", "-", 
                 RowBox[{"j", " ", "d"}]}]}], ";"}]}], "]"}], ";"}]}], "]"}], 
         ";"}], "]"}]}], ";", 
      RowBox[{"part1", "=", 
       RowBox[{"Flatten", "[", "part", "]"}]}], ";", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"part1", ",", "i"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "M"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChooString", "[", 
    RowBox[{"M_", ",", "L_", ",", "strOl_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "string", ",", "mat", ",", "DDol", ",", "DDne", ",", "i", ",", "j", ",",
        "strNe", ",", "p", ",", "vec", ",", "vec1"}], "}"}], ",", 
     RowBox[{
      RowBox[{"string", "=", "strOl"}], ";", 
      RowBox[{"mat", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"t", "[", 
          RowBox[{"i", ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "M"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"DDol", "=", 
       RowBox[{
        UnderoverscriptBox["\[Product]", 
         RowBox[{"i", "=", "1"}], "M"], 
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"L", "-", 
           RowBox[{"Total", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"mat", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], " ", 
               RowBox[{
               "string", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}], "]"}]}], 
          ",", 
          RowBox[{
          "string", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], ";", 
      RowBox[{"strNe", "=", 
       RowBox[{"GenString", "[", "M", "]"}]}], ";", 
      RowBox[{"DDne", "=", 
       RowBox[{
        UnderoverscriptBox["\[Product]", 
         RowBox[{"i", "=", "1"}], "M"], 
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"L", "-", 
           RowBox[{"Total", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"mat", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], " ", 
               RowBox[{
               "strNe", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}], "]"}]}], 
          ",", 
          RowBox[{
          "strNe", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], ";", 
      RowBox[{"p", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[LessEqual]", 
         RowBox[{"Min", "[", 
          RowBox[{"1", ",", 
           FractionBox["DDne", "DDol"]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"string", "=", "strNe"}], ";"}]}], "]"}], ";", "string"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BTsel", "[", 
    RowBox[{"M_", ",", "L_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"J", ",", "n", ",", "k"}], "}"}], ",", 
     RowBox[{
      RowBox[{"J", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"k", ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"-", 
                RowBox[{"UpB", "[", 
                 RowBox[{"L", ",", "M", ",", "\[Alpha]", ",", "n"}], "]"}]}], 
               ",", 
               RowBox[{"UpB", "[", 
                RowBox[{"L", ",", "M", ",", "\[Alpha]", ",", "n"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
           "\[Alpha]", "\[LeftDoubleBracket]", "n", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", "J"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Theta", "[", 
    RowBox[{"x_", ",", "m_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "\[NotEqual]", "m"}], ",", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["x", 
         RowBox[{"Abs", "[", 
          RowBox[{"n", "-", "m"}], "]"}]], "]"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          FractionBox["x", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"n", "-", "m"}], "]"}], "+", "k"}]], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", 
           RowBox[{"n", "+", "m", "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"n", "-", "m"}], "]"}], "-", "2"}], ",", "2"}], "}"}]}], 
        "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["x", 
         RowBox[{"n", "+", "m"}]], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          FractionBox["x", "k"], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", 
           RowBox[{
            RowBox[{"2", " ", "n"}], "-", "2"}], ",", "2"}], "}"}]}], "]"}]}],
       "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["x", 
         RowBox[{"2", " ", "n"}]], "]"}]}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SolveBethe", "[", 
    RowBox[{"M_", ",", "L_", ",", "string_", ",", "BN_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sol", ",", "x", ",", "n", ",", "g", ",", "b", ",", "m", ",", "o", ",", 
       "h", ",", "check", ",", "sol1", ",", "bit", ",", "EE", ",", "EE1", ",",
        "EE2", ",", "EE3"}], "}"}], ",", 
     RowBox[{
      RowBox[{"check", "=", "1"}], ";", 
      RowBox[{"bit", "=", "0"}], ";", 
      RowBox[{"sol", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{
         RowBox[{"Table", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "n", "]"}], "[", "g", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"g", ",", "1", ",", 
             RowBox[{
             "string", "\[LeftDoubleBracket]", "n", 
              "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ArcTan", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"x", "[", "n", "]"}], "[", "g", "]"}], "n"], "]"}],
                 "-", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"BN", "\[LeftDoubleBracket]", 
                   RowBox[{"n", ",", "g"}], "\[RightDoubleBracket]"}]}], "L"],
                 "-", 
                FractionBox[
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"m", "=", "1"}], "M"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"b", "=", "1"}], 
                    RowBox[{
                    "string", "\[LeftDoubleBracket]", "m", 
                    "\[RightDoubleBracket]"}]], 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"m", "\[NotEqual]", "n"}], "||", 
                    RowBox[{"b", "\[NotEqual]", "g"}]}], ",", 
                    RowBox[{"Theta", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "n", "]"}], "[", "g", "]"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", "m", "]"}], "[", "b", "]"}]}], ",", "m",
                     ",", "n"}], "]"}], ",", "0"}], "]"}]}]}], 
                 RowBox[{"2", " ", "L"}]]}], "\[Equal]", "0"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", "1", ",", 
                RowBox[{
                "string", "\[LeftDoubleBracket]", "n", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "o", "]"}], "[", "h", "]"}], ",", 
                 RowBox[{"RandomReal", "[", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"o", ",", "1", ",", "M"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"h", ",", "1", ",", 
                 RowBox[{
                 "string", "\[LeftDoubleBracket]", "o", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", "1"}], 
            "]"}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "15"}], ",", 
           RowBox[{"MaxIterations", "\[Rule]", "200"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "15"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{"check", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
              "sol", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "g", "\[RightDoubleBracket]"}], "n"], 
            "]"}], "-", 
           FractionBox[
            RowBox[{"\[Pi]", " ", 
             RowBox[{"BN", "\[LeftDoubleBracket]", 
              RowBox[{"n", ",", "g"}], "\[RightDoubleBracket]"}]}], "L"], "-", 
           FractionBox[
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"m", "=", "1"}], "M"], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"b", "=", "1"}], 
               RowBox[{
               "string", "\[LeftDoubleBracket]", "m", 
                "\[RightDoubleBracket]"}]], 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"m", "\[NotEqual]", "n"}], "||", 
                 RowBox[{"b", "\[NotEqual]", "g"}]}], ",", 
                RowBox[{"Theta", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "g", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "m", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}]}], ",", "m", ",", "n"}], "]"}], 
                ",", "0"}], "]"}]}]}], 
            RowBox[{"2", " ", "L"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"g", ",", "1", ",", 
            RowBox[{
            "string", "\[LeftDoubleBracket]", "n", 
             "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Abs", "[", "check", "]"}], "]"}], ">", 
         FractionBox["1", 
          SuperscriptBox["10", "11"]]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<Findroot failed with string\>\"", "]"}], 
         ";", 
         RowBox[{"Print", "[", "BN", "]"}], ";", 
         RowBox[{"bit", "=", "1"}], ";"}]}], "]"}], ";", 
      RowBox[{"EE", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"M", "\[NotEqual]", "0"}], ",", 
         RowBox[{"+", 
          RowBox[{"Total", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"2.", " ", "n"}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"sol", "\[LeftDoubleBracket]", 
                  RowBox[{"n", ",", "g"}], "\[RightDoubleBracket]"}], "2."], 
                "+", 
                SuperscriptBox["n", "2."]}]], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", "1", ",", 
                RowBox[{
                "string", "\[LeftDoubleBracket]", "n", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"-", 
          FractionBox["L", "4"]}]}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{"bit", ",", "EE", ",", "BN", ",", 
        RowBox[{"Chop", "[", "sol", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PIState", "[", 
    RowBox[{"string_", ",", "BN_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"BN1", ",", "BN2", ",", "i", ",", "check", ",", "tot"}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"BN1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"-", 
           RowBox[{
           "BN", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "BN", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"BN2", "=", 
       RowBox[{"Flatten", "[", "BN1", "]"}]}], ";", 
      RowBox[{"check", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"BN2", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "#1", "]"}], "<", 
           FractionBox["1", 
            SuperscriptBox["10", "13"]]}], "&"}]}], "]"}]}], ";", 
      RowBox[{"tot", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "BN", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "#1", "]"}], ">", "0"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BN", "\[Equal]", "BN1"}], "&&", 
         RowBox[{"check", "\[Equal]", 
          RowBox[{"{", "}"}]}]}], ",", "0", ",", "1"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NonZeroRap", "[", "rap_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rap1", ",", "check"}], "}"}], ",", 
     RowBox[{
      RowBox[{"rap1", "=", 
       RowBox[{"Flatten", "[", "rap", "]"}]}], ";", 
      RowBox[{"check", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"rap1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "#1", "]"}], "<", 
           FractionBox["1", 
            SuperscriptBox["10", "12"]]}], "&"}]}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"check", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "0", ",", "1"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Dtheta", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", "n"}], 
    RowBox[{
     SuperscriptBox["n", "2"], "+", 
     SuperscriptBox["x", "2"]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DTheta", "[", 
    RowBox[{"x_", ",", "m_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "\[NotEqual]", "m"}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"m", "-", "n"}], "]"}]}], 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"m", "-", "n"}], "]"}], "2"]}]], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"k", "+", 
           RowBox[{"Abs", "[", 
            RowBox[{"m", "-", "n"}], "]"}]}], 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"k", "+", 
              RowBox[{"Abs", "[", 
               RowBox[{"m", "-", "n"}], "]"}]}], ")"}], "2"]}]], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", 
           RowBox[{"n", "+", "m", "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"n", "-", "m"}], "]"}], "-", "2"}], ",", "2"}], "}"}]}], 
        "]"}]}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", "n"}], ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m", "+", "n"}], ")"}], "2"], "+", 
        SuperscriptBox["x", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         FractionBox["k", 
          RowBox[{
           SuperscriptBox["k", "2"], "+", 
           SuperscriptBox["x", "2"]}]], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", 
           RowBox[{
            RowBox[{"2", " ", "n"}], "-", "2"}], ",", "2"}], "}"}]}], "]"}]}],
       "+", 
      FractionBox[
       RowBox[{"4", " ", "n"}], 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["n", "2"]}], "+", 
        SuperscriptBox["x", "2"]}]]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PP", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "k", "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", "n", "]"}], ",", 
       FractionBox[
        RowBox[{"x", " ", 
         RowBox[{
          UnderoverscriptBox["\[Product]", 
           RowBox[{"k", "=", "0"}], 
           RowBox[{"Floor", "[", 
            FractionBox["n", "2"], "]"}]], 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "k"}], "+", "1"}], ")"}], "2"], "+", 
            SuperscriptBox["x", "2"]}], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", " ", "k"}], ")"}], "2"], "+", 
            SuperscriptBox["x", "2"]}]]}]}], 
        RowBox[{
         SuperscriptBox["4", "n"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["n", "2"], "+", 
           SuperscriptBox["x", "2"]}]]}]], ",", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["n", "2"], "+", 
           SuperscriptBox["x", "2"]}]], " ", 
         RowBox[{
          UnderoverscriptBox["\[Product]", 
           RowBox[{"k", "=", "0"}], 
           RowBox[{
            RowBox[{"Floor", "[", 
             FractionBox["n", "2"], "]"}], "-", "1"}]], 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", " ", "k"}], ")"}], "2"], "+", 
            SuperscriptBox["x", "2"]}], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "k"}], "+", "1"}], ")"}], "2"], "+", 
            SuperscriptBox["x", "2"]}]]}]}], 
        RowBox[{
         SuperscriptBox["4", "n"], " ", "x"}]]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CGm", "[", 
    RowBox[{
    "i1_", ",", "j1_", ",", "i2_", ",", "j2_", ",", "string_", ",", "rap_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "l"}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i1", "\[NotEqual]", "i2"}], "||", 
        RowBox[{"j1", "\[NotEqual]", "j2"}]}], ",", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"DTheta", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "-", 
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i2", ",", "j2"}], "\[RightDoubleBracket]"}]}], ",", 
            "i1", ",", "i2"}], "]"}], "-", 
          RowBox[{"DTheta", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "+", 
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i2", ",", "j2"}], "\[RightDoubleBracket]"}]}], ",", 
            "i1", ",", "i2"}], "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "1"}], ")"}], " ", 
         RowBox[{"Dtheta", "[", 
          RowBox[{
           RowBox[{"rap", "\[LeftDoubleBracket]", 
            RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], ",", "i1"}],
           "]"}]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], 
           RowBox[{"i1", "-", "1"}]], 
          RowBox[{"Dtheta", "[", 
           RowBox[{
            RowBox[{"rap", "\[LeftDoubleBracket]", 
             RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], ",", "k"}],
            "]"}]}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], 
           RowBox[{"Length", "[", "string", "]"}]], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"l", "=", "1"}], 
            RowBox[{
            "string", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i1", "\[NotEqual]", "k"}], "||", 
              RowBox[{"j1", "\[NotEqual]", "l"}]}], ",", 
             RowBox[{
              RowBox[{"DTheta", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "-", 
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "l"}], "\[RightDoubleBracket]"}]}], ",", 
                "i1", ",", "k"}], "]"}], "+", 
              RowBox[{"DTheta", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "+", 
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "l"}], "\[RightDoubleBracket]"}]}], ",", 
                "i1", ",", "k"}], "]"}]}], ",", "0"}], "]"}]}]}]}]}]}], 
      "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CGp", "[", 
    RowBox[{
    "i1_", ",", "j1_", ",", "i2_", ",", "j2_", ",", "string_", ",", "rap_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "l"}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i1", "\[NotEqual]", "i2"}], "||", 
        RowBox[{"j1", "\[NotEqual]", "j2"}]}], ",", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"DTheta", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "-", 
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i2", ",", "j2"}], "\[RightDoubleBracket]"}]}], ",", 
            "i1", ",", "i2"}], "]"}], "+", 
          RowBox[{"DTheta", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "+", 
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i2", ",", "j2"}], "\[RightDoubleBracket]"}]}], ",", 
            "i1", ",", "i2"}], "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", "L", " ", 
         RowBox[{"Dtheta", "[", 
          RowBox[{
           RowBox[{"rap", "\[LeftDoubleBracket]", 
            RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], ",", "i1"}],
           "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], 
           RowBox[{"Length", "[", "string", "]"}]], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"l", "=", "1"}], 
            RowBox[{
            "string", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i1", "\[NotEqual]", "k"}], "||", 
              RowBox[{"j1", "\[NotEqual]", "l"}]}], ",", 
             RowBox[{
              RowBox[{"DTheta", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "-", 
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "l"}], "\[RightDoubleBracket]"}]}], ",", 
                "i1", ",", "k"}], "]"}], "+", 
              RowBox[{"DTheta", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "+", 
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "l"}], "\[RightDoubleBracket]"}]}], ",", 
                "i1", ",", "k"}], "]"}]}], ",", "0"}], "]"}]}]}]}]}]}], 
      "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Overlap", "[", 
    RowBox[{"string_", ",", "rap_", ",", "NI_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"indx", ",", "ll", ",", "i", ",", "j", ",", "GGm", ",", "GGp"}],
       "}"}], ",", 
     RowBox[{
      RowBox[{"indx", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "j"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{
               "string", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "string", "]"}]}], "}"}]}], "]"}], ",", 
         "1"}], "]"}]}], ";", 
      RowBox[{"ll", "=", 
       RowBox[{"Total", "[", "string", "]"}]}], ";", 
      RowBox[{"GGm", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"CGm", "[", 
          RowBox[{
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}], ",", "string",
            ",", "rap"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ll"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "ll"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"GGp", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"CGp", "[", 
          RowBox[{
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}], ",", "string",
            ",", "rap"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ll"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "ll"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Det", "[", "GGp", "]"}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"Print", "[", 
         RowBox[{"Det", "[", "GGm", "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"NI", "!"}], " ", 
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Product]", 
             RowBox[{"i", "=", "1"}], 
             RowBox[{"Length", "[", "string", "]"}]], 
            RowBox[{
             UnderoverscriptBox["\[Product]", 
              RowBox[{"j", "=", "1"}], 
              RowBox[{
              "string", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]], 
             RowBox[{"PP", "[", 
              RowBox[{
               RowBox[{"rap", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], ",", 
               "i"}], "]"}]}]}], ")"}], " ", 
          SqrtBox[
           FractionBox[
            RowBox[{"Det", "[", "GGp", "]"}], 
            RowBox[{"Det", "[", "GGm", "]"}]]]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "NI"}], ")"}], "!"}]]], ")"}], "2"]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KK1", "[", "x_", "]"}], ":=", 
   FractionBox["2", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KK12", "[", "x_", "]"}], ":=", 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     FractionBox["1", "4"]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Kp", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"KK1", "[", 
     RowBox[{"x", "-", "y"}], "]"}], "+", 
    RowBox[{"KK1", "[", 
     RowBox[{"x", "+", "y"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Km", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"KK1", "[", 
     RowBox[{"x", "-", "y"}], "]"}], "-", 
    RowBox[{"KK1", "[", 
     RowBox[{"x", "+", "y"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Gp", "[", 
    RowBox[{"j_", ",", "k_", ",", "rap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"j", ",", "k"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"KK12", "[", 
         RowBox[{
         "rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
         "]"}]}], "-", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"p", "=", "1"}], 
         RowBox[{"Length", "[", "rap", "]"}]], 
        RowBox[{"Kp", "[", 
         RowBox[{
          RowBox[{
          "rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], ",", 
          
          RowBox[{
          "rap", "\[LeftDoubleBracket]", "p", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], ")"}]}], "+", 
    RowBox[{"Kp", "[", 
     RowBox[{
      RowBox[{"rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"rap", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
      "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Gm", "[", 
    RowBox[{"j_", ",", "k_", ",", "rap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"j", ",", "k"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"KK12", "[", 
         RowBox[{
         "rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
         "]"}]}], "-", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"p", "=", "1"}], 
         RowBox[{"Length", "[", "rap", "]"}]], 
        RowBox[{"Kp", "[", 
         RowBox[{
          RowBox[{
          "rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], ",", 
          
          RowBox[{
          "rap", "\[LeftDoubleBracket]", "p", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], ")"}]}], "+", 
    RowBox[{"Km", "[", 
     RowBox[{
      RowBox[{"rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"rap", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
      "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"string_", ",", "k_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z", ",", "cont"}], "}"}], ",", 
     RowBox[{
      RowBox[{"cont", "=", "1"}], ";", 
      RowBox[{"z", "=", "k"}], ";", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"z", ">", "0"}], ",", 
        RowBox[{
         RowBox[{"z", "=", 
          RowBox[{"z", "-", 
           RowBox[{
           "string", "\[LeftDoubleBracket]", "cont", 
            "\[RightDoubleBracket]"}]}]}], ";", 
         RowBox[{"cont", "++"}], ";"}]}], "]"}], ";", 
      RowBox[{"cont", "-", "1"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OverlapAll", "[", 
    RowBox[{"string_", ",", "rap1_", ",", "NI_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rap", ",", "rapstring", ",", "rpstr1", ",", "k", ",", "ll", ",", "i", 
       ",", "j", ",", "GGm", ",", "GGp"}], "}"}], ",", 
     RowBox[{
      RowBox[{"rapstring", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"rap", "=", 
       RowBox[{"Flatten", "[", "rap1", "]"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "rap", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"rapstring", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{
               "rap", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
               "2"], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"10", "^", 
                    RowBox[{"-", "5"}]}], ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "6"}]}]}], "}"}], "]"}]}], ")"}], " ", 
                "\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"index", "[", 
                   RowBox[{"string", ",", "k"}], "]"}], "+", "1", "-", 
                  RowBox[{"2", " ", "j"}]}], ")"}]}], "2."]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"index", "[", 
                RowBox[{"string", ",", "k"}], "]"}]}], "}"}]}], "]"}]}], 
          "]"}], ";"}]}], "]"}], ";", 
      RowBox[{"rpstr1", "=", 
       RowBox[{"Flatten", "[", "rapstring", "]"}]}], ";", 
      RowBox[{"ll", "=", 
       RowBox[{"Length", "[", "rpstr1", "]"}]}], ";", 
      RowBox[{"GGp", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Gp", "[", 
          RowBox[{"i", ",", "j", ",", "rpstr1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ll"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "ll"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"GGm", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Gm", "[", 
          RowBox[{"i", ",", "j", ",", "rpstr1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ll"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "ll"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Det", "[", "GGp", "]"}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"Print", "[", 
         RowBox[{"Det", "[", "GGm", "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"NI", "!"}], " ", 
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Product]", 
             RowBox[{"j", "=", "1"}], "ll"], 
            FractionBox[
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{
                "rpstr1", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}], "2"], "+", 
               FractionBox["1", "4"]}]], 
             RowBox[{"4", " ", 
              RowBox[{
              "rpstr1", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}]}]]}], ")"}], " ", 
          SqrtBox[
           FractionBox[
            RowBox[{"Det", "[", "GGp", "]"}], 
            RowBox[{"Det", "[", "GGm", "]"}]]]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "NI"}], ")"}], "!"}]]], ")"}], "2"]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"L", "=", "8"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cont", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        FractionBox["L", "2"]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{"M", "=", "i"}], ";", 
        RowBox[{"NI", "=", 
         RowBox[{
          FractionBox["L", "2"], "-", "i"}]}], ";", 
        RowBox[{"base", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerPart", "[", 
             FractionBox["M", "j"], "]"}], "+", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"initial", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"r", "=", "1"}], ",", 
          RowBox[{"r", "\[LessEqual]", 
           RowBox[{
            UnderoverscriptBox["\[Product]", 
             RowBox[{"b", "=", "1"}], "M"], 
            RowBox[{
            "base", "\[LeftDoubleBracket]", "b", 
             "\[RightDoubleBracket]"}]}]}], ",", 
          RowBox[{"r", "++"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"s", "=", "1"}], "M"], 
                RowBox[{"s", " ", 
                 RowBox[{
                 "initial", "\[LeftDoubleBracket]", "s", 
                  "\[RightDoubleBracket]"}]}]}], "\[Equal]", "M"}], ",", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"z", "=", "1"}], ",", 
                 RowBox[{"z", "\[LessEqual]", "M"}], ",", 
                 RowBox[{"z", "++"}], ",", 
                 RowBox[{
                  RowBox[{"supp", "=", 
                   RowBox[{"Table", "[", 
                    RowBox[{"kk", ",", 
                    RowBox[{"{", 
                    RowBox[{"kk", ",", "0.5", ",", 
                    RowBox[{"UpB", "[", 
                    RowBox[{"L", ",", "M", ",", "initial", ",", "z"}], 
                    "]"}]}], "}"}]}], "]"}]}], ";", 
                  RowBox[{"supp1", "=", "supp"}], ";", 
                  RowBox[{"PrependTo", "[", 
                   RowBox[{"supp1", ",", 
                    RowBox[{"-", "supp"}]}], "]"}], ";", 
                  RowBox[{"supp2", "=", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"Flatten", "[", "supp1", "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"tab", "[", "z", "]"}], "=", 
                   RowBox[{"Subsets", "[", 
                    RowBox[{"supp2", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "initial", "\[LeftDoubleBracket]", "z", 
                    "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"res", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"tab", "[", "i", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"res1", "=", 
                RowBox[{"Tuples", "[", "res", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{"{", 
                 RowBox[{"initial", ",", "res1"}], "}"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"pp", "=", "1"}], ",", 
                 RowBox[{"pp", "\[LessEqual]", 
                  RowBox[{"Length", "[", "res1", "]"}]}], ",", 
                 RowBox[{"pp", "++"}], ",", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"PIState", "[", 
                    RowBox[{"initial", ",", 
                    RowBox[{
                    "res1", "\[LeftDoubleBracket]", "pp", 
                    "\[RightDoubleBracket]"}]}], "]"}], "\[Equal]", "0"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"sol", "=", 
                    RowBox[{"SolveBethe", "[", 
                    RowBox[{"M", ",", "L", ",", "initial", ",", 
                    RowBox[{
                    "res1", "\[LeftDoubleBracket]", "pp", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"1", ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{
                    RowBox[{"string", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"Length", "[", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "k"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"rap1", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ",", "k"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"rap", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"rap1", "\[LeftDoubleBracket]", 
                    RowBox[{"k", ",", "j"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", 
                    RowBox[{
                    "string", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"overlap", "=", 
                    RowBox[{"Overlap", "[", 
                    RowBox[{"string", ",", "rap", ",", "NI"}], "]"}]}], ";", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"string", ",", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "]"}], ",", "overlap"}], "}"}],
                     "]"}]}]}], "]"}], ";", 
                    RowBox[{"cont", "++"}], ";", 
                    RowBox[{"Print", "[", "cont", "]"}], ";"}]}], "]"}], 
                    ";"}]}], "]"}], ";"}]}], "]"}], ";", 
               RowBox[{"Clear", "[", "tab", "]"}], ";"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"initial1", "=", 
              RowBox[{"incr", "[", 
               RowBox[{"initial", ",", "base"}], "]"}]}], ")"}]}], ";", 
           RowBox[{"initial", "=", "initial1"}], ";"}]}], "]"}]}]}], "]"}], 
     "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"data", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Strconf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data1", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data1", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"BNumbers", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"data1", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data1", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Rapidities", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data1", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data1", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Obs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data1", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"data1", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "5"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data1", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"filename", "=", 
   RowBox[{"\"\</scratch/valba/Neel/Rap_L\>\"", "<>", 
    RowBox[{"ToString", "[", "L", "]"}], "<>", "\"\<.dat\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"filename1", "=", 
   RowBox[{"\"\</scratch/valba/Neel/StrConf_L\>\"", "<>", 
    RowBox[{"ToString", "[", "L", "]"}], "<>", "\"\<.dat\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"filename2", "=", 
   RowBox[{"\"\</scratch/valba/Neel/Bnum_L\>\"", "<>", 
    RowBox[{"ToString", "[", "L", "]"}], "<>", "\"\<.dat\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"filename3", "=", 
   RowBox[{"\"\</scratch/valba/Neel/Obs_L\>\"", "<>", 
    RowBox[{"ToString", "[", "L", "]"}], "<>", "\"\<.dat\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"filename", ",", "Rapidities"}], "]"}], ";", "\n", 
    RowBox[{"Export", "[", 
     RowBox[{"filename1", ",", "Strconf"}], "]"}], ";", "\n", 
    RowBox[{"Export", "[", 
     RowBox[{"filename2", ",", "BNumbers"}], "]"}], ";", "\n", 
    RowBox[{"Export", "[", 
     RowBox[{"filename3", ",", "Obs"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6354236312785873`*^9, 3.6354237517913723`*^9}, {
   3.635423904421986*^9, 3.635423930204586*^9}, {3.635423976152244*^9, 
   3.635424181718834*^9}, {3.635424260635416*^9, 3.635424389266897*^9}, {
   3.635424565184187*^9, 3.6354245770201406`*^9}, {3.63542489902709*^9, 
   3.635425008421545*^9}, {3.635425056347101*^9, 3.6354250760280857`*^9}, {
   3.635425159348525*^9, 3.63542515949795*^9}, {3.635425285424698*^9, 
   3.6354252868336687`*^9}, {3.635425380872243*^9, 3.635425432567176*^9}, {
   3.63542550865761*^9, 3.635425610030199*^9}, {3.635425663189083*^9, 
   3.635425745590426*^9}, {3.6354257993141823`*^9, 3.635425800367653*^9}, {
   3.635425832545426*^9, 3.6354258327628803`*^9}, {3.6354259831693583`*^9, 
   3.635426183269014*^9}, {3.635426228902975*^9, 3.635426229561625*^9}, {
   3.6354266493257933`*^9, 3.635426649823649*^9}, {3.635426835543702*^9, 
   3.6354268522109423`*^9}, {3.6354277267577963`*^9, 3.635427736550942*^9}, {
   3.635427770914687*^9, 3.6354277715302343`*^9}, {3.6354278190142183`*^9, 
   3.635427833356921*^9}, {3.635427887762088*^9, 3.6354278884110107`*^9}, {
   3.635428520755871*^9, 3.635428555844569*^9}, {3.63542863087048*^9, 
   3.635428631290406*^9}, {3.635428858514666*^9, 3.6354288929478817`*^9}, 
   3.635428990944519*^9, {3.63542902137376*^9, 3.635429084692944*^9}, {
   3.6354292609386597`*^9, 3.63542926977496*^9}, {3.635429326438695*^9, 
   3.635429328258768*^9}, {3.635429377068595*^9, 3.635429377808359*^9}, {
   3.635429581382327*^9, 3.635429667888207*^9}, {3.6354298195632887`*^9, 
   3.6354298206846943`*^9}, {3.635431293532333*^9, 3.635431377395802*^9}, 
   3.635431407687256*^9, {3.6354314971690063`*^9, 3.635431546886409*^9}, {
   3.635431590994256*^9, 3.635431648337487*^9}, {3.635431914902245*^9, 
   3.63543191740724*^9}, {3.635431959642218*^9, 3.63543199352186*^9}, {
   3.6354321213715067`*^9, 3.635432125774922*^9}, {3.635432164592682*^9, 
   3.635432166088059*^9}, {3.635432211567053*^9, 3.635432212946269*^9}, {
   3.635432365073867*^9, 3.635432452937092*^9}, {3.6354325657208757`*^9, 
   3.6354325791747093`*^9}, {3.635432620072257*^9, 3.635432626295735*^9}, {
   3.635432680667193*^9, 3.635432704412753*^9}, {3.6354328366992197`*^9, 
   3.635432864666202*^9}, {3.635432901434751*^9, 3.635432937151971*^9}, {
   3.6354330655953217`*^9, 3.6354330661273537`*^9}, {3.635433105680546*^9, 
   3.635433172013257*^9}, {3.635433231228773*^9, 3.6354332671623173`*^9}, {
   3.635433316623226*^9, 3.6354333369830837`*^9}, {3.635433410330035*^9, 
   3.635433437220603*^9}, {3.635433553535544*^9, 3.635433628137754*^9}, {
   3.6354336801209087`*^9, 3.63543370002756*^9}, {3.635433832679685*^9, 
   3.635433882926126*^9}, {3.6354340779280787`*^9, 3.635434091002077*^9}, {
   3.635434246930129*^9, 3.635434258468412*^9}, {3.63543430664817*^9, 
   3.6354343096172523`*^9}, {3.63543441220681*^9, 3.635434442830501*^9}, {
   3.635434485980308*^9, 3.635434548070861*^9}, {3.635489017078773*^9, 
   3.635489018374918*^9}, {3.635513117146656*^9, 3.6355131377935038`*^9}, {
   3.635514664732347*^9, 3.6355146651678123`*^9}, {3.635515741630238*^9, 
   3.635515742039819*^9}, {3.6355761373994923`*^9, 3.6355761384592323`*^9}, {
   3.635599043020837*^9, 3.635599043206608*^9}, {3.638176638679144*^9, 
   3.6381766393361883`*^9}, {3.638176811235223*^9, 3.638176842372242*^9}, {
   3.638176891072126*^9, 3.638176893287096*^9}, {3.638176962365678*^9, 
   3.638176994167233*^9}, {3.638177056861507*^9, 3.638177057436181*^9}, {
   3.638177170686983*^9, 3.638177171118719*^9}, {3.63817743881738*^9, 
   3.638177463125338*^9}, {3.638177742937181*^9, 3.638177767590077*^9}, {
   3.638177848860137*^9, 3.638177857805573*^9}, {3.638177894390601*^9, 
   3.638177894669155*^9}, {3.6381779326051807`*^9, 3.638177981538254*^9}, {
   3.638178012417906*^9, 3.6381780309923267`*^9}, {3.638178816957205*^9, 
   3.638178843534603*^9}, 3.638179212273593*^9, {3.638179267601624*^9, 
   3.638179267847595*^9}, {3.638267265486907*^9, 3.638267266888994*^9}, {
   3.63850540838721*^9, 3.6385054475702457`*^9}, {3.638505592069748*^9, 
   3.638505600961385*^9}, {3.638505685982287*^9, 3.6385057012651777`*^9}, {
   3.6385057578437557`*^9, 3.638505764796328*^9}, {3.638505802762566*^9, 
   3.638505835601122*^9}, {3.638505865919106*^9, 3.638505871347518*^9}, {
   3.6385065539243307`*^9, 3.63850659130781*^9}, {3.6385068417787113`*^9, 
   3.638506854734082*^9}, {3.638619000566266*^9, 3.638619002759698*^9}, {
   3.6386196052927227`*^9, 3.638619618310808*^9}, {3.638619666206519*^9, 
   3.638619671795191*^9}, {3.6386197158421926`*^9, 3.638619728628134*^9}, {
   3.638620349572101*^9, 3.638620354769536*^9}, {3.638767506084137*^9, 
   3.6387675080059853`*^9}, {3.638768900694997*^9, 3.63876920453344*^9}, {
   3.638769249467758*^9, 3.638769253125758*^9}, {3.638769336041889*^9, 
   3.638769377264097*^9}, {3.638769434770131*^9, 3.638769464331519*^9}, {
   3.6387695090515137`*^9, 3.638769511446577*^9}, {3.6387698438606777`*^9, 
   3.638769851102272*^9}, {3.638770063329328*^9, 3.638770090296764*^9}, {
   3.638770157471792*^9, 3.638770170226712*^9}, {3.638770211689871*^9, 
   3.6387702143084917`*^9}, {3.638770251237688*^9, 3.6387702655494347`*^9}, {
   3.638770307981686*^9, 3.638770308536894*^9}, {3.638770429327923*^9, 
   3.6387704300875072`*^9}, {3.638770484917585*^9, 3.638770526003121*^9}, {
   3.638770618607972*^9, 3.638770628390328*^9}, {3.638770790484763*^9, 
   3.6387707911665983`*^9}, {3.6387709972996597`*^9, 3.638770998967599*^9}, {
   3.638771053180889*^9, 3.638771060549644*^9}, {3.638771416332206*^9, 
   3.638771483097818*^9}, {3.6387715422640743`*^9, 3.638771544376422*^9}, {
   3.638771657727934*^9, 3.638771662623946*^9}, {3.638771719720008*^9, 
   3.638771726739183*^9}, {3.6387717657449303`*^9, 3.6387718236504107`*^9}, {
   3.638771938380006*^9, 3.638771956692995*^9}, {3.6387720192155313`*^9, 
   3.638772046567194*^9}, {3.638772079392983*^9, 3.638772172995961*^9}, {
   3.6387771482831*^9, 3.6387771489663143`*^9}, {3.63877855510669*^9, 
   3.6387785941592293`*^9}, {3.638778677544365*^9, 3.638778806109448*^9}, {
   3.638779112743443*^9, 3.638779182077107*^9}, {3.638779340082382*^9, 
   3.638779469228271*^9}, {3.6387795412851553`*^9, 3.6387796243791313`*^9}, {
   3.638779946455542*^9, 3.6387799468765*^9}, {3.638779977405067*^9, 
   3.638779982430307*^9}, {3.6387800522428102`*^9, 3.638780052368435*^9}, {
   3.638780124036456*^9, 3.638780130851471*^9}, {3.638780248601347*^9, 
   3.638780252589024*^9}, {3.638780734378522*^9, 3.6387807531907787`*^9}, {
   3.638780810984153*^9, 3.638780814400083*^9}, {3.638780952600531*^9, 
   3.638780955308668*^9}, {3.6387810836811037`*^9, 3.63878109205713*^9}, {
   3.6387814559827013`*^9, 3.6387814587890987`*^9}, {3.638781532890861*^9, 
   3.638781533134357*^9}, {3.6387815933668623`*^9, 3.6387816240747643`*^9}, {
   3.638781824625935*^9, 3.638781892821314*^9}, {3.6387819433252163`*^9, 
   3.638781998573283*^9}, {3.638782034277433*^9, 3.6387820429481707`*^9}, {
   3.638782096628476*^9, 3.638782110807616*^9}, {3.638782576455875*^9, 
   3.6387825922808647`*^9}, {3.638782673072426*^9, 3.638782674875833*^9}, {
   3.638782845624694*^9, 3.638782848602338*^9}, {3.638783496641459*^9, 
   3.6387835280697947`*^9}, {3.6387835591946373`*^9, 3.638783559214365*^9}, {
   3.638784124133107*^9, 3.638784124791112*^9}, {3.6387842150279512`*^9, 
   3.638784215389943*^9}, {3.638784517383923*^9, 3.6387845174581327`*^9}, {
   3.6387855217942142`*^9, 3.6387855221417923`*^9}, {3.638785585265815*^9, 
   3.638785591560607*^9}, {3.638786699914157*^9, 3.638786700638838*^9}, {
   3.6387869513641863`*^9, 3.638786951450122*^9}, {3.638787550412409*^9, 
   3.638787637860566*^9}, {3.6387887891506166`*^9, 3.6387887892824497`*^9}, {
   3.6387900737663927`*^9, 3.638790074190091*^9}, {3.6387902771244802`*^9, 
   3.638790298220221*^9}, {3.638790344525104*^9, 3.638790410219376*^9}, {
   3.638790466992841*^9, 3.638790467163563*^9}, {3.638791261562833*^9, 
   3.6387912622461567`*^9}, {3.638792273367185*^9, 3.638792273499447*^9}, {
   3.6387946304411917`*^9, 3.6387946309724607`*^9}, {3.638795327541004*^9, 
   3.638795327685*^9}, {3.638850636321426*^9, 3.6388507168642597`*^9}, {
   3.638850934179388*^9, 3.638850935874004*^9}, 3.638851195582014*^9, {
   3.638851227837654*^9, 3.638851262372731*^9}, {3.638851525127749*^9, 
   3.638851527172536*^9}, {3.638851574374028*^9, 3.6388516620939417`*^9}, {
   3.6388517033797617`*^9, 3.6388517329405537`*^9}, {3.638851969827695*^9, 
   3.638851970353441*^9}, {3.638852074453719*^9, 3.638852079710121*^9}, {
   3.638852163882831*^9, 3.6388521678417997`*^9}, {3.638852462742834*^9, 
   3.638852611525152*^9}, {3.638852733383175*^9, 3.638852734487444*^9}, {
   3.638852862904894*^9, 3.638852877781446*^9}, {3.638852925512259*^9, 
   3.638852925652907*^9}, {3.638853094996999*^9, 3.638853106121567*^9}, 
   3.638853181108472*^9, {3.638853221857952*^9, 3.638853222580517*^9}, {
   3.638853264254827*^9, 3.638853264431308*^9}, {3.6388533527272263`*^9, 
   3.638853408393923*^9}, {3.638853527445527*^9, 3.638853532151367*^9}, {
   3.6388535674229507`*^9, 3.638853574293888*^9}, {3.638853646939972*^9, 
   3.6388536490811157`*^9}, {3.638853851876018*^9, 3.6388538586036167`*^9}, {
   3.638853999249457*^9, 3.6388540020344353`*^9}, {3.6388540494591618`*^9, 
   3.638854076895711*^9}, {3.63885422310592*^9, 3.638854252744994*^9}, {
   3.638854322182392*^9, 3.638854322313767*^9}, {3.638854525469817*^9, 
   3.638854600929237*^9}, {3.638854638874699*^9, 3.638854948886312*^9}, {
   3.6388549810046453`*^9, 3.63885498657521*^9}, {3.63885501826376*^9, 
   3.638855112999928*^9}, {3.638855230544702*^9, 3.638855243989765*^9}, {
   3.63885527949439*^9, 3.638855330289022*^9}, {3.6388553963180723`*^9, 
   3.638855401178281*^9}, {3.638855783593975*^9, 3.6388557923201036`*^9}, {
   3.638855845823675*^9, 3.638855848628436*^9}, {3.638855901625255*^9, 
   3.638855922152605*^9}, {3.638855978925282*^9, 3.638856001334196*^9}, {
   3.638856035805252*^9, 3.638856050347967*^9}, {3.6388560916017513`*^9, 
   3.638856095052541*^9}, {3.6388562005169573`*^9, 3.638856232874954*^9}, {
   3.638856351082138*^9, 3.638856352734502*^9}, {3.638856399308723*^9, 
   3.6388564055934963`*^9}, {3.638856543324037*^9, 3.638856562283661*^9}, {
   3.6388566932647343`*^9, 3.638856696520043*^9}, {3.638856757517859*^9, 
   3.638856810053171*^9}, {3.638856907643174*^9, 3.638856932712818*^9}, {
   3.638856987073732*^9, 3.63885698742974*^9}, {3.63885730671518*^9, 
   3.6388573100310373`*^9}, {3.638858109942684*^9, 3.638858120283042*^9}, {
   3.638858156724554*^9, 3.638858184365159*^9}, {3.638858307430923*^9, 
   3.6388583423478193`*^9}, {3.6388583840338163`*^9, 3.63885838430377*^9}, {
   3.638858549246059*^9, 3.6388585494549847`*^9}, {3.638858605313232*^9, 
   3.638858634990445*^9}, {3.638858679546104*^9, 3.638858687095964*^9}, {
   3.6388643788896217`*^9, 3.638864380732386*^9}, {3.6388644207781363`*^9, 
   3.638864443713728*^9}, {3.638864523788513*^9, 3.6388645628564377`*^9}, {
   3.638864665010851*^9, 3.638864723656837*^9}, {3.6388649499685783`*^9, 
   3.638864963711701*^9}, {3.6388650353558207`*^9, 3.6388650370211353`*^9}, 
   3.6388650837846127`*^9, 3.6388652105339746`*^9, {3.638865613411605*^9, 
   3.638865691491488*^9}, {3.638865757776621*^9, 3.638865766273131*^9}, {
   3.638865926229445*^9, 3.638865930730493*^9}, {3.638865967855706*^9, 
   3.638865976554564*^9}, {3.6388660398750057`*^9, 3.6388660400531063`*^9}, {
   3.638866267231351*^9, 3.638866272713036*^9}, {3.638866399059827*^9, 
   3.638866455866845*^9}, {3.638866562231975*^9, 3.638866626690528*^9}, {
   3.638866788244781*^9, 3.6388668434867363`*^9}, {3.638867063008132*^9, 
   3.6388670716192427`*^9}, {3.6388671862766027`*^9, 
   3.6388671987736797`*^9}, {3.6388678867449837`*^9, 3.638867907804605*^9}, {
   3.638868086512683*^9, 3.638868141054552*^9}, {3.6388682523623753`*^9, 
   3.638868257232367*^9}, 3.638868368892797*^9, {3.638868416659589*^9, 
   3.6388684351647053`*^9}, {3.638868706813321*^9, 3.638868709340467*^9}, {
   3.638868743181967*^9, 3.638868758758932*^9}, {3.638868829937091*^9, 
   3.638868836260995*^9}, {3.638868871725666*^9, 3.638868877313697*^9}, {
   3.638869032519063*^9, 3.638869038631497*^9}, {3.638869160596306*^9, 
   3.638869188443111*^9}, {3.6388692370432*^9, 3.63886923752787*^9}, {
   3.6388692967203836`*^9, 3.638869384221887*^9}, {3.6388694274019823`*^9, 
   3.6388694278601637`*^9}, {3.638870153853114*^9, 3.6388701748580112`*^9}, {
   3.638870221082087*^9, 3.638870221363469*^9}, {3.638872117165328*^9, 
   3.638872117559902*^9}, {3.6390450528272257`*^9, 3.639045052907444*^9}, {
   3.6390450928275414`*^9, 3.6390451340194674`*^9}, 3.63904572475101*^9, {
   3.639045830819524*^9, 3.639045856563002*^9}, {3.639045888699438*^9, 
   3.6390458891337223`*^9}, {3.639046105699087*^9, 3.639046106927146*^9}, {
   3.639046206224073*^9, 3.639046213980921*^9}, {3.639046520284876*^9, 
   3.6390465463704853`*^9}, {3.639046597296813*^9, 3.639046602484638*^9}, {
   3.639046678635517*^9, 3.639046679477787*^9}, {3.639046926241901*^9, 
   3.639046930810582*^9}, {3.6390469795323267`*^9, 3.6390469853435907`*^9}, {
   3.63904706503028*^9, 3.639047068437587*^9}, {3.639047102349155*^9, 
   3.6390471439929934`*^9}, {3.639047206476256*^9, 3.639047257863009*^9}, 
   3.639047299624238*^9, {3.6390473319120417`*^9, 3.639047350472734*^9}, {
   3.639047456553012*^9, 3.6390475607733307`*^9}, {3.639047608633304*^9, 
   3.639047649458158*^9}, {3.6390476930586643`*^9, 3.639047693363431*^9}, {
   3.639047822607889*^9, 3.639047823380946*^9}, {3.639052960466879*^9, 
   3.639052960557982*^9}, {3.639056060727415*^9, 3.6390560942980003`*^9}, {
   3.639056135632861*^9, 3.639056140508173*^9}, {3.639056224665674*^9, 
   3.639056224875491*^9}, {3.639056405462096*^9, 3.6390564058269672`*^9}, {
   3.639057185476322*^9, 3.639057254919897*^9}, {3.639057299961852*^9, 
   3.639057312509859*^9}, 3.6390580479741793`*^9, {3.639061288241848*^9, 
   3.6390612890240726`*^9}, {3.639061453718771*^9, 3.639061455361026*^9}, {
   3.639112191526309*^9, 3.6391122177291927`*^9}, {3.6391122727795143`*^9, 
   3.639112273725601*^9}, {3.639112793374634*^9, 3.6391128629972*^9}, {
   3.639112902634386*^9, 3.639112949536297*^9}, {3.6391129821569366`*^9, 
   3.639112994802504*^9}, {3.639113219838147*^9, 3.6391132483015327`*^9}, {
   3.639113296877754*^9, 3.6391133699851837`*^9}, {3.639113408115988*^9, 
   3.6391134137657223`*^9}, {3.639113451799795*^9, 3.639113466460832*^9}, {
   3.639113533054565*^9, 3.639113559671625*^9}, {3.639115151201788*^9, 
   3.639115151634779*^9}, {3.6391155601019697`*^9, 3.6391155804667873`*^9}, {
   3.639117774682846*^9, 3.6391178238360167`*^9}, {3.63912350033114*^9, 
   3.639123504238974*^9}, {3.63912365618442*^9, 3.6391236659772463`*^9}, {
   3.639123858331314*^9, 3.639123860593302*^9}, {3.639123907238667*^9, 
   3.6391239094570627`*^9}, {3.6391239462900963`*^9, 3.639123968919877*^9}, {
   3.639124016131238*^9, 3.639124046267811*^9}, {3.63912447774613*^9, 
   3.639124517970335*^9}, {3.639124550644135*^9, 3.639124616503972*^9}, {
   3.63913960995889*^9, 3.639139617399784*^9}, {3.6391400113137074`*^9, 
   3.639140058586665*^9}, 3.639140105412286*^9, {3.639140152539266*^9, 
   3.639140172750226*^9}, {3.63914042626624*^9, 3.639140444852804*^9}, {
   3.6391413932981052`*^9, 3.63914140333743*^9}, {3.639142084172091*^9, 
   3.639142101081654*^9}, {3.639142191047167*^9, 3.639142208849676*^9}, {
   3.639142285666424*^9, 3.63914231332628*^9}, {3.639142351879052*^9, 
   3.639142352291202*^9}, 3.6391424031198072`*^9, {3.639143007586062*^9, 
   3.639143007998547*^9}, {3.6391433071603823`*^9, 3.639143322433707*^9}, {
   3.639143889711123*^9, 3.639143921632045*^9}, {3.639143979932987*^9, 
   3.639143980163321*^9}, {3.639144417070836*^9, 3.639144417589121*^9}, {
   3.639144473454918*^9, 3.6391444747081633`*^9}, {3.639145163296174*^9, 
   3.639145177813692*^9}, {3.63914521365771*^9, 3.6391452265135117`*^9}, {
   3.639195975511345*^9, 3.639196030393969*^9}, {3.6391962486087313`*^9, 
   3.639196306394504*^9}, {3.639196355537601*^9, 3.639196355883192*^9}, {
   3.639196502806744*^9, 3.639196502873581*^9}, {3.6391965790625677`*^9, 
   3.639196579280835*^9}, {3.639196700236476*^9, 3.63919670606958*^9}, {
   3.639196949281967*^9, 3.6391969497726994`*^9}, {3.639197498404937*^9, 
   3.639197498819257*^9}, {3.639215085604341*^9, 3.639215086251011*^9}, {
   3.639571873555799*^9, 3.639572052607609*^9}, {3.639572083070962*^9, 
   3.639572120751172*^9}, {3.6395722705583363`*^9, 3.6395722710930367`*^9}, {
   3.6395723498029613`*^9, 3.639572399155304*^9}, {3.6395728467333612`*^9, 
   3.639572851576935*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"-", "2.5`"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"-", "1.5`"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"-", "0.5`"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "0.5`", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "1.5`", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "2.5`", "}"}], "}"}]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852175149*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.5`"}], ",", 
         RowBox[{"-", "1.5`"}]}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.5`"}], ",", 
         RowBox[{"-", "0.5`"}]}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.5`"}], ",", "0.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.5`"}], ",", "1.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.5`"}], ",", "2.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5`"}], ",", 
         RowBox[{"-", "0.5`"}]}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5`"}], ",", "0.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5`"}], ",", "1.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5`"}], ",", "2.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5`"}], ",", "1.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5`"}], ",", "2.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5`", ",", "1.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5`", ",", "2.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.5`", ",", "2.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852188678*^9}}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852189653*^9}}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.6395728521901703`*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.6395728521906767`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "1.5`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.5`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "0.5`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "1.5`", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.6395728522059317`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5`"}], ",", 
         RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5`"}], ",", 
         RowBox[{"-", "0.5`"}], ",", "1.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5`"}], ",", "0.5`", ",", "1.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5`"}], ",", "0.5`", ",", "1.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852206395*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"-", "1.5`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"-", "1.5`"}], "}"}], ",", 
       RowBox[{"{", "0.5`", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"-", "0.5`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"-", "0.5`"}], "}"}], ",", 
       RowBox[{"{", "0.5`", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.5`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.5`", "}"}], ",", 
       RowBox[{"{", "0.5`", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.5`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.5`"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.5`", "}"}], ",", 
       RowBox[{"{", "0.5`", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852216181*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.5`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "0.5`", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852216658*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5`"}], ",", 
        RowBox[{"-", "0.5`"}], ",", "0.5`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852220455*^9}}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852220854*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852222934*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852223284*^9}}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852233135*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.639572852240788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.639572403964796*^9, {3.639572835920611*^9, 3.6395728522411118`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["data1"], "Input",
 CellChangeTimes->{{3.639140395096499*^9, 3.639140396426409*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "0.7530203962825328`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.5`"}], ",", "2.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.07652139657233685714404140504210314973`15."}], ",", 
       "2.07652139657233669155820129090304715557`15."}], "}"}], ",", 
     "0.02933128841618134420753342992393341737`13.850243772213176"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "2.4450418679126287`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5`"}], ",", "1.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.79747338888240386387020328180088945782`15."}], ",", 
       "0.79747338888240394331034094207843354369`15."}], "}"}], ",", 
     "0.06124801258169434783553867014371156551`14.004918100991022"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "3.801937735804839`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.22824347439014991427391289811034766214`15."}], ",", 
       "0.22824347439014912215009317089051696717`15."}], "}"}], ",", 
     "0.48084927043069583947507013360975356442`14.187410436326"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     "5.651093408937177`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5`"}], ",", 
       RowBox[{"-", "0.5`"}], ",", "0.5`", ",", "1.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.05002420444733407498464224494351268923`15."}], ",", 
       RowBox[{"-", "0.25894589274985611243784179137872791462`15."}], ",", 
       "0.2589458927498574218589599577627472128`15.", ",", 
       "1.05002420444733386901439481745873596645`15."}], "}"}], ",", 
     "0.31728058170803570133517059292566976485`13.659951753492443"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     "1.636657182661848`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.94234390289404668835233634500651009514`15."}], ",", 
       "0.94234390289404670812524857598185935596`15."}], "}"}], ",", 
     "0.01725368619501205031204604876058131522`14.011584938443319"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.639140397247299*^9, 3.6391404350477133`*^9, 
  3.6395720589375896`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"string", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rap", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.001"}], ",", 
       "0.33515210869945453939108367357416738027`15."}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00001", "I"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6391412749154587`*^9, 3.6391413228431168`*^9}, {
  3.639141484319556*^9, 3.6391414965592623`*^9}, {3.6391415635602283`*^9, 
  3.639141564247385*^9}, {3.639141778758732*^9, 3.6391418049416122`*^9}, {
  3.639141973531043*^9, 3.6391419876736526`*^9}, {3.639143275195939*^9, 
  3.6391432906070347`*^9}, {3.6391444318355293`*^9, 3.639144452694515*^9}, {
  3.639225294123014*^9, 3.639225303518629*^9}, {3.6392253395403757`*^9, 
  3.639225383444117*^9}, {3.6392256186745453`*^9, 3.639225626646531*^9}, {
  3.639225728031877*^9, 3.639225734712091*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OverlapAll", "[", 
  RowBox[{"string", ",", "rap", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.639141303617463*^9, 3.6391413039132977`*^9}, 
   3.6391415014704523`*^9, {3.639141666472335*^9, 3.639141671120721*^9}, {
   3.639142137918872*^9, 3.63914213832682*^9}, {3.639142218557208*^9, 
   3.639142218877046*^9}, {3.639143931681237*^9, 3.6391439321854877`*^9}, {
   3.639144239011203*^9, 3.639144291018265*^9}, 3.639144461422822*^9, {
   3.639145196703183*^9, 3.639145197127543*^9}, {3.639225316494238*^9, 
   3.6392253272282877`*^9}, {3.6392257478208437`*^9, 3.639225748812598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "9.221153782028021`*^6"}], "+", 
  RowBox[{"2.2584567022089518`*^-9", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.6391415017870483`*^9, 3.639141566432835*^9, {3.639141667595916*^9, 
   3.639141671691373*^9}, 3.639141813769416*^9, 3.639141994625071*^9, {
   3.639142112731327*^9, 3.639142138886304*^9}, 3.639142219958506*^9, {
   3.639142296240159*^9, 3.639142320535947*^9}, 3.639142359887342*^9, 
   3.639143294255548*^9, 3.6391433312847757`*^9, {3.639143929016006*^9, 
   3.639143932805052*^9}, {3.639144241109556*^9, 3.6391442913250647`*^9}, {
   3.639144462377276*^9, 3.639144490626439*^9}, {3.6391451924295397`*^9, 
   3.639145197596776*^9}, 3.639145235212223*^9, {3.639225317999951*^9, 
   3.6392253864368*^9}, {3.639225622908729*^9, 3.6392256307552433`*^9}, {
   3.6392257308865128`*^9, 3.639225754908437*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Chop", "[", "Obs", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Obs", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", 
    RowBox[{"Obs", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "Obs", "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6391960491775837`*^9, 3.639196063423258*^9}, {
  3.639196143166349*^9, 3.6391961680085287`*^9}, {3.639196213062079*^9, 
  3.6391962273944798`*^9}, {3.6391968417465467`*^9, 3.639196847929685*^9}}],

Cell[BoxData["9.716594746897613`"], "Output",
 CellChangeTimes->{{3.639196050137933*^9, 3.639196063762473*^9}, 
   3.639196227985394*^9, {3.6391962604065523`*^9, 3.639196312683198*^9}, 
   3.639196365643093*^9, 3.6391965218989077`*^9, 3.639196622233267*^9, 
   3.639196848426112*^9, 3.6391973791948*^9, 3.6392144731238832`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ener", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"12", ",", "5.442962004927594`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "6.273031793352902`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "6.803029667635066`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "7.480630144534813`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "7.932998066031479`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "8.501662188231945`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "8.889187167849354`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26", ",", "9.379391750451337`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "9.716594746897613`"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ener", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"ener", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
       RowBox[{"ener", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "ener", "]"}]}], "}"}]}], "]"}], "//", 
  "ListPlot"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</u/he/valba/Dropbox/ETH/GGE/mathematica/test.dat\>\"", ",", "ener"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.63919626671196*^9, 3.63919633477949*^9}, {
  3.63919637131362*^9, 3.639196433295977*^9}, {3.6391965303132257`*^9, 
  3.639196533767972*^9}, {3.639196636875616*^9, 3.6391966402020473`*^9}, {
  3.639196856183935*^9, 3.639196860415983*^9}, {3.639197385334725*^9, 
  3.6391973888673*^9}, {3.639214478214168*^9, 3.639214481392963*^9}, {
  3.63921611598499*^9, 3.639216152935204*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{12., 0.4535801670772995}, {14., 0.44807369952520726`}, {16., 
      0.4251893542271916}, {18., 0.41559056358526736`}, {20., 
      0.396649903301574}, {22., 0.38643919037417934`}, {24., 
      0.3703827986603897}, {26., 0.36074583655582065`}, {28., 
      0.34702124096062903`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{11.75, 0.34169329465479553`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{12., 28.}, {0.34702124096062903`, 0.4535801670772995}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.639196419645851*^9, 3.639196434187394*^9}, 
   3.6391965352192917`*^9, 3.6391966410748873`*^9, 3.639196861790697*^9, 
   3.639197389741659*^9, 3.639214483041464*^9, 3.6392156887050047`*^9, 
   3.6392161546740627`*^9}],

Cell[BoxData["\<\"/u/he/valba/Dropbox/ETH/GGE/mathematica/test.dat\"\>"], \
"Output",
 CellChangeTimes->{{3.639196419645851*^9, 3.639196434187394*^9}, 
   3.6391965352192917`*^9, 3.6391966410748873`*^9, 3.639196861790697*^9, 
   3.639197389741659*^9, 3.639214483041464*^9, 3.6392156887050047`*^9, 
   3.639216154683235*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"6.3402", "*", "0.05274"}], "+", 
  RowBox[{"2.66666", "*", "0.0349596"}], "+", 
  RowBox[{"5.203653", "*", "0.015022"}], "+", 
  RowBox[{"3.7886939", "*", "0.0111444"}], "+", 
  RowBox[{"2.44429", "*", "0.0058879"}], "+", 
  RowBox[{"1.56067", "*", "0.00002698"}]}]], "Input",
 CellChangeTimes->{{3.639215711841035*^9, 3.639215865036353*^9}}],

Cell[BoxData["0.56243335256876`"], "Output",
 CellChangeTimes->{3.639215866169003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5.442962004927594", "+", "0.56243335256876`"}]], "Input",
 CellChangeTimes->{{3.639215957122367*^9, 3.639215957714593*^9}}],

Cell[BoxData["6.005395357496354`"], "Output",
 CellChangeTimes->{3.639215958395928*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", "\"\</scratch/valba/Neel/Obs_L32.dat\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.639226571460107*^9, 3.6392266235268383`*^9}, {
  3.6392779590657463`*^9, 3.639277959149456*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.639226626688044*^9, 3.639226630929544*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
F84SOLmBvgPvBsFqb96z2G8SGH0/511e5QdIzb5Ffq4mietiNM8rvlZAKnM8
2YBNAv3jzH+r79xFvLhsl82QLYHG/oMg3rKTKJSwLSgVlcRM2uP1dFJMRG05
i9TdAEl8Z/CgbSlrAmaPK25JD5TAxIuCnKf7J6HOnqnRhEUSrxxZ+mTycBIO
LlVfTE2QxB8Bf29qLI+Bu6zC+Z4l6nMzCy4xpWa46emRd5vaz+DD6LacMn4i
Mq80rtlAEsmtDgJHvPiJwkVaSm8vtbZMCMoy5SJUxY+3t6tKofcJ5f7D/1ag
48Ko35q4JP55JRApM6ZE0H/8V7q3XhJnm5MHXGqViHPt68nPjKTQY69s2+BD
eSJNrTOjukYKR7uGItnPsBAcJd/kZC0lUPMD3cyaeDtwkCQuvpuSQOlIsz8O
M23Qo7HlXMolSXx434b4xNYC4Yzw/AjVX0kHyC/kGXLhiXx4ss8bCdQtqNxM
CxuFokNVBtxnqXlp5RU4WI+C+aTiXqspSVTQiDqRevgz3Jof+2lA9fOGj2Ts
OfUKJrS1koJpJFHGez3oUQ4H0ZgfrZWbLIn3/aa4pgI5iNw36b4JklLU/FF5
1mWGhVDcV83tHkX154Ecd8Phn3CoTe7FWap/x36p/ZOQS60J+kPuTFJ44I5F
Vn/YTzjaG7D2JFkK3/d+/fyHmmeeRnCVnWCQxvD5HTVlU52AiiWxSTnU/HGM
JuZjsSixttyeJH1AClXcd53bFSFKmNpEvd42KIVyKXWDUYdJRNKhsq6UI9Ko
KUIn9U6OlngeKtCZxE3tpzBL+UK/JqFfKx0kXi2FrvyRtY9yNYlydQNfhaPS
uCgQ8CHbVJUY+vjAhu+dNAY6uX8jjfMSIxSD6ilNal5I8jIeYt+EkpTb+U3D
UhhlE82WP74BgduiOy8GSOPHwdaeqpBVGNu+fLVhSRpPHnQbcGn4BL2lU69s
qHmjo6OBxcxIgSBvlZiu4ZHGmOnZbZu8CkR5Ob3sj2ppjAr615F5QJq4Mi6+
Lq8mg0djmctOpO0mnsXg0aHvUmhgUFFubaVLJHm1uUnHSKP0xPRBVVVd4pK6
b7a5sgwKJudD6h9twrO1uIv+uQzqm7xkiwgTJ4LN9Z+ER0sj78yC2ttjxwi6
rTVBe9VlUOn4Mjez+jHizPTgXMG4DLau5LFN6JoRXHmV3cf8ZVH/UPvD5zOq
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
AK/tYunK3pYAFmqqJoceCGKTx96Yv6REaH5ndjJ7rxDeYI8x3lR/AGk91svX
CoSws+1/FF13PFcPF7bJ3nt97b2Skpx7IpRSMjOSbJKRbFmRkQqpkL1TRqis
7Er8yMhoCUVJCaFCvN7/z+eec56znuf+ce+G8LHIh/D7MFsQZasQUjNkVzk9
fQDVJ+lv2nkJo4w3yYJDqxJynv651cMigq6a5fPF+x4CjYMkaTleBC1ienJD
e1/AAy3JanE5YSRpODDl0U2CXWrKhch3wjhdf0U97cMkKGk/tYyIEMGiuVgd
EY1PcIUtTcB5QwRbUvd/On5pHdoX/p0QkxJEmeo/emN7o2GvTJhwX78gZtTN
XfSQvQz6J+IC2Hfyrf25NP5tOBaeeeS/8H8thIK5NEfjRHOg+rqjwHiBEPZb
3hHz5b8GTo6enH9MhHGtvCHHKus6zHR+6nqyIozmaUkNBR4psDjxn030ORGU
eV7J5dRdCnW7jilkDArjlSXDNNZXd2Fr0qbvcpwIZlbR9A8T2cA8LalkwSuK
NAy7Jxzz86A+4qxopqUokn0S4fh79TGk71NReFMogrs/PlX++K8GJP4w3/yg
JIqnQpIMG//WQvjd7zb/YkXxL3e5bW7dYxigVlXfeiGK/Akv+rKK+2HRM//4
M1pRjLfbCjRXmQG9GlWPemdRbKsYZrQ4Mgt28ze+iO/s/11nSTo9pnOw/4Ga
2A1yEvLyfHeJYCYnFk57OHfYieCqo+oun940OKm7mrvCIIqVnIX/bU7cAjGJ
2INRDqK4uk110PpNOmSc+5t9tFAUvYtfFL+sqYbqb9p63gaiSHdsyj72QyHo
ezExzZeIYo/D0dDmz0WQaFb4WWXH3/bwa/bh+lLoiLjD/kvv/+8veztvlbRC
d6xIOu1DUXxfWqyvTGqCtTM5GMVOwiUs1CuOb4bv21y95t4kdG3mk6FUbYNr
i0dSZh6TsIOeS68gagTSWLm+CX0RxY6r3ChyaAEmrlm/yTxCwieqP76Kj/wE
t1PFtc2lJDS8PMp1jGUZdAarVVsXSah8pl6s7SctkSxnWvBj5x7285ZHCT+u
gqYSawfFcyQcpXprx1xRDTf3hpoRPSSUbqdn/DxXA+tr6TOUnGJ4XEP8nPdq
N7y4ISkx50tCkaHUiraSZyDTn10uM0bCmpWZd2HPnkM1Y2l97z4x9M3h8/w+
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

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 20.674813866850208`}, {0, 0.00005632280177274241}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.639226631589666*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzdXWeMXcUVHr++3b1SFgwKQSkSKSSBYAMGE0hQiJIgihxswKwbuCxeE9sY
XHAn2IbYgsSRDQoKkKDIMgFEb4IfCIsSgUAgEIheJJpFc3bm3TvfnbnfmXef
MW9Xkfa9Nzsz97Q5c+bMmXPv/dXk7q7zZ03unnbu5M6JcyfP7pp27rzOEy+a
21uVH6DUgC6l1H87lS7v6S1GX3t6//ZM01+6BuV55qegvvrqK/XGG2+oV155
RX3xxRcnJ6rfeecd9eqrr6ovv/xyIu89kfduq6KYa35K6tNPP1Vr165VK1as
UBs2bFBLly5V77///gTTnFe7d+9Ws2bNMv/lzHdR3Xrrrab7Nddco9avX68+
++wzdaxpa3b6648AflwE/uabb1ZTp05VXV1dveD1d9l0160MTatL/P333682
b95ssd1+++3q+uuvnyAQo6XQ09NjIOn/t2zZoh5++OFjI2h+9wh6LqI1Am7+
Oyaqe+KJJwy9Wsb5CIyAJSJ9fnTlCy+8YLjT/x0vEPDQQw+prVu3xgQ88sgj
6rrrrjP/jSfjUySgj4mUoHfgzbVXX321ln8uwhhhsBgjFJ6Y33vvPfXcc8/Z
XnfeeafmaoJA9s6dO9Utt9wSk/3UU0+pdevWJchOXxJhiC+JEJj/qqpSNiJ+
4IEH1IIFC8zIJDAphqrF5eH5559X06ZNU5s2bVLXXnutmj9/vnrttdckHu64
4w510003xYCffPJJo77gIa1dAobjorH56KOP1KpVq4zII+iKgXfoLurBUosX
L9aQ1LPPPmsmVDw5X3rpJcOypiIe0ccee8yZEvfdd5/atm3bePESjqLav2L6
3nbbbRac/v/KK6+M0cQMRFjSDOTNuM2ePdto4IlR3Y4dO9SiRYscwrV8uru7
1bvvvqutl1q5cqXGNl68xAVdFXOrevHFF43kP/zwQ1Ov1UNruAC+NWlwi2rJ
kiUG4pw5c8znwQcftNL++OOPDeSkKXz00UdNnf7ceOONhqJjA/0Z/HGRqPW1
2sZo26EpXbNmjfrggw9May+enAGWt2gSoo6p1xg13/FHW6ATImr0oMaDmJTf
559/nrBBRaef/miYeQMtby0apmUVRlyfJ3Db0qvb4VE3bfgtKv19dGPaD9E/
e3TzCaaPc8Gky3eaT6v5/v+sq5jv6nIR1+mP7lPUpSYiwdb+VjdAVw2olsRx
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
ACffkRqrAf8Db+AlHA==\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.639226637081579*^9, 3.6392266511752663`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}]}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], "/", 
  "32"}]], "Input",
 CellChangeTimes->{{3.6392266545615683`*^9, 3.639226681481637*^9}, {
  3.63922676163393*^9, 3.6392267705513372`*^9}, {3.6392779803037043`*^9, 
  3.639277992614805*^9}}],

Cell[BoxData["0.32533164051696756`"], "Output",
 CellChangeTimes->{{3.639226664431724*^9, 3.6392266820980186`*^9}, {
  3.6392267656925287`*^9, 3.639226771622279*^9}, {3.639277964127984*^9, 
  3.639277993225156*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.32533164051696756`", "/", "0.6323334153953858`"}]], "Input",
 CellChangeTimes->{{3.639226776484967*^9, 3.6392267769258823`*^9}, {
  3.6392779768224087`*^9, 3.639277998494192*^9}}],

Cell[BoxData["0.5144938296729803`"], "Output",
 CellChangeTimes->{3.63922677756889*^9, 3.6392779994300222`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "32."}]], "Input",
 CellChangeTimes->{{3.639278010202629*^9, 3.639278011179534*^9}}],

Cell[BoxData["0.03125`"], "Output",
 CellChangeTimes->{3.639278011543707*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"L", "=", "32"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Q4", "[", 
    RowBox[{"rap_", ",", "k_"}], "]"}], ":=", 
   RowBox[{"2", "k", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k", "^", "2"}], "-", 
       RowBox[{"3", 
        RowBox[{"rap", "^", "2"}]}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", "^", "2"}], "+", 
        RowBox[{"rap", "^", "2"}]}], ")"}], "^", "3"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrConf", "=", 
   RowBox[{
   "Import", "[", "\"\</scratch/valba/Neel/StrConf_L32.dat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rapid", "=", 
   RowBox[{"Import", "[", "\"\</scratch/valba/Neel/Rap_L32.dat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Obs", "=", 
   RowBox[{"Import", "[", "\"\</scratch/valba/Neel/Obs_L32.dat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StrGuide", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "StrConf", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"supp", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", " ", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", 
             RowBox[{"StrConf", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"StrConf", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"supp", ",", "supp"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"StrGuide", ",", 
       RowBox[{"Flatten", "[", "supp", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q4", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Obs", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Q4", "[", 
          RowBox[{
           RowBox[{"Rapid", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
           RowBox[{"StrGuide", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"Rapid", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "Rapid", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"L", ",", 
   RowBox[{"q4", "/", "L"}], ",", 
   RowBox[{
    RowBox[{"q4", "/", "L"}], "/", 
    RowBox[{
     RowBox[{"Total", "[", "Obs", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"over", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Obs", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "Rapid", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ener", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Obs", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], 
       RowBox[{"Obs", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "Rapid", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"L", ",", "over"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"L", ",", 
    RowBox[{"ener", "/", "L"}]}], "}"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/Wft02Pxsq8dA6afvQCi97368QVEf791lCcBxN9V
7giinTL+gelDXw95g2gvjdZQEH1ulnkSiH5UdDwVRCszP8wD0TPKDxSC6F3R
F8tAtK/3+Uqwvo1cLSB6f69QO4g+s1R2EYienpq9CURHMe/dDaJdcv/eBNGV
C0/cBdHXDwq+BNExTw58BNEFtcG/QHTY9XMMiUC6LqxBEUTfSNj37jWQ9izZ
+B5Ev0zc9ANE7xFd9Q9E59RYWL8B0uauKfYguumh84dOudeOQcd/gOln++78
6gbSN/23/wbREpyPuHuA9J2/a3hAdNX2MA8Q3afl4wmizaVqSsDy9ZGlYFpy
76t9QNrx2JnXILrNnffOASDtlqN1F0QzbmT8AqJlNit+BdEFZmz/QLQQ03Mw
DQCif8qi
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"32", ",", "0.14160384058739905`", ",", "0.22393856965293707`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.639281360480569*^9, {3.639281423145279*^9, 3.6392814811450768`*^9}, {
   3.639281555177804*^9, 3.6392816027425137`*^9}, {3.639281683798037*^9, 
   3.639281935612814*^9}, 3.639566223179843*^9, 3.63956632985148*^9, {
   3.639566827762074*^9, 3.6395668478727417`*^9}, 3.639889814897051*^9, 
   3.639893986405589*^9, 3.639894118724218*^9, 3.639894228652854*^9, 
   3.639894607142405*^9, 3.639894955990137*^9, 3.639998303989966*^9, 
   3.640002021020029*^9, 3.6400022848397217`*^9, {3.64000237293351*^9, 
   3.640002377502075*^9}, 3.6400024738099422`*^9, 3.6400025549092817`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"32", ",", "0.6323334153953858`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639281360480569*^9, {3.639281423145279*^9, 3.6392814811450768`*^9}, {
   3.639281555177804*^9, 3.6392816027425137`*^9}, {3.639281683798037*^9, 
   3.639281935612814*^9}, 3.639566223179843*^9, 3.63956632985148*^9, {
   3.639566827762074*^9, 3.6395668478727417`*^9}, 3.639889814897051*^9, 
   3.639893986405589*^9, 3.639894118724218*^9, 3.639894228652854*^9, 
   3.639894607142405*^9, 3.639894955990137*^9, 3.639998303989966*^9, 
   3.640002021020029*^9, 3.6400022848397217`*^9, {3.64000237293351*^9, 
   3.640002377502075*^9}, 3.6400024738099422`*^9, 3.6400025549335012`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"32", ",", "0.32533164051696756`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.639281360480569*^9, {3.639281423145279*^9, 3.6392814811450768`*^9}, {
   3.639281555177804*^9, 3.6392816027425137`*^9}, {3.639281683798037*^9, 
   3.639281935612814*^9}, 3.639566223179843*^9, 3.63956632985148*^9, {
   3.639566827762074*^9, 3.6395668478727417`*^9}, 3.639889814897051*^9, 
   3.639893986405589*^9, 3.639894118724218*^9, 3.639894228652854*^9, 
   3.639894607142405*^9, 3.639894955990137*^9, 3.639998303989966*^9, 
   3.640002021020029*^9, 3.6400022848397217`*^9, {3.64000237293351*^9, 
   3.640002377502075*^9}, 3.6400024738099422`*^9, 3.6400025549352217`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "32."}]], "Input",
 CellChangeTimes->{{3.6395669044301567`*^9, 3.6395669049401007`*^9}, {
  3.6398898871926517`*^9, 3.639889888744927*^9}, {3.639894086507022*^9, 
  3.6398941065058813`*^9}, {3.640002339511373*^9, 3.640002339654778*^9}, {
  3.640002487404952*^9, 3.640002488332522*^9}, {3.6400025660510893`*^9, 
  3.640002566739154*^9}}],

Cell[BoxData["0.03125`"], "Output",
 CellChangeTimes->{
  3.639566905430106*^9, 3.639889889340109*^9, {3.639894087568818*^9, 
   3.6398941068805523`*^9}, 3.6400023402020073`*^9, 3.6400024887138653`*^9, 
   3.6400025673137493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["2", "9"]], "Input",
 CellChangeTimes->{{3.639901402657329*^9, 3.639901408080181*^9}}],

Cell[BoxData["512"], "Output",
 CellChangeTimes->{3.6399014088314753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "22."}]], "Input",
 CellChangeTimes->{{3.63956637973099*^9, 3.63956638215919*^9}, {
  3.639893958997551*^9, 3.639893962437029*^9}, {3.639894056136503*^9, 
  3.639894078819003*^9}}],

Cell[BoxData["0.045454545454545456`"], "Output",
 CellChangeTimes->{
  3.63956638245897*^9, 3.639893959644485*^9, 3.639893994837617*^9, {
   3.639894056875908*^9, 3.6398940794534683`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"final", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "12", ",", "0.21544525558115782`", ",", "0.24508250987484345`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "14", ",", "0.21133200535378388`", ",", "0.24458304993638233`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "16", ",", "0.19645296583800395`", ",", "0.23878965851944187`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "18", ",", "0.19031297612932313`", ",", "0.23726368787236488`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "20", ",", "0.17931900123949443`", ",", "0.23371091171042424`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "24", ",", "0.16469520000820517`", ",", "0.22961410184932096`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "26", ",", "0.15927149860295414`", ",", "0.22793719354281886`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "28", ",", "0.15238922209433667`", ",", "0.22635099242799725`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "30", ",", "0.14769613551641703`", ",", "0.22494164064176828`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "32", ",", "0.14160384058739905`", ",", "0.22393856965293707`"}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</u/he/valba/Dropbox/ETH/GGE/mathematica/q4.dat\>\"", ",", "final"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6392817713711843`*^9, 3.639281843474844*^9}, {
  3.639281874833333*^9, 3.639281948560939*^9}, {3.6392823913229017`*^9, 
  3.639282415822769*^9}}],

Cell[BoxData["\<\"/u/he/valba/Dropbox/ETH/GGE/mathematica/q4.dat\"\>"], \
"Output",
 CellChangeTimes->{3.6392824171712217`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[CapitalDelta]", "2"]}], 
   RowBox[{"D", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[CapitalDelta]", "2"]}], ")"}], 
      RowBox[{
       RowBox[{"Cosh", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[CapitalDelta]", "2"]}]], "x"}], "]"}], "-", 
       SuperscriptBox["\[CapitalDelta]", "2"]}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6392820572572937`*^9, 3.6392821682529287`*^9}, {
  3.639282249843059*^9, 3.6392822612740927`*^9}, {3.6392822930738373`*^9, 
  3.639282298353941*^9}, {3.6399022530252457`*^9, 3.639902265600239*^9}}],

Cell[BoxData[
 FractionBox["\[CapitalDelta]", "2"]], "Output",
 CellChangeTimes->{{3.63928212385983*^9, 3.6392821687865667`*^9}, {
  3.639282250578484*^9, 3.639282261632348*^9}, {3.639282293669668*^9, 
  3.639282299384564*^9}, {3.63990223871447*^9, 3.63990226597717*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "\[CapitalDelta]", " ", 
  RowBox[{"(", 
   FractionBox["6", "1"], ")"}]}]], "Input",
 CellChangeTimes->{{3.639282190675503*^9, 3.639282213034717*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"10", ",", "5"}], "]"}], "/", "2"}], "+", "512"}], 
  ")"}]], "Input",
 CellChangeTimes->{{3.639902663272848*^9, 3.639902671711667*^9}, {
  3.6399028241649323`*^9, 3.639902845300375*^9}}],

Cell[BoxData["638"], "Output",
 CellChangeTimes->{
  3.639902672155471*^9, {3.639902824760838*^9, 3.639902845817505*^9}}]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1650, 999},
WindowMargins->{{Automatic, 82}, {Automatic, 177}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 71304, 1710, 3962, "Input"],
Cell[CellGroupData[{
Cell[71909, 1736, 681, 22, 23, "Print"],
Cell[72593, 1760, 2851, 98, 43, "Print"],
Cell[75447, 1860, 118, 2, 23, "Print"],
Cell[75568, 1864, 120, 2, 23, "Print"],
Cell[75691, 1868, 120, 2, 23, "Print"],
Cell[75814, 1872, 759, 26, 23, "Print"],
Cell[76576, 1900, 1181, 38, 23, "Print"],
Cell[77760, 1940, 1707, 56, 23, "Print"],
Cell[79470, 1998, 575, 19, 23, "Print"],
Cell[80048, 2019, 528, 16, 23, "Print"],
Cell[80579, 2037, 118, 2, 23, "Print"],
Cell[80700, 2041, 251, 7, 23, "Print"],
Cell[80954, 2050, 478, 15, 23, "Print"],
Cell[81435, 2067, 118, 2, 23, "Print"],
Cell[81556, 2071, 251, 7, 23, "Print"],
Cell[81810, 2080, 253, 7, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82112, 2093, 97, 1, 32, "Input"],
Cell[82212, 2096, 2772, 73, 121, "Output"]
}, Open  ]],
Cell[84999, 2172, 1079, 25, 55, "Input"],
Cell[CellGroupData[{
Cell[86103, 2201, 614, 9, 32, "Input"],
Cell[86720, 2212, 872, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87629, 2231, 668, 17, 55, "Input"],
Cell[88300, 2250, 327, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88664, 2259, 1959, 52, 99, "Input"],
Cell[90626, 2313, 1375, 32, 240, "Output"],
Cell[92004, 2347, 323, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92364, 2357, 377, 8, 32, "Input"],
Cell[92744, 2367, 86, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92867, 2373, 147, 2, 32, "Input"],
Cell[93017, 2377, 87, 1, 32, "Output"]
}, Open  ]],
Cell[93119, 2381, 264, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[93408, 2391, 130, 2, 32, "Input"],
Cell[93541, 2395, 141762, 2337, 229, 134930, 2223, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[235318, 4735, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[235437, 4740, 585, 17, 32, "Input"],
Cell[236025, 4759, 215, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236277, 4767, 205, 3, 32, "Input"],
Cell[236485, 4772, 111, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236633, 4778, 117, 2, 32, "Input"],
Cell[236753, 4782, 77, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236867, 4788, 5001, 147, 451, "Input"],
Cell[241871, 4937, 724, 12, 32, "Output"],
Cell[242598, 4951, 691, 11, 32, "Output"],
Cell[243292, 4964, 692, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244021, 4980, 369, 6, 32, "Input"],
Cell[244393, 4988, 230, 4, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244660, 4997, 116, 2, 34, "Input"],
Cell[244779, 5001, 74, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244890, 5007, 213, 4, 32, "Input"],
Cell[245106, 5013, 188, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245331, 5021, 1690, 51, 143, "Input"],
Cell[247024, 5074, 127, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247188, 5081, 854, 24, 83, "Input"],
Cell[248045, 5107, 271, 4, 55, "Output"]
}, Open  ]],
Cell[248331, 5114, 205, 5, 58, "Input"],
Cell[CellGroupData[{
Cell[248561, 5123, 282, 8, 32, "Input"],
Cell[248846, 5133, 121, 2, 32, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
