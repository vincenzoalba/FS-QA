(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    367946,       8596]
NotebookOptionsPosition[    364081,       8463]
NotebookOutlinePosition[    364451,       8479]
CellTagsIndexPosition[    364408,       8476]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"incr", "[", 
    RowBox[{"digs_", ",", "base_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"carry", "=", "1"}], ",", 
       RowBox[{"ndigs", "=", "digs"}], ",", 
       RowBox[{"k", "=", "1"}], ",", "nd"}], "}"}], ",", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "digs", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"carry", ",", "nd"}], "}"}], "=", 
          RowBox[{"QuotientRemainder", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "ndigs", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
             "+", "carry"}], ",", 
            RowBox[{
            "base", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
           "]"}]}], ";", 
         RowBox[{
          RowBox[{
          "ndigs", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "=", "nd"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"carry", "\[Equal]", "0"}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
         RowBox[{"k", "=", 
          RowBox[{"k", "+", "1"}]}], ";"}]}], "]"}], ";", "ndigs"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BNArrange", "[", 
    RowBox[{"BNB_", ",", "conf_", ",", "string_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "cont", ",", "k", ",", "res", ",", "supp"}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"cont", "=", "1"}], ";", 
      RowBox[{"res", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "string", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"supp", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"BNB", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", 
              RowBox[{
              "conf", "\[LeftDoubleBracket]", "k", 
               "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "cont", ",", 
              RowBox[{"cont", "+", 
               RowBox[{
               "string", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
         ";", 
         RowBox[{"cont", "=", 
          RowBox[{"cont", "+", 
           RowBox[{
           "string", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}]}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"res", ",", "supp"}], "]"}], ";"}]}], "]"}], ";", "res"}]}],
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelBNB", "[", "BNB_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "check"}], "}"}], ",", 
     RowBox[{
      RowBox[{"check", "=", "0"}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "BNB", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
              "BNB", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "]"}], "-", "1"}]}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BNB", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
               "\[GreaterEqual]", 
               RowBox[{"BNB", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", 
                 RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], ",", 
              
              RowBox[{
               RowBox[{"check", "=", "1"}], ";"}]}], "]"}], ";"}]}], "]"}], 
         ";"}]}], "]"}], ";", "check"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenPI", "[", "BNconf_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "supp", ",", "supp1", ",", "fin"}], "}"}], ",", 
     RowBox[{
      RowBox[{"fin", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "BNconf", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"supp", "=", 
          RowBox[{"-", 
           RowBox[{
           "BNconf", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}]}], ";", 
         RowBox[{"supp1", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"Join", "[", 
            RowBox[{"supp", ",", 
             RowBox[{
             "BNconf", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"fin", ",", "supp1"}], "]"}], ";"}]}], "]"}], ";", 
      "fin"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"2.", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"i", ",", "j"}], "]"}]}], "-", 
    RowBox[{"1.", " ", 
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"i", ",", "j"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpB", "[", 
    RowBox[{"L_", ",", "M_", ",", "\[Alpha]_", ",", "n_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"L", "-", "1.", "-", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1."}], "M"], 
      RowBox[{
       RowBox[{"t", "[", 
        RowBox[{"n", ",", "j"}], "]"}], " ", 
       RowBox[{
       "\[Alpha]", "\[LeftDoubleBracket]", "j", 
        "\[RightDoubleBracket]"}]}]}]}], "2."]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenString", "[", "M_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "part", ",", "part1", ",", "pair", ",", "d", ",", "j", ",", "k", ",", 
       "m", ",", "p", ",", "check"}], "}"}], ",", 
     RowBox[{
      RowBox[{"m", "=", "M"}], ";", 
      RowBox[{"part", "=", 
       RowBox[{"Reap", "[", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"m", "\[NotEqual]", "0"}], ",", 
           RowBox[{
            RowBox[{"d", "=", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"1.", ",", 
                 RowBox[{"M", "+", "1", "-", 
                  FractionBox["1", 
                   SuperscriptBox["10", "12"]]}]}], "}"}], "]"}], "]"}]}], 
            ";", 
            RowBox[{"j", "=", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"1.", ",", 
                 RowBox[{"M", "+", "1", "-", 
                  FractionBox["1", 
                   SuperscriptBox["10", "12"]]}]}], "}"}], "]"}], "]"}]}], 
            ";", 
            RowBox[{"p", "=", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"p", "\[LessEqual]", 
               FractionBox[
                RowBox[{"d", " ", 
                 RowBox[{"PartitionsP", "[", 
                  RowBox[{"m", "-", 
                   RowBox[{"j", " ", "d"}]}], "]"}]}], 
                RowBox[{"m", " ", 
                 RowBox[{"PartitionsP", "[", "m", "]"}]}]]}], ",", 
              RowBox[{
               RowBox[{"Sow", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{"d", ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "1", ",", "j"}], "}"}]}], "]"}], "]"}], 
               ";", 
               RowBox[{"m", "=", 
                RowBox[{"m", "-", 
                 RowBox[{"j", " ", "d"}]}]}], ";"}]}], "]"}], ";"}]}], "]"}], 
         ";"}], "]"}]}], ";", 
      RowBox[{"part1", "=", 
       RowBox[{"Flatten", "[", "part", "]"}]}], ";", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"part1", ",", "i"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "M"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChooString", "[", 
    RowBox[{"M_", ",", "L_", ",", "strOl_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "string", ",", "mat", ",", "DDol", ",", "DDne", ",", "i", ",", "j", ",",
        "strNe", ",", "p", ",", "vec", ",", "vec1"}], "}"}], ",", 
     RowBox[{
      RowBox[{"string", "=", "strOl"}], ";", 
      RowBox[{"mat", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"t", "[", 
          RowBox[{"i", ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "M"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"DDol", "=", 
       RowBox[{
        UnderoverscriptBox["\[Product]", 
         RowBox[{"i", "=", "1"}], "M"], 
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"L", "-", 
           RowBox[{"Total", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"mat", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], " ", 
               RowBox[{
               "string", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}], "]"}]}], 
          ",", 
          RowBox[{
          "string", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], ";", 
      RowBox[{"strNe", "=", 
       RowBox[{"GenString", "[", "M", "]"}]}], ";", 
      RowBox[{"DDne", "=", 
       RowBox[{
        UnderoverscriptBox["\[Product]", 
         RowBox[{"i", "=", "1"}], "M"], 
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"L", "-", 
           RowBox[{"Total", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"mat", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], " ", 
               RowBox[{
               "strNe", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}], "]"}]}], 
          ",", 
          RowBox[{
          "strNe", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], ";", 
      RowBox[{"p", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[LessEqual]", 
         RowBox[{"Min", "[", 
          RowBox[{"1", ",", 
           FractionBox["DDne", "DDol"]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"string", "=", "strNe"}], ";"}]}], "]"}], ";", "string"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BTsel", "[", 
    RowBox[{"M_", ",", "L_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"J", ",", "n", ",", "k"}], "}"}], ",", 
     RowBox[{
      RowBox[{"J", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"k", ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"-", 
                RowBox[{"UpB", "[", 
                 RowBox[{"L", ",", "M", ",", "\[Alpha]", ",", "n"}], "]"}]}], 
               ",", 
               RowBox[{"UpB", "[", 
                RowBox[{"L", ",", "M", ",", "\[Alpha]", ",", "n"}], "]"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{
           "\[Alpha]", "\[LeftDoubleBracket]", "n", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", "J"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Theta", "[", 
    RowBox[{"x_", ",", "m_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "\[NotEqual]", "m"}], ",", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["x", 
         RowBox[{"Abs", "[", 
          RowBox[{"n", "-", "m"}], "]"}]], "]"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          FractionBox["x", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"n", "-", "m"}], "]"}], "+", "k"}]], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", 
           RowBox[{"n", "+", "m", "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"n", "-", "m"}], "]"}], "-", "2"}], ",", "2"}], "}"}]}], 
        "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["x", 
         RowBox[{"n", "+", "m"}]], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          FractionBox["x", "k"], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", 
           RowBox[{
            RowBox[{"2", " ", "n"}], "-", "2"}], ",", "2"}], "}"}]}], "]"}]}],
       "+", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["x", 
         RowBox[{"2", " ", "n"}]], "]"}]}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SolveBethe", "[", 
    RowBox[{"M_", ",", "L_", ",", "string_", ",", "BN_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sol", ",", "x", ",", "n", ",", "g", ",", "b", ",", "m", ",", "o", ",", 
       "h", ",", "check", ",", "sol1", ",", "bit", ",", "EE", ",", "EE1", ",",
        "EE2", ",", "EE3"}], "}"}], ",", 
     RowBox[{
      RowBox[{"check", "=", "1"}], ";", 
      RowBox[{"bit", "=", "0"}], ";", 
      RowBox[{"sol", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "n", "]"}], "[", "g", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"g", ",", "1", ",", 
             RowBox[{
             "string", "\[LeftDoubleBracket]", "n", 
              "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ArcTan", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"x", "[", "n", "]"}], "[", "g", "]"}], "n"], "]"}],
                 "-", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"BN", "\[LeftDoubleBracket]", 
                   RowBox[{"n", ",", "g"}], "\[RightDoubleBracket]"}]}], "L"],
                 "-", 
                FractionBox[
                 RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"m", "=", "1"}], "M"], 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"b", "=", "1"}], 
                    RowBox[{
                    "string", "\[LeftDoubleBracket]", "m", 
                    "\[RightDoubleBracket]"}]], 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"m", "\[NotEqual]", "n"}], "||", 
                    RowBox[{"b", "\[NotEqual]", "g"}]}], ",", 
                    RowBox[{"Theta", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "n", "]"}], "[", "g", "]"}], "-", 
                    RowBox[{
                    RowBox[{"x", "[", "m", "]"}], "[", "b", "]"}]}], ",", "m",
                     ",", "n"}], "]"}], ",", "0"}], "]"}]}]}], 
                 RowBox[{"2", " ", "L"}]]}], "\[Equal]", "0"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", "1", ",", 
                RowBox[{
                "string", "\[LeftDoubleBracket]", "n", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "o", "]"}], "[", "h", "]"}], ",", 
                 RowBox[{"RandomReal", "[", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"o", ",", "1", ",", "M"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"h", ",", "1", ",", 
                 RowBox[{
                 "string", "\[LeftDoubleBracket]", "o", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", "1"}], 
            "]"}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "15"}], ",", 
           RowBox[{"MaxIterations", "\[Rule]", "200"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "15"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{"check", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{
              "sol", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "g", "\[RightDoubleBracket]"}], "n"], 
            "]"}], "-", 
           FractionBox[
            RowBox[{"\[Pi]", " ", 
             RowBox[{"BN", "\[LeftDoubleBracket]", 
              RowBox[{"n", ",", "g"}], "\[RightDoubleBracket]"}]}], "L"], "-", 
           FractionBox[
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"m", "=", "1"}], "M"], 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"b", "=", "1"}], 
               RowBox[{
               "string", "\[LeftDoubleBracket]", "m", 
                "\[RightDoubleBracket]"}]], 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"m", "\[NotEqual]", "n"}], "||", 
                 RowBox[{"b", "\[NotEqual]", "g"}]}], ",", 
                RowBox[{"Theta", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "g", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "m", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "b", 
                    "\[RightDoubleBracket]"}]}], ",", "m", ",", "n"}], "]"}], 
                ",", "0"}], "]"}]}]}], 
            RowBox[{"2", " ", "L"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"g", ",", "1", ",", 
            RowBox[{
            "string", "\[LeftDoubleBracket]", "n", 
             "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Abs", "[", "check", "]"}], "]"}], ">", 
         FractionBox["1", 
          SuperscriptBox["10", "11"]]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<Findroot failed with string\>\"", "]"}], 
         ";", 
         RowBox[{"Print", "[", "BN", "]"}], ";", 
         RowBox[{"bit", "=", "1"}], ";"}]}], "]"}], ";", 
      RowBox[{"EE", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"M", "\[NotEqual]", "0"}], ",", 
         RowBox[{"+", 
          RowBox[{"Total", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"2.", " ", "n"}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"sol", "\[LeftDoubleBracket]", 
                  RowBox[{"n", ",", "g"}], "\[RightDoubleBracket]"}], "2."], 
                "+", 
                SuperscriptBox["n", "2."]}]], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "1", ",", "M"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", "1", ",", 
                RowBox[{
                "string", "\[LeftDoubleBracket]", "n", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"-", 
          FractionBox["L", "4"]}]}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{"bit", ",", "EE", ",", "BN", ",", 
        RowBox[{"Chop", "[", "sol", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PIState", "[", 
    RowBox[{"string_", ",", "BN_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"BN1", ",", "BN2", ",", "i", ",", "check", ",", "tot"}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"BN1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"-", 
           RowBox[{
           "BN", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "BN", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"BN2", "=", 
       RowBox[{"Flatten", "[", "BN1", "]"}]}], ";", 
      RowBox[{"check", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"BN2", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "#1", "]"}], "<", 
           FractionBox["1", 
            SuperscriptBox["10", "13"]]}], "&"}]}], "]"}]}], ";", 
      RowBox[{"tot", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "BN", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "#1", "]"}], ">", "0"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BN", "\[Equal]", "BN1"}], "&&", 
         RowBox[{"check", "\[Equal]", 
          RowBox[{"{", "}"}]}]}], ",", "0", ",", "1"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NonZeroRap", "[", "rap_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rap1", ",", "check"}], "}"}], ",", 
     RowBox[{
      RowBox[{"rap1", "=", 
       RowBox[{"Flatten", "[", "rap", "]"}]}], ";", 
      RowBox[{"check", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"rap1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "#1", "]"}], "<", 
           FractionBox["1", 
            SuperscriptBox["10", "12"]]}], "&"}]}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"check", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "0", ",", "1"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Dtheta", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", "n"}], 
    RowBox[{
     SuperscriptBox["n", "2"], "+", 
     SuperscriptBox["x", "2"]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DTheta", "[", 
    RowBox[{"x_", ",", "m_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "\[NotEqual]", "m"}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"m", "-", "n"}], "]"}]}], 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"m", "-", "n"}], "]"}], "2"]}]], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"k", "+", 
           RowBox[{"Abs", "[", 
            RowBox[{"m", "-", "n"}], "]"}]}], 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"k", "+", 
              RowBox[{"Abs", "[", 
               RowBox[{"m", "-", "n"}], "]"}]}], ")"}], "2"]}]], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", 
           RowBox[{"n", "+", "m", "-", 
            RowBox[{"Abs", "[", 
             RowBox[{"n", "-", "m"}], "]"}], "-", "2"}], ",", "2"}], "}"}]}], 
        "]"}]}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"m", "+", "n"}], ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m", "+", "n"}], ")"}], "2"], "+", 
        SuperscriptBox["x", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         FractionBox["k", 
          RowBox[{
           SuperscriptBox["k", "2"], "+", 
           SuperscriptBox["x", "2"]}]], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", 
           RowBox[{
            RowBox[{"2", " ", "n"}], "-", "2"}], ",", "2"}], "}"}]}], "]"}]}],
       "+", 
      FractionBox[
       RowBox[{"4", " ", "n"}], 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["n", "2"]}], "+", 
        SuperscriptBox["x", "2"]}]]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PP", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "k", "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", "n", "]"}], ",", 
       FractionBox[
        RowBox[{"x", " ", 
         RowBox[{
          UnderoverscriptBox["\[Product]", 
           RowBox[{"k", "=", "0"}], 
           RowBox[{"Floor", "[", 
            FractionBox["n", "2"], "]"}]], 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "k"}], "+", "1"}], ")"}], "2"], "+", 
            SuperscriptBox["x", "2"]}], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", " ", "k"}], ")"}], "2"], "+", 
            SuperscriptBox["x", "2"]}]]}]}], 
        RowBox[{
         SuperscriptBox["4", "n"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["n", "2"], "+", 
           SuperscriptBox["x", "2"]}]]}]], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"Re", "[", "x", "]"}], "]"}], ">", 
          SuperscriptBox["10", 
           RowBox[{"-", "13"}]]}], ",", 
         FractionBox[
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["n", "2"], "+", 
             SuperscriptBox["x", "2"]}]], " ", 
           RowBox[{
            UnderoverscriptBox["\[Product]", 
             RowBox[{"k", "=", "0"}], 
             RowBox[{
              RowBox[{"Floor", "[", 
               FractionBox["n", "2"], "]"}], "-", "1"}]], 
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"2", " ", "k"}], ")"}], "2"], "+", 
              SuperscriptBox["x", "2"]}], 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "k"}], "+", "1"}], ")"}], "2"], "+", 
              SuperscriptBox["x", "2"]}]]}]}], 
          RowBox[{
           SuperscriptBox["4", "n"], " ", "x"}]], ",", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{
            RowBox[{"n", "/", "2"}], "+", "1"}]], "n", " ", 
          SuperscriptBox["2", 
           RowBox[{
            RowBox[{"-", "2"}], "n"}]], " ", 
          RowBox[{
           UnderoverscriptBox["\[Product]", 
            RowBox[{"k", "=", "1"}], 
            RowBox[{
             RowBox[{"Floor", "[", 
              FractionBox["n", "2"], "]"}], "-", "1"}]], 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", " ", "k"}], ")"}], "2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "k"}], "+", "1"}], ")"}], "2"]]}]}]}], 
        "]"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PPMG", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "k", "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", "n", "]"}], ",", 
       RowBox[{
        SuperscriptBox["2", "n"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["n", "2"]}], ")"}], " ", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"k", "=", "0"}], 
          RowBox[{"Floor", "[", 
           FractionBox["n", "2"], "]"}]], 
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "k"}], "+", "1"}], ")"}], "2"], "+", 
             SuperscriptBox["x", "2"]}], ")"}], "2"]]}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"Re", "[", "x", "]"}], "]"}], ">", 
          SuperscriptBox["10", 
           RowBox[{"-", "13"}]]}], ",", 
         RowBox[{
          SuperscriptBox["2", "n"], " ", 
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["n", "2"]}], ")"}], " ", 
          RowBox[{
           UnderoverscriptBox["\[Product]", 
            RowBox[{"k", "=", "0"}], 
            FractionBox["n", "2"]], 
           FractionBox["1", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", " ", "k"}], ")"}], "2"], "+", 
               SuperscriptBox["x", "2"]}], ")"}], "2"]]}]}], ",", 
         RowBox[{
          FractionBox["I", "n"], " ", 
          SuperscriptBox["2", 
           RowBox[{"n", "/", "2"}]], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{
            RowBox[{"n", "/", "2"}], "+", "1"}]], 
          RowBox[{
           UnderoverscriptBox["\[Product]", 
            RowBox[{"k", "=", "1"}], 
            RowBox[{
             RowBox[{"n", "/", "2"}], "-", "1"}]], 
           FractionBox["1", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "k"}], ")"}], "2"]]}]}]}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CGm", "[", 
    RowBox[{
    "i1_", ",", "j1_", ",", "i2_", ",", "j2_", ",", "string_", ",", "rap_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "l"}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i1", "\[NotEqual]", "i2"}], "||", 
        RowBox[{"j1", "\[NotEqual]", "j2"}]}], ",", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"DTheta", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "-", 
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i2", ",", "j2"}], "\[RightDoubleBracket]"}]}], ",", 
            "i1", ",", "i2"}], "]"}], "-", 
          RowBox[{"DTheta", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "+", 
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i2", ",", "j2"}], "\[RightDoubleBracket]"}]}], ",", 
            "i1", ",", "i2"}], "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "1"}], ")"}], " ", 
         RowBox[{"Dtheta", "[", 
          RowBox[{
           RowBox[{"rap", "\[LeftDoubleBracket]", 
            RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], ",", "i1"}],
           "]"}]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], 
           RowBox[{"i1", "-", "1"}]], 
          RowBox[{"Dtheta", "[", 
           RowBox[{
            RowBox[{"rap", "\[LeftDoubleBracket]", 
             RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], ",", "k"}],
            "]"}]}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], 
           RowBox[{"Length", "[", "string", "]"}]], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"l", "=", "1"}], 
            RowBox[{
            "string", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i1", "\[NotEqual]", "k"}], "||", 
              RowBox[{"j1", "\[NotEqual]", "l"}]}], ",", 
             RowBox[{
              RowBox[{"DTheta", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "-", 
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "l"}], "\[RightDoubleBracket]"}]}], ",", 
                "i1", ",", "k"}], "]"}], "+", 
              RowBox[{"DTheta", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "+", 
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "l"}], "\[RightDoubleBracket]"}]}], ",", 
                "i1", ",", "k"}], "]"}]}], ",", "0"}], "]"}]}]}]}]}]}], 
      "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CGp", "[", 
    RowBox[{
    "i1_", ",", "j1_", ",", "i2_", ",", "j2_", ",", "string_", ",", "rap_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", "l"}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i1", "\[NotEqual]", "i2"}], "||", 
        RowBox[{"j1", "\[NotEqual]", "j2"}]}], ",", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"DTheta", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "-", 
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i2", ",", "j2"}], "\[RightDoubleBracket]"}]}], ",", 
            "i1", ",", "i2"}], "]"}], "+", 
          RowBox[{"DTheta", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "+", 
             RowBox[{"rap", "\[LeftDoubleBracket]", 
              RowBox[{"i2", ",", "j2"}], "\[RightDoubleBracket]"}]}], ",", 
            "i1", ",", "i2"}], "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", "L", " ", 
         RowBox[{"Dtheta", "[", 
          RowBox[{
           RowBox[{"rap", "\[LeftDoubleBracket]", 
            RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], ",", "i1"}],
           "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], 
           RowBox[{"Length", "[", "string", "]"}]], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"l", "=", "1"}], 
            RowBox[{
            "string", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"i1", "\[NotEqual]", "k"}], "||", 
              RowBox[{"j1", "\[NotEqual]", "l"}]}], ",", 
             RowBox[{
              RowBox[{"DTheta", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "-", 
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "l"}], "\[RightDoubleBracket]"}]}], ",", 
                "i1", ",", "k"}], "]"}], "+", 
              RowBox[{"DTheta", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "+", 
                 RowBox[{"rap", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "l"}], "\[RightDoubleBracket]"}]}], ",", 
                "i1", ",", "k"}], "]"}]}], ",", "0"}], "]"}]}]}]}]}]}], 
      "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Overlap", "[", 
    RowBox[{"string_", ",", "rap_", ",", "NI_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"indx", ",", "ll", ",", "i", ",", "j", ",", "GGm", ",", "GGp"}],
       "}"}], ",", 
     RowBox[{
      RowBox[{"indx", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "j"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{
               "string", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "string", "]"}]}], "}"}]}], "]"}], ",", 
         "1"}], "]"}]}], ";", 
      RowBox[{"ll", "=", 
       RowBox[{"Total", "[", "string", "]"}]}], ";", 
      RowBox[{"GGm", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"CGm", "[", 
          RowBox[{
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}], ",", "string",
            ",", "rap"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ll"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "ll"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"GGp", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"CGp", "[", 
          RowBox[{
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"indx", "\[LeftDoubleBracket]", 
            RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}], ",", "string",
            ",", "rap"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ll"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "ll"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", " ", 
       SqrtBox[
        FractionBox[
         RowBox[{"Det", "[", "GGp", "]"}], 
         RowBox[{"Det", "[", "GGm", "]"}]]], "]"}], ";", 
      "\[IndentingNewLine]", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"NI", "!"}], " ", 
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Product]", 
             RowBox[{"i", "=", "1"}], 
             RowBox[{"Length", "[", "string", "]"}]], 
            RowBox[{
             UnderoverscriptBox["\[Product]", 
              RowBox[{"j", "=", "1"}], 
              RowBox[{
              "string", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]], 
             RowBox[{"PP", "[", 
              RowBox[{
               RowBox[{"rap", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], ",", 
               "i"}], "]"}]}]}], ")"}], " ", 
          SqrtBox[
           FractionBox[
            RowBox[{"Det", "[", "GGp", "]"}], 
            RowBox[{"Det", "[", "GGm", "]"}]]]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "NI"}], ")"}], "!"}]]], ")"}], "2"]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OverlapMG", "[", 
    RowBox[{"string_", ",", "rap_", ",", "M_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "j", "}"}], ",", 
     RowBox[{
      RowBox[{"Overlap", "[", 
       RowBox[{"string", ",", "rap", ",", "0"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         UnderoverscriptBox["\[Product]", 
          RowBox[{"i", "=", "1"}], 
          RowBox[{"Length", "[", "string", "]"}]], 
         RowBox[{
          UnderoverscriptBox["\[Product]", 
           RowBox[{"j", "=", "1"}], 
           RowBox[{
           "string", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
          
          RowBox[{"PPMG", "[", 
           RowBox[{
            RowBox[{"rap", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], ",", "i"}], 
           "]"}]}]}], ")"}], "2"]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KK1", "[", "x_", "]"}], ":=", 
   FractionBox["2", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KK12", "[", "x_", "]"}], ":=", 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     FractionBox["1", "4"]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Kp", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"KK1", "[", 
     RowBox[{"x", "-", "y"}], "]"}], "+", 
    RowBox[{"KK1", "[", 
     RowBox[{"x", "+", "y"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Km", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"KK1", "[", 
     RowBox[{"x", "-", "y"}], "]"}], "-", 
    RowBox[{"KK1", "[", 
     RowBox[{"x", "+", "y"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Gp", "[", 
    RowBox[{"j_", ",", "k_", ",", "rap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"j", ",", "k"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"KK12", "[", 
         RowBox[{
         "rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
         "]"}]}], "-", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"p", "=", "1"}], 
         RowBox[{"Length", "[", "rap", "]"}]], 
        RowBox[{"Kp", "[", 
         RowBox[{
          RowBox[{
          "rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], ",", 
          
          RowBox[{
          "rap", "\[LeftDoubleBracket]", "p", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], ")"}]}], "+", 
    RowBox[{"Kp", "[", 
     RowBox[{
      RowBox[{"rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"rap", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
      "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Gm", "[", 
    RowBox[{"j_", ",", "k_", ",", "rap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"j", ",", "k"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"KK12", "[", 
         RowBox[{
         "rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
         "]"}]}], "-", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"p", "=", "1"}], 
         RowBox[{"Length", "[", "rap", "]"}]], 
        RowBox[{"Kp", "[", 
         RowBox[{
          RowBox[{
          "rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], ",", 
          
          RowBox[{
          "rap", "\[LeftDoubleBracket]", "p", "\[RightDoubleBracket]"}]}], 
         "]"}]}]}], ")"}]}], "+", 
    RowBox[{"Km", "[", 
     RowBox[{
      RowBox[{"rap", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"rap", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
      "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"index", "[", 
    RowBox[{"string_", ",", "k_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z", ",", "cont"}], "}"}], ",", 
     RowBox[{
      RowBox[{"cont", "=", "1"}], ";", 
      RowBox[{"z", "=", "k"}], ";", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"z", ">", "0"}], ",", 
        RowBox[{
         RowBox[{"z", "=", 
          RowBox[{"z", "-", 
           RowBox[{
           "string", "\[LeftDoubleBracket]", "cont", 
            "\[RightDoubleBracket]"}]}]}], ";", 
         RowBox[{"cont", "++"}], ";"}]}], "]"}], ";", 
      RowBox[{"cont", "-", "1"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OverlapAll", "[", 
    RowBox[{"string_", ",", "rap1_", ",", "NI_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rap", ",", "rapstring", ",", "rpstr1", ",", "k", ",", "ll", ",", "i", 
       ",", "j", ",", "GGm", ",", "GGp"}], "}"}], ",", 
     RowBox[{
      RowBox[{"rapstring", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"rap", "=", 
       RowBox[{"Flatten", "[", "rap1", "]"}]}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "rap", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"rapstring", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{
               "rap", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
               "2"], "+", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox["10", "5"]], ",", 
                    FractionBox["1", 
                    SuperscriptBox["10", "6"]]}], "}"}], "]"}]}], ")"}], " ", 
                "\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"index", "[", 
                   RowBox[{"string", ",", "k"}], "]"}], "+", "1", "-", 
                  RowBox[{"2", " ", "j"}]}], ")"}]}], "2."]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"index", "[", 
                RowBox[{"string", ",", "k"}], "]"}]}], "}"}]}], "]"}]}], 
          "]"}], ";"}]}], "]"}], ";", 
      RowBox[{"rpstr1", "=", 
       RowBox[{"Flatten", "[", "rapstring", "]"}]}], ";", 
      RowBox[{"ll", "=", 
       RowBox[{"Length", "[", "rpstr1", "]"}]}], ";", 
      RowBox[{"GGp", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Gp", "[", 
          RowBox[{"i", ",", "j", ",", "rpstr1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ll"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "ll"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"GGm", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Gm", "[", 
          RowBox[{"i", ",", "j", ",", "rpstr1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ll"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "ll"}], "}"}]}], "]"}]}], ";", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"NI", "!"}], " ", 
          RowBox[{"(", 
           RowBox[{
            UnderoverscriptBox["\[Product]", 
             RowBox[{"j", "=", "1"}], "ll"], 
            FractionBox[
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{
                "rpstr1", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}], "2"], "+", 
               FractionBox["1", "4"]}]], 
             RowBox[{"4", " ", 
              RowBox[{
              "rpstr1", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}]}]]}], ")"}], " ", 
          SqrtBox[
           FractionBox[
            RowBox[{"Det", "[", "GGp", "]"}], 
            RowBox[{"Det", "[", "GGm", "]"}]]]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "NI"}], ")"}], "!"}]]], ")"}], "2"]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"L", "=", "8"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cont", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        FractionBox["L", "2"]}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        FractionBox["L", "2"]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{"M", "=", "i"}], ";", 
        RowBox[{"NI", "=", 
         RowBox[{
          FractionBox["L", "2"], "-", "i"}]}], ";", 
        RowBox[{"base", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerPart", "[", 
             FractionBox["M", "j"], "]"}], "+", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"initial", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"r", "=", "1"}], ",", 
          RowBox[{"r", "\[LessEqual]", 
           RowBox[{
            UnderoverscriptBox["\[Product]", 
             RowBox[{"b", "=", "1"}], "M"], 
            RowBox[{
            "base", "\[LeftDoubleBracket]", "b", 
             "\[RightDoubleBracket]"}]}]}], ",", 
          RowBox[{"r", "++"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"s", "=", "1"}], "M"], 
               RowBox[{"s", " ", 
                RowBox[{
                "initial", "\[LeftDoubleBracket]", "s", 
                 "\[RightDoubleBracket]"}]}]}], "\[Equal]", "M"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Total", "[", 
                  RowBox[{"EvenQ", "[", "initial", "]"}], "]"}], "\[Equal]", 
                 RowBox[{
                  RowBox[{"Length", "[", "initial", "]"}], " ", "True"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"string", "=", 
                  FractionBox["initial", "2"]}], ";", 
                 RowBox[{"BNBounds", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"kk", ",", 
                    RowBox[{"{", 
                    RowBox[{"kk", ",", "0.5", ",", 
                    RowBox[{"UpB", "[", 
                    RowBox[{"L", ",", "M", ",", 
                    RowBox[{"2", " ", "string"}], ",", "zz"}], "]"}]}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"zz", ",", "1", ",", 
                    RowBox[{"Length", "[", "string", "]"}]}], "}"}]}], 
                   "]"}]}], ";", 
                 RowBox[{"Lbounds", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "BNBounds", "\[LeftDoubleBracket]", "ii", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", "1", ",", 
                    RowBox[{"Length", "[", "BNBounds", "]"}]}], "}"}]}], 
                   "]"}]}], ";", 
                 RowBox[{"BNbase", "=", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    "Lbounds", "\[LeftDoubleBracket]", "ii", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"jj", ",", "1", ",", 
                    RowBox[{
                    "string", "\[LeftDoubleBracket]", "ii", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", "1", ",", 
                    RowBox[{"Length", "[", "string", "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", 
                 RowBox[{"BNinit", "=", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", "1", ",", 
                    RowBox[{"Length", "[", "BNbase", "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", 
                 RowBox[{"shift", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", "1", ",", 
                    RowBox[{"Length", "[", "BNbase", "]"}]}], "}"}]}], 
                   "]"}]}], ";", 
                 RowBox[{"new1", "=", 
                  RowBox[{"BNinit", "+", "shift"}]}], ";", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"rr", "=", "1"}], ",", 
                   RowBox[{"rr", "\[LessEqual]", 
                    RowBox[{
                    UnderoverscriptBox["\[Product]", 
                    RowBox[{"ii", "=", "1"}], 
                    RowBox[{"Length", "[", "BNbase", "]"}]], 
                    RowBox[{
                    "BNbase", "\[LeftDoubleBracket]", "ii", 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                   RowBox[{"rr", "++"}], ",", 
                   RowBox[{
                    RowBox[{"x", "=", 
                    RowBox[{"BNArrange", "[", 
                    RowBox[{"BNBounds", ",", "new1", ",", "string"}], "]"}]}],
                     ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SelBNB", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{
                    RowBox[{"BNPI", "=", 
                    RowBox[{"GenPI", "[", "x", "]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"SolveBethe", "[", 
                    RowBox[{"M", ",", "L", ",", "initial", ",", "BNPI"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{
                    RowBox[{"rap1", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ",", "k"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"rap", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"rap1", "\[LeftDoubleBracket]", 
                    RowBox[{"k", ",", "j"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", 
                    RowBox[{
                    "string", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"overlap", "=", 
                    RowBox[{"OverlapMG", "[", 
                    RowBox[{"string", ",", "rap", ",", "0"}], "]"}]}], ";", 
                    RowBox[{"cont", "++"}], ";", 
                    RowBox[{"Print", "[", "cont", "]"}], ";", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"string", ",", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "]"}], ",", "overlap"}], "}"}],
                     "]"}], ";"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"new", "=", 
                    RowBox[{"incr", "[", 
                    RowBox[{"BNinit", ",", "BNbase"}], "]"}]}], ";", 
                    RowBox[{"BNinit", "=", "new"}], ";", 
                    RowBox[{"new1", "=", 
                    RowBox[{"new", "+", "shift"}]}], ";"}]}], "]"}], ";"}]}], 
               "]"}], ";"}]}], "]"}], ";", 
           RowBox[{"initial1", "=", 
            RowBox[{"incr", "[", 
             RowBox[{"initial", ",", "base"}], "]"}]}], ";", 
           RowBox[{"initial", "=", "initial1"}], ";"}]}], "]"}]}]}], "]"}], 
     "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"data", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Strconf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data1", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data1", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"BNumbers", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"data1", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data1", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Rapidities", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"data1", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data1", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Obs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data1", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"data1", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "5"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data1", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"filename", "=", 
   RowBox[{"\"\</scratch/valba/Dimer/Rap_L\>\"", "<>", 
    RowBox[{"ToString", "[", "L", "]"}], "<>", "\"\<.dat\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"filename1", "=", 
   RowBox[{"\"\</scratch/valba/Dimer/StrConf_L\>\"", "<>", 
    RowBox[{"ToString", "[", "L", "]"}], "<>", "\"\<.dat\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"filename2", "=", 
   RowBox[{"\"\</scratch/valba/Dimer/Bnum_L\>\"", "<>", 
    RowBox[{"ToString", "[", "L", "]"}], "<>", "\"\<.dat\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"filename3", "=", 
   RowBox[{"\"\</scratch/valba/Dimer/Obs_L\>\"", "<>", 
    RowBox[{"ToString", "[", "L", "]"}], "<>", "\"\<.dat\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"filename", ",", "Rapidities"}], "]"}], ";", "\n", 
    RowBox[{"Export", "[", 
     RowBox[{"filename1", ",", "Strconf"}], "]"}], ";", "\n", 
    RowBox[{"Export", "[", 
     RowBox[{"filename2", ",", "BNumbers"}], "]"}], ";", "\n", 
    RowBox[{"Export", "[", 
     RowBox[{"filename3", ",", "Obs"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6354236312785873`*^9, 3.6354237517913723`*^9}, {
   3.635423904421986*^9, 3.635423930204586*^9}, {3.635423976152244*^9, 
   3.635424181718834*^9}, {3.635424260635416*^9, 3.635424389266897*^9}, {
   3.635424565184187*^9, 3.6354245770201406`*^9}, {3.63542489902709*^9, 
   3.635425008421545*^9}, {3.635425056347101*^9, 3.6354250760280857`*^9}, {
   3.635425159348525*^9, 3.63542515949795*^9}, {3.635425285424698*^9, 
   3.6354252868336687`*^9}, {3.635425380872243*^9, 3.635425432567176*^9}, {
   3.63542550865761*^9, 3.635425610030199*^9}, {3.635425663189083*^9, 
   3.635425745590426*^9}, {3.6354257993141823`*^9, 3.635425800367653*^9}, {
   3.635425832545426*^9, 3.6354258327628803`*^9}, {3.6354259831693583`*^9, 
   3.635426183269014*^9}, {3.635426228902975*^9, 3.635426229561625*^9}, {
   3.6354266493257933`*^9, 3.635426649823649*^9}, {3.635426835543702*^9, 
   3.6354268522109423`*^9}, {3.6354277267577963`*^9, 3.635427736550942*^9}, {
   3.635427770914687*^9, 3.6354277715302343`*^9}, {3.6354278190142183`*^9, 
   3.635427833356921*^9}, {3.635427887762088*^9, 3.6354278884110107`*^9}, {
   3.635428520755871*^9, 3.635428555844569*^9}, {3.63542863087048*^9, 
   3.635428631290406*^9}, {3.635428858514666*^9, 3.6354288929478817`*^9}, 
   3.635428990944519*^9, {3.63542902137376*^9, 3.635429084692944*^9}, {
   3.6354292609386597`*^9, 3.63542926977496*^9}, {3.635429326438695*^9, 
   3.635429328258768*^9}, {3.635429377068595*^9, 3.635429377808359*^9}, {
   3.635429581382327*^9, 3.635429667888207*^9}, {3.6354298195632887`*^9, 
   3.6354298206846943`*^9}, {3.635431293532333*^9, 3.635431377395802*^9}, 
   3.635431407687256*^9, {3.6354314971690063`*^9, 3.635431546886409*^9}, {
   3.635431590994256*^9, 3.635431648337487*^9}, {3.635431914902245*^9, 
   3.63543191740724*^9}, {3.635431959642218*^9, 3.63543199352186*^9}, {
   3.6354321213715067`*^9, 3.635432125774922*^9}, {3.635432164592682*^9, 
   3.635432166088059*^9}, {3.635432211567053*^9, 3.635432212946269*^9}, {
   3.635432365073867*^9, 3.635432452937092*^9}, {3.6354325657208757`*^9, 
   3.6354325791747093`*^9}, {3.635432620072257*^9, 3.635432626295735*^9}, {
   3.635432680667193*^9, 3.635432704412753*^9}, {3.6354328366992197`*^9, 
   3.635432864666202*^9}, {3.635432901434751*^9, 3.635432937151971*^9}, {
   3.6354330655953217`*^9, 3.6354330661273537`*^9}, {3.635433105680546*^9, 
   3.635433172013257*^9}, {3.635433231228773*^9, 3.6354332671623173`*^9}, {
   3.635433316623226*^9, 3.6354333369830837`*^9}, {3.635433410330035*^9, 
   3.635433437220603*^9}, {3.635433553535544*^9, 3.635433628137754*^9}, {
   3.6354336801209087`*^9, 3.63543370002756*^9}, {3.635433832679685*^9, 
   3.635433882926126*^9}, {3.6354340779280787`*^9, 3.635434091002077*^9}, {
   3.635434246930129*^9, 3.635434258468412*^9}, {3.63543430664817*^9, 
   3.6354343096172523`*^9}, {3.63543441220681*^9, 3.635434442830501*^9}, {
   3.635434485980308*^9, 3.635434548070861*^9}, {3.635489017078773*^9, 
   3.635489018374918*^9}, {3.635513117146656*^9, 3.6355131377935038`*^9}, {
   3.635514664732347*^9, 3.6355146651678123`*^9}, {3.635515741630238*^9, 
   3.635515742039819*^9}, {3.6355761373994923`*^9, 3.6355761384592323`*^9}, {
   3.635599043020837*^9, 3.635599043206608*^9}, {3.638176638679144*^9, 
   3.6381766393361883`*^9}, {3.638176811235223*^9, 3.638176842372242*^9}, {
   3.638176891072126*^9, 3.638176893287096*^9}, {3.638176962365678*^9, 
   3.638176994167233*^9}, {3.638177056861507*^9, 3.638177057436181*^9}, {
   3.638177170686983*^9, 3.638177171118719*^9}, {3.63817743881738*^9, 
   3.638177463125338*^9}, {3.638177742937181*^9, 3.638177767590077*^9}, {
   3.638177848860137*^9, 3.638177857805573*^9}, {3.638177894390601*^9, 
   3.638177894669155*^9}, {3.6381779326051807`*^9, 3.638177981538254*^9}, {
   3.638178012417906*^9, 3.6381780309923267`*^9}, {3.638178816957205*^9, 
   3.638178843534603*^9}, 3.638179212273593*^9, {3.638179267601624*^9, 
   3.638179267847595*^9}, {3.638267265486907*^9, 3.638267266888994*^9}, {
   3.63850540838721*^9, 3.6385054475702457`*^9}, {3.638505592069748*^9, 
   3.638505600961385*^9}, {3.638505685982287*^9, 3.6385057012651777`*^9}, {
   3.6385057578437557`*^9, 3.638505764796328*^9}, {3.638505802762566*^9, 
   3.638505835601122*^9}, {3.638505865919106*^9, 3.638505871347518*^9}, {
   3.6385065539243307`*^9, 3.63850659130781*^9}, {3.6385068417787113`*^9, 
   3.638506854734082*^9}, {3.638619000566266*^9, 3.638619002759698*^9}, {
   3.6386196052927227`*^9, 3.638619618310808*^9}, {3.638619666206519*^9, 
   3.638619671795191*^9}, {3.6386197158421926`*^9, 3.638619728628134*^9}, {
   3.638620349572101*^9, 3.638620354769536*^9}, {3.638767506084137*^9, 
   3.6387675080059853`*^9}, {3.638768900694997*^9, 3.63876920453344*^9}, {
   3.638769249467758*^9, 3.638769253125758*^9}, {3.638769336041889*^9, 
   3.638769377264097*^9}, {3.638769434770131*^9, 3.638769464331519*^9}, {
   3.6387695090515137`*^9, 3.638769511446577*^9}, {3.6387698438606777`*^9, 
   3.638769851102272*^9}, {3.638770063329328*^9, 3.638770090296764*^9}, {
   3.638770157471792*^9, 3.638770170226712*^9}, {3.638770211689871*^9, 
   3.6387702143084917`*^9}, {3.638770251237688*^9, 3.6387702655494347`*^9}, {
   3.638770307981686*^9, 3.638770308536894*^9}, {3.638770429327923*^9, 
   3.6387704300875072`*^9}, {3.638770484917585*^9, 3.638770526003121*^9}, {
   3.638770618607972*^9, 3.638770628390328*^9}, {3.638770790484763*^9, 
   3.6387707911665983`*^9}, {3.6387709972996597`*^9, 3.638770998967599*^9}, {
   3.638771053180889*^9, 3.638771060549644*^9}, {3.638771416332206*^9, 
   3.638771483097818*^9}, {3.6387715422640743`*^9, 3.638771544376422*^9}, {
   3.638771657727934*^9, 3.638771662623946*^9}, {3.638771719720008*^9, 
   3.638771726739183*^9}, {3.6387717657449303`*^9, 3.6387718236504107`*^9}, {
   3.638771938380006*^9, 3.638771956692995*^9}, {3.6387720192155313`*^9, 
   3.638772046567194*^9}, {3.638772079392983*^9, 3.638772172995961*^9}, {
   3.6387771482831*^9, 3.6387771489663143`*^9}, {3.63877855510669*^9, 
   3.6387785941592293`*^9}, {3.638778677544365*^9, 3.638778806109448*^9}, {
   3.638779112743443*^9, 3.638779182077107*^9}, {3.638779340082382*^9, 
   3.638779469228271*^9}, {3.6387795412851553`*^9, 3.6387796243791313`*^9}, {
   3.638779946455542*^9, 3.6387799468765*^9}, {3.638779977405067*^9, 
   3.638779982430307*^9}, {3.6387800522428102`*^9, 3.638780052368435*^9}, {
   3.638780124036456*^9, 3.638780130851471*^9}, {3.638780248601347*^9, 
   3.638780252589024*^9}, {3.638780734378522*^9, 3.6387807531907787`*^9}, {
   3.638780810984153*^9, 3.638780814400083*^9}, {3.638780952600531*^9, 
   3.638780955308668*^9}, {3.6387810836811037`*^9, 3.63878109205713*^9}, {
   3.6387814559827013`*^9, 3.6387814587890987`*^9}, {3.638781532890861*^9, 
   3.638781533134357*^9}, {3.6387815933668623`*^9, 3.6387816240747643`*^9}, {
   3.638781824625935*^9, 3.638781892821314*^9}, {3.6387819433252163`*^9, 
   3.638781998573283*^9}, {3.638782034277433*^9, 3.6387820429481707`*^9}, {
   3.638782096628476*^9, 3.638782110807616*^9}, {3.638782576455875*^9, 
   3.6387825922808647`*^9}, {3.638782673072426*^9, 3.638782674875833*^9}, {
   3.638782845624694*^9, 3.638782848602338*^9}, {3.638783496641459*^9, 
   3.6387835280697947`*^9}, {3.6387835591946373`*^9, 3.638783559214365*^9}, {
   3.638784124133107*^9, 3.638784124791112*^9}, {3.6387842150279512`*^9, 
   3.638784215389943*^9}, {3.638784517383923*^9, 3.6387845174581327`*^9}, {
   3.6387855217942142`*^9, 3.6387855221417923`*^9}, {3.638785585265815*^9, 
   3.638785591560607*^9}, {3.638786699914157*^9, 3.638786700638838*^9}, {
   3.6387869513641863`*^9, 3.638786951450122*^9}, {3.638787550412409*^9, 
   3.638787637860566*^9}, {3.6387887891506166`*^9, 3.6387887892824497`*^9}, {
   3.6387900737663927`*^9, 3.638790074190091*^9}, {3.6387902771244802`*^9, 
   3.638790298220221*^9}, {3.638790344525104*^9, 3.638790410219376*^9}, {
   3.638790466992841*^9, 3.638790467163563*^9}, {3.638791261562833*^9, 
   3.6387912622461567`*^9}, {3.638792273367185*^9, 3.638792273499447*^9}, {
   3.6387946304411917`*^9, 3.6387946309724607`*^9}, {3.638795327541004*^9, 
   3.638795327685*^9}, {3.638850636321426*^9, 3.6388507168642597`*^9}, {
   3.638850934179388*^9, 3.638850935874004*^9}, 3.638851195582014*^9, {
   3.638851227837654*^9, 3.638851262372731*^9}, {3.638851525127749*^9, 
   3.638851527172536*^9}, {3.638851574374028*^9, 3.6388516620939417`*^9}, {
   3.6388517033797617`*^9, 3.6388517329405537`*^9}, {3.638851969827695*^9, 
   3.638851970353441*^9}, {3.638852074453719*^9, 3.638852079710121*^9}, {
   3.638852163882831*^9, 3.6388521678417997`*^9}, {3.638852462742834*^9, 
   3.638852611525152*^9}, {3.638852733383175*^9, 3.638852734487444*^9}, {
   3.638852862904894*^9, 3.638852877781446*^9}, {3.638852925512259*^9, 
   3.638852925652907*^9}, {3.638853094996999*^9, 3.638853106121567*^9}, 
   3.638853181108472*^9, {3.638853221857952*^9, 3.638853222580517*^9}, {
   3.638853264254827*^9, 3.638853264431308*^9}, {3.6388533527272263`*^9, 
   3.638853408393923*^9}, {3.638853527445527*^9, 3.638853532151367*^9}, {
   3.6388535674229507`*^9, 3.638853574293888*^9}, {3.638853646939972*^9, 
   3.6388536490811157`*^9}, {3.638853851876018*^9, 3.6388538586036167`*^9}, {
   3.638853999249457*^9, 3.6388540020344353`*^9}, {3.6388540494591618`*^9, 
   3.638854076895711*^9}, {3.63885422310592*^9, 3.638854252744994*^9}, {
   3.638854322182392*^9, 3.638854322313767*^9}, {3.638854525469817*^9, 
   3.638854600929237*^9}, {3.638854638874699*^9, 3.638854948886312*^9}, {
   3.6388549810046453`*^9, 3.63885498657521*^9}, {3.63885501826376*^9, 
   3.638855112999928*^9}, {3.638855230544702*^9, 3.638855243989765*^9}, {
   3.63885527949439*^9, 3.638855330289022*^9}, {3.6388553963180723`*^9, 
   3.638855401178281*^9}, {3.638855783593975*^9, 3.6388557923201036`*^9}, {
   3.638855845823675*^9, 3.638855848628436*^9}, {3.638855901625255*^9, 
   3.638855922152605*^9}, {3.638855978925282*^9, 3.638856001334196*^9}, {
   3.638856035805252*^9, 3.638856050347967*^9}, {3.6388560916017513`*^9, 
   3.638856095052541*^9}, {3.6388562005169573`*^9, 3.638856232874954*^9}, {
   3.638856351082138*^9, 3.638856352734502*^9}, {3.638856399308723*^9, 
   3.6388564055934963`*^9}, {3.638856543324037*^9, 3.638856562283661*^9}, {
   3.6388566932647343`*^9, 3.638856696520043*^9}, {3.638856757517859*^9, 
   3.638856810053171*^9}, {3.638856907643174*^9, 3.638856932712818*^9}, {
   3.638856987073732*^9, 3.63885698742974*^9}, {3.63885730671518*^9, 
   3.6388573100310373`*^9}, {3.638858109942684*^9, 3.638858120283042*^9}, {
   3.638858156724554*^9, 3.638858184365159*^9}, {3.638858307430923*^9, 
   3.6388583423478193`*^9}, {3.6388583840338163`*^9, 3.63885838430377*^9}, {
   3.638858549246059*^9, 3.6388585494549847`*^9}, {3.638858605313232*^9, 
   3.638858634990445*^9}, {3.638858679546104*^9, 3.638858687095964*^9}, {
   3.6388643788896217`*^9, 3.638864380732386*^9}, {3.6388644207781363`*^9, 
   3.638864443713728*^9}, {3.638864523788513*^9, 3.6388645628564377`*^9}, {
   3.638864665010851*^9, 3.638864723656837*^9}, {3.6388649499685783`*^9, 
   3.638864963711701*^9}, {3.6388650353558207`*^9, 3.6388650370211353`*^9}, 
   3.6388650837846127`*^9, 3.6388652105339746`*^9, {3.638865613411605*^9, 
   3.638865691491488*^9}, {3.638865757776621*^9, 3.638865766273131*^9}, {
   3.638865926229445*^9, 3.638865930730493*^9}, {3.638865967855706*^9, 
   3.638865976554564*^9}, {3.6388660398750057`*^9, 3.6388660400531063`*^9}, {
   3.638866267231351*^9, 3.638866272713036*^9}, {3.638866399059827*^9, 
   3.638866455866845*^9}, {3.638866562231975*^9, 3.638866626690528*^9}, {
   3.638866788244781*^9, 3.6388668434867363`*^9}, {3.638867063008132*^9, 
   3.6388670716192427`*^9}, {3.6388671862766027`*^9, 
   3.6388671987736797`*^9}, {3.6388678867449837`*^9, 3.638867907804605*^9}, {
   3.638868086512683*^9, 3.638868141054552*^9}, {3.6388682523623753`*^9, 
   3.638868257232367*^9}, 3.638868368892797*^9, {3.638868416659589*^9, 
   3.6388684351647053`*^9}, {3.638868706813321*^9, 3.638868709340467*^9}, {
   3.638868743181967*^9, 3.638868758758932*^9}, {3.638868829937091*^9, 
   3.638868836260995*^9}, {3.638868871725666*^9, 3.638868877313697*^9}, {
   3.638869032519063*^9, 3.638869038631497*^9}, {3.638869160596306*^9, 
   3.638869188443111*^9}, {3.6388692370432*^9, 3.63886923752787*^9}, {
   3.6388692967203836`*^9, 3.638869384221887*^9}, {3.6388694274019823`*^9, 
   3.6388694278601637`*^9}, {3.638870153853114*^9, 3.6388701748580112`*^9}, {
   3.638870221082087*^9, 3.638870221363469*^9}, {3.638872117165328*^9, 
   3.638872117559902*^9}, {3.6390450528272257`*^9, 3.639045052907444*^9}, {
   3.6390450928275414`*^9, 3.6390451340194674`*^9}, 3.63904572475101*^9, {
   3.639045830819524*^9, 3.639045856563002*^9}, {3.639045888699438*^9, 
   3.6390458891337223`*^9}, {3.639046105699087*^9, 3.639046106927146*^9}, {
   3.639046206224073*^9, 3.639046213980921*^9}, {3.639046520284876*^9, 
   3.6390465463704853`*^9}, {3.639046597296813*^9, 3.639046602484638*^9}, {
   3.639046678635517*^9, 3.639046679477787*^9}, {3.639046926241901*^9, 
   3.639046930810582*^9}, {3.6390469795323267`*^9, 3.6390469853435907`*^9}, {
   3.63904706503028*^9, 3.639047068437587*^9}, {3.639047102349155*^9, 
   3.6390471439929934`*^9}, {3.639047206476256*^9, 3.639047257863009*^9}, 
   3.639047299624238*^9, {3.6390473319120417`*^9, 3.639047350472734*^9}, {
   3.639047456553012*^9, 3.6390475607733307`*^9}, {3.639047608633304*^9, 
   3.639047649458158*^9}, {3.6390476930586643`*^9, 3.639047693363431*^9}, {
   3.639047822607889*^9, 3.639047823380946*^9}, {3.639052960466879*^9, 
   3.639052960557982*^9}, {3.639056060727415*^9, 3.6390560942980003`*^9}, {
   3.639056135632861*^9, 3.639056140508173*^9}, {3.639056224665674*^9, 
   3.639056224875491*^9}, {3.639056405462096*^9, 3.6390564058269672`*^9}, {
   3.639057185476322*^9, 3.639057254919897*^9}, {3.639057299961852*^9, 
   3.639057312509859*^9}, 3.6390580479741793`*^9, {3.639061288241848*^9, 
   3.6390612890240726`*^9}, {3.639061453718771*^9, 3.639061455361026*^9}, {
   3.639112191526309*^9, 3.6391122177291927`*^9}, {3.6391122727795143`*^9, 
   3.639112273725601*^9}, {3.639112793374634*^9, 3.6391128629972*^9}, {
   3.639112902634386*^9, 3.639112949536297*^9}, {3.6391129821569366`*^9, 
   3.639112994802504*^9}, {3.639113219838147*^9, 3.6391132483015327`*^9}, {
   3.639113296877754*^9, 3.6391133699851837`*^9}, {3.639113408115988*^9, 
   3.6391134137657223`*^9}, {3.639113451799795*^9, 3.639113466460832*^9}, {
   3.639113533054565*^9, 3.639113559671625*^9}, {3.639115151201788*^9, 
   3.639115151634779*^9}, {3.6391155601019697`*^9, 3.6391155804667873`*^9}, {
   3.639117774682846*^9, 3.6391178238360167`*^9}, {3.63912350033114*^9, 
   3.639123504238974*^9}, {3.63912365618442*^9, 3.6391236659772463`*^9}, {
   3.639123858331314*^9, 3.639123860593302*^9}, {3.639123907238667*^9, 
   3.6391239094570627`*^9}, {3.6391239462900963`*^9, 3.639123968919877*^9}, {
   3.639124016131238*^9, 3.639124046267811*^9}, {3.63912447774613*^9, 
   3.639124517970335*^9}, {3.639124550644135*^9, 3.639124616503972*^9}, {
   3.63913960995889*^9, 3.639139617399784*^9}, {3.6391400113137074`*^9, 
   3.639140058586665*^9}, 3.639140105412286*^9, {3.639140152539266*^9, 
   3.639140172750226*^9}, {3.63914042626624*^9, 3.639140444852804*^9}, {
   3.6391413932981052`*^9, 3.63914140333743*^9}, {3.639142084172091*^9, 
   3.639142101081654*^9}, {3.639142191047167*^9, 3.639142208849676*^9}, {
   3.639142285666424*^9, 3.63914231332628*^9}, {3.639142351879052*^9, 
   3.639142352291202*^9}, 3.6391424031198072`*^9, {3.639143007586062*^9, 
   3.639143007998547*^9}, {3.6391433071603823`*^9, 3.639143322433707*^9}, {
   3.639143889711123*^9, 3.639143921632045*^9}, {3.639143979932987*^9, 
   3.639143980163321*^9}, {3.639144417070836*^9, 3.639144417589121*^9}, {
   3.639144473454918*^9, 3.6391444747081633`*^9}, {3.639145163296174*^9, 
   3.639145177813692*^9}, {3.63914521365771*^9, 3.6391452265135117`*^9}, {
   3.639195975511345*^9, 3.639196030393969*^9}, {3.6391962486087313`*^9, 
   3.639196306394504*^9}, {3.639196355537601*^9, 3.639196355883192*^9}, {
   3.639196502806744*^9, 3.639196502873581*^9}, {3.6391965790625677`*^9, 
   3.639196579280835*^9}, {3.639196700236476*^9, 3.63919670606958*^9}, {
   3.639196949281967*^9, 3.6391969497726994`*^9}, {3.639197498404937*^9, 
   3.639197498819257*^9}, {3.639215085604341*^9, 3.639215086251011*^9}, {
   3.639571873555799*^9, 3.639572052607609*^9}, {3.639572083070962*^9, 
   3.639572120751172*^9}, {3.6395722705583363`*^9, 3.6395722710930367`*^9}, {
   3.6395723498029613`*^9, 3.639572399155304*^9}, {3.6395728467333612`*^9, 
   3.639572851576935*^9}, {3.63964374111864*^9, 3.6396437477397614`*^9}, 
   3.639643941766851*^9, {3.6396448632497473`*^9, 3.6396448953144703`*^9}, {
   3.6396460916108503`*^9, 3.639646096471019*^9}, {3.639646144279352*^9, 
   3.639646151270939*^9}, {3.639646182033675*^9, 3.639646196525131*^9}, {
   3.639646413884815*^9, 3.639646414573278*^9}, {3.6396466641323557`*^9, 
   3.639646665193672*^9}, {3.639653736924143*^9, 3.639653741953971*^9}, {
   3.639653797002636*^9, 3.639653798874382*^9}, {3.639653884859357*^9, 
   3.6396538851198597`*^9}, {3.639653921571559*^9, 3.639653965118061*^9}, {
   3.6396540147299137`*^9, 3.6396541099321632`*^9}, {3.639654142199423*^9, 
   3.639654158729444*^9}, {3.639656060537589*^9, 3.639656060880267*^9}, {
   3.639656093665594*^9, 3.639656118105048*^9}, {3.639656722460444*^9, 
   3.639656748499557*^9}, {3.639715181858614*^9, 3.639715185136898*^9}, {
   3.639715296481719*^9, 3.6397152969807158`*^9}, {3.6397154422250557`*^9, 
   3.639715442811632*^9}, {3.639715537033594*^9, 3.639715537492824*^9}, {
   3.639717375035348*^9, 3.6397173754016857`*^9}, {3.639717841387554*^9, 
   3.639717843109761*^9}, {3.639717893970379*^9, 3.639717909790753*^9}, 
   3.639719639016856*^9, {3.6397197342614393`*^9, 3.6397197428746233`*^9}, {
   3.639719782426874*^9, 3.639719809523182*^9}, {3.639720250042303*^9, 
   3.639720251186679*^9}, {3.639720301024109*^9, 3.6397203358884697`*^9}, 
   3.6397204094542103`*^9, {3.6397204460567627`*^9, 3.639720446351452*^9}, {
   3.639721594967107*^9, 3.639721695102015*^9}, {3.639721782086686*^9, 
   3.639721813659264*^9}, {3.6397222902551193`*^9, 3.639722294557547*^9}, {
   3.639722326177451*^9, 3.639722364174769*^9}, {3.639722409272709*^9, 
   3.639722413638319*^9}, {3.6397224929106493`*^9, 3.639722588115995*^9}, {
   3.639722884778924*^9, 3.639722960250307*^9}, {3.639728186120244*^9, 
   3.6397282139171047`*^9}, {3.6397282451380577`*^9, 3.639728269049102*^9}, {
   3.6397285304628983`*^9, 3.639728530678236*^9}, {3.639728831109255*^9, 
   3.6397288574188347`*^9}, {3.6397290497071743`*^9, 3.63972907880378*^9}, {
   3.639729172908537*^9, 3.63972917399426*^9}, {3.639729250170004*^9, 
   3.6397293130076447`*^9}, {3.639730239721127*^9, 3.639730271756402*^9}, {
   3.6397303593147497`*^9, 3.6397303932915287`*^9}, {3.639730424740604*^9, 
   3.6397304577609673`*^9}, {3.639731779825588*^9, 3.639731792616481*^9}, {
   3.639732565343751*^9, 3.639732578981193*^9}, {3.639732662532338*^9, 
   3.639732719674096*^9}, {3.639732847280237*^9, 3.639732945038602*^9}, {
   3.639733021496449*^9, 3.639733053430573*^9}, {3.639733155188591*^9, 
   3.639733201794545*^9}, {3.639733242387126*^9, 3.639733325329926*^9}, {
   3.639733745099696*^9, 3.639733767872075*^9}, {3.63973384544982*^9, 
   3.639733897608994*^9}, {3.6397339456392317`*^9, 3.639733995471095*^9}, {
   3.639734052987001*^9, 3.639734075828306*^9}, {3.639734113082429*^9, 
   3.63973411483473*^9}, {3.639734147299532*^9, 3.6397341961142683`*^9}, {
   3.639734284176077*^9, 3.6397343212148657`*^9}, {3.639734360415605*^9, 
   3.6397344063962297`*^9}, {3.639734463716422*^9, 3.6397344653796043`*^9}, {
   3.6397345046358137`*^9, 3.639734541123955*^9}, {3.639734750642345*^9, 
   3.639734811419368*^9}, {3.639734962809111*^9, 3.6397350042773438`*^9}, {
   3.639735045754442*^9, 3.639735060864606*^9}, {3.639735201605176*^9, 
   3.6397352798452587`*^9}, {3.639735436702166*^9, 3.639735604792251*^9}, {
   3.63973569574837*^9, 3.639735721939786*^9}, 3.639735780608171*^9, {
   3.63974257285391*^9, 3.639742573101323*^9}, {3.639743294081193*^9, 
   3.6397432945487423`*^9}, {3.640063181654607*^9, 3.640063269776751*^9}, {
   3.64006337865967*^9, 3.6400633792732897`*^9}, {3.640063551487571*^9, 
   3.640063613323146*^9}, {3.6400639902795267`*^9, 3.640064033059485*^9}, {
   3.640064098866179*^9, 3.640064117797348*^9}, {3.6400641574474983`*^9, 
   3.640064158021903*^9}, {3.640064272683879*^9, 3.640064319121863*^9}, {
   3.6400647190793657`*^9, 3.640064729429059*^9}, {3.640065490282229*^9, 
   3.640065500131361*^9}, {3.640065942166039*^9, 3.640065986524171*^9}, {
   3.640066145416708*^9, 3.640066230426813*^9}, {3.6400662690653763`*^9, 
   3.640066365658794*^9}, {3.640066654058229*^9, 3.640066682163741*^9}, {
   3.640066769487973*^9, 3.64006677865058*^9}, {3.64008295539612*^9, 
   3.640082959712171*^9}, {3.6400830599131317`*^9, 3.640083063200947*^9}, {
   3.64008353804116*^9, 3.640083564087573*^9}, {3.640085256782016*^9, 
   3.6400852572078648`*^9}, {3.640323381094638*^9, 3.640323386882884*^9}, 
   3.640323424179538*^9}],

Cell[CellGroupData[{

Cell[BoxData["1.15682809119441354645683211148745217166`14.497799174344392"], \
"Print",
 CellChangeTimes->{3.640320794128484*^9, 3.640323388301633*^9, 
  3.64032342532115*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.640320794128484*^9, 3.640323388301633*^9, 
  3.640323425321642*^9}],

Cell[BoxData["1.34671324592550366723234527052761631956`15.127243382566776"], \
"Print",
 CellChangeTimes->{3.640320794128484*^9, 3.640323388301633*^9, 
  3.640323425334766*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.640320794128484*^9, 3.640323388301633*^9, 
  3.640323425335094*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"MM", "=", "6"}], ";", "\[IndentingNewLine]", 
    RowBox[{"initial", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"BN", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.5"}], ",", 
         RowBox[{"-", "1.5"}], ",", "1.5", ",", "2.5"}], "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SolveBethe", "[", 
      RowBox[{"MM", ",", "12", ",", "initial", ",", "BN"}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"OverlapMG", "[", 
      RowBox[{"initial", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.58652891910193739745498164787655029977`15.", ",", 
           "1.38101310763563718991715011361884236636`15."}], "}"}], ",", 
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", "0"}], "]"}]}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.640077132609236*^9, 3.640077132857038*^9}, {
   3.640077165616478*^9, 3.640077231568825*^9}, {3.640077268215218*^9, 
   3.640077278526758*^9}, {3.6400773690139303`*^9, 3.640077414774074*^9}, {
   3.640077470796509*^9, 3.640077514650956*^9}, {3.640077552554039*^9, 
   3.640077554946574*^9}, {3.640077649184332*^9, 3.640077649303948*^9}, {
   3.640077762245501*^9, 3.640077762469409*^9}, {3.640077885874799*^9, 
   3.640077886178359*^9}, {3.6400787123483763`*^9, 3.640078714642712*^9}, {
   3.640078830770073*^9, 3.6400788336478243`*^9}, {3.64007920147324*^9, 
   3.640079203410672*^9}, {3.640079259785187*^9, 3.640079261407568*^9}, {
   3.6400821370631123`*^9, 3.640082145406605*^9}, {3.6400821828056793`*^9, 
   3.6400822271818323`*^9}, {3.640082297548006*^9, 3.6400823100603333`*^9}, {
   3.6400825297993183`*^9, 3.640082540031021*^9}, {3.64008261588597*^9, 
   3.640082623829236*^9}, {3.6400827530990047`*^9, 3.640082790522365*^9}, {
   3.64008363564194*^9, 3.6400836880245657`*^9}, {3.640083872237214*^9, 
   3.6400838783882427`*^9}, {3.640084352283607*^9, 3.64008441475524*^9}, 
   3.640086117360229*^9, {3.6400867608608093`*^9, 3.6400867633307133`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LL", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NI", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KK1", "[", "x_", "]"}], ":=", 
   FractionBox["2", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KK12", "[", "x_", "]"}], ":=", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      RowBox[{"1", "/", "4"}]}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rap", "=", 
    RowBox[{"{", 
     RowBox[{"0.14246906", ",", 
      RowBox[{"0.500000000000001", " ", "I"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rap", "=", 
     RowBox[{"{", 
      RowBox[{"0.0413091275", ",", 
       RowBox[{"1.025705", " ", "I"}]}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rap", "=", 
     RowBox[{"{", 
      RowBox[{"0.12947294", ",", "0.5250121022"}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rap", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.46326472", "+", " ", 
        RowBox[{"0.50229385", "I"}]}], ",", 
       RowBox[{"0.46326472", "-", " ", 
        RowBox[{"0.50229385", "I"}]}]}], "}"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Kp", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"KK1", "[", 
     RowBox[{"x", "-", "y"}], "]"}], "+", 
    RowBox[{"KK1", "[", 
     RowBox[{"x", "+", "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Km", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"KK1", "[", 
     RowBox[{"x", "-", "y"}], "]"}], "-", 
    RowBox[{"KK1", "[", 
     RowBox[{"x", "+", "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gp", "[", 
    RowBox[{"j_", ",", "k_", ",", "rap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"j", ",", "k"}], "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"LL", " ", 
        RowBox[{"KK12", "[", 
         RowBox[{"rap", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "-", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Kp", "[", 
          RowBox[{
           RowBox[{"rap", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"rap", "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ")"}]}], "+", 
    RowBox[{"Kp", "[", 
     RowBox[{
      RowBox[{"rap", "[", 
       RowBox[{"[", "j", "]"}], "]"}], ",", 
      RowBox[{"rap", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gm", "[", 
    RowBox[{"j_", ",", "k_", ",", "rap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"j", ",", "k"}], "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"LL", " ", 
        RowBox[{"KK12", "[", 
         RowBox[{"rap", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "-", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Kp", "[", 
          RowBox[{
           RowBox[{"rap", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"rap", "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ")"}]}], "+", 
    RowBox[{"Km", "[", 
     RowBox[{
      RowBox[{"rap", "[", 
       RowBox[{"[", "j", "]"}], "]"}], ",", 
      RowBox[{"rap", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Gp", "[", 
      RowBox[{"i", ",", "j", ",", "rap"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGm", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Gm", "[", 
      RowBox[{"i", ",", "j", ",", "rap"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrMG", "=", 
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["2", "0.5"]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"rap", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"I", "/", "2"}]}], 
          RowBox[{
           RowBox[{"rap", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "+", 
           RowBox[{"I", "/", "2"}]}]]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}], 
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["2", "0.5"]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"rap", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "-", 
           RowBox[{"I", "/", "2"}]}], 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"rap", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "+", 
           RowBox[{"I", "/", "2"}]}]]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pr", "=", 
   RowBox[{"Product", "[", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"rap", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "2"], "+", 
         RowBox[{"1", "/", "4"}]}], ")"}], 
       RowBox[{"1", "/", "2"}]], 
      RowBox[{"4", 
       RowBox[{"rap", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"Det", "[", "GGp", "]"}], 
     RowBox[{"Det", "[", "GGm", "]"}]], ")"}], 
   RowBox[{"1", "/", "2"}]], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"1", "/", "2"}]], 
    FractionBox[
     RowBox[{"NI", "!"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "NI"}], ")"}], "!"}], ")"}], 
      RowBox[{"1", "/", "2"}]]], "PrMG", " ", "Pr", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"Det", "[", "GGp", "]"}], 
       RowBox[{"Det", "[", "GGm", "]"}]], ")"}], 
     RowBox[{"1", "/", "2"}]]}], ")"}], "2"], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.640086108823217*^9, 3.640086139262*^9}, {
   3.640086548288062*^9, 3.640086581261675*^9}, {3.6400866859259033`*^9, 
   3.6400867102441807`*^9}, {3.640086752172439*^9, 3.640086836962392*^9}, {
   3.6400868753698072`*^9, 3.640086879049448*^9}, {3.6400870457722054`*^9, 
   3.640087109627129*^9}, {3.6400871742921267`*^9, 3.640087254395319*^9}, {
   3.6400874939573183`*^9, 3.64008756377216*^9}, {3.640087636650567*^9, 
   3.6400876449532537`*^9}, {3.640087776412158*^9, 3.6400878302058067`*^9}, {
   3.640087865117628*^9, 3.6400878767009907`*^9}, 3.640087982123825*^9, {
   3.6400880949515963`*^9, 3.64008814943954*^9}, {3.640088185953657*^9, 
   3.640088201278159*^9}, {3.640088266565543*^9, 3.6400882736129713`*^9}, {
   3.6400886763335037`*^9, 3.640088693597061*^9}, {3.640088888946459*^9, 
   3.640088905242206*^9}, {3.640089159432558*^9, 3.640089210269721*^9}, {
   3.640089254069912*^9, 3.640089261902255*^9}, 3.640089337899898*^9, {
   3.6400893729788857`*^9, 3.640089396626317*^9}, {3.640089785036091*^9, 
   3.640089840928062*^9}, {3.640090209370532*^9, 3.640090234937468*^9}, {
   3.640090275344455*^9, 3.640090316149588*^9}, {3.640090443744171*^9, 
   3.640090463476142*^9}, {3.640090713343115*^9, 3.64009071916549*^9}, {
   3.640090770265624*^9, 3.640090827145197*^9}, {3.640320616718154*^9, 
   3.640320625461203*^9}, {3.640323481371176*^9, 3.640323482562283*^9}, {
   3.6403237760746727`*^9, 3.640323777635186*^9}, {3.640324187838043*^9, 
   3.6403242315139227`*^9}, {3.640340176939839*^9, 3.640340195026388*^9}, {
   3.6403402368339357`*^9, 3.6403402416422653`*^9}, {3.6403402892185793`*^9, 
   3.640340316920412*^9}, {3.640340361408223*^9, 3.640340381862526*^9}, 
   3.640340438085846*^9, {3.6403405907796*^9, 3.6403406633528357`*^9}}],

Cell[BoxData[
 RowBox[{"1.1599094461797603`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.640086581808115*^9, {3.640086687472953*^9, 3.640086711371868*^9}, 
   3.640086767353859*^9, 3.640086837905777*^9, {3.640086876150343*^9, 
   3.640086879587031*^9}, 3.640087089775331*^9, {3.640087187342499*^9, 
   3.6400872549319963`*^9}, {3.640087506692222*^9, 3.6400875640785217`*^9}, 
   3.6400876455515223`*^9, {3.640087777180558*^9, 3.6400878311845827`*^9}, {
   3.6400878657142982`*^9, 3.6400878772222567`*^9}, 3.6400879825756817`*^9, {
   3.640088141060686*^9, 3.640088150125474*^9}, 3.640088201822565*^9, 
   3.6400882745956173`*^9, {3.640088677819274*^9, 3.640088694693994*^9}, 
   3.640088951603924*^9, 3.6400892127062807`*^9, 3.6400892632977753`*^9, 
   3.640089338547244*^9, {3.640089377963191*^9, 3.640089398993044*^9}, {
   3.6400897865912237`*^9, 3.640089841712335*^9}, {3.640090211345735*^9, 
   3.64009023641571*^9}, {3.6400902969260178`*^9, 3.640090316947648*^9}, {
   3.6400904519908524`*^9, 3.640090463817824*^9}, 3.640090722849214*^9, 
   3.6400907831321917`*^9, {3.640090817807383*^9, 3.640090828239637*^9}, 
   3.640320626630837*^9, 3.640323483697734*^9, 3.640323794290719*^9, {
   3.640324193955699*^9, 3.640324232391048*^9}, 3.64034012492315*^9, {
   3.640340184166193*^9, 3.640340195993537*^9}, {3.640340237868401*^9, 
   3.640340243085195*^9}, {3.640340297188154*^9, 3.640340317432906*^9}, {
   3.6403403724081087`*^9, 3.640340382646603*^9}, 3.6403404388446493`*^9, {
   3.6403405972636547`*^9, 3.640340663752015*^9}}],

Cell[BoxData[
 RowBox[{"4.7933863111003225`*^14", "-", 
  RowBox[{"0.02633500234916855`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.640086581808115*^9, {3.640086687472953*^9, 3.640086711371868*^9}, 
   3.640086767353859*^9, 3.640086837905777*^9, {3.640086876150343*^9, 
   3.640086879587031*^9}, 3.640087089775331*^9, {3.640087187342499*^9, 
   3.6400872549319963`*^9}, {3.640087506692222*^9, 3.6400875640785217`*^9}, 
   3.6400876455515223`*^9, {3.640087777180558*^9, 3.6400878311845827`*^9}, {
   3.6400878657142982`*^9, 3.6400878772222567`*^9}, 3.6400879825756817`*^9, {
   3.640088141060686*^9, 3.640088150125474*^9}, 3.640088201822565*^9, 
   3.6400882745956173`*^9, {3.640088677819274*^9, 3.640088694693994*^9}, 
   3.640088951603924*^9, 3.6400892127062807`*^9, 3.6400892632977753`*^9, 
   3.640089338547244*^9, {3.640089377963191*^9, 3.640089398993044*^9}, {
   3.6400897865912237`*^9, 3.640089841712335*^9}, {3.640090211345735*^9, 
   3.64009023641571*^9}, {3.6400902969260178`*^9, 3.640090316947648*^9}, {
   3.6400904519908524`*^9, 3.640090463817824*^9}, 3.640090722849214*^9, 
   3.6400907831321917`*^9, {3.640090817807383*^9, 3.640090828239637*^9}, 
   3.640320626630837*^9, 3.640323483697734*^9, 3.640323794290719*^9, {
   3.640324193955699*^9, 3.640324232391048*^9}, 3.64034012492315*^9, {
   3.640340184166193*^9, 3.640340195993537*^9}, {3.640340237868401*^9, 
   3.640340243085195*^9}, {3.640340297188154*^9, 3.640340317432906*^9}, {
   3.6403403724081087`*^9, 3.640340382646603*^9}, 3.6403404388446493`*^9, {
   3.6403405972636547`*^9, 3.640340663752762*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"8", "/", "7."}], ")"}], "1"]], "Input",
 CellChangeTimes->{{3.640340261067595*^9, 3.640340267976169*^9}, {
  3.640340393806181*^9, 3.640340395238014*^9}, {3.640340512916007*^9, 
  3.640340523995332*^9}}],

Cell[BoxData["1.1428571428571428`"], "Output",
 CellChangeTimes->{
  3.640340268406165*^9, 3.640340396097558*^9, {3.640340514370685*^9, 
   3.6403405247534323`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OverlapMG", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "0.14246906", "}"}], "2"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{
  3.640323279287826*^9, {3.640323311140671*^9, 3.640323337284082*^9}, {
   3.640323451314151*^9, 3.640323460265973*^9}, {3.640323520041193*^9, 
   3.640323578359583*^9}, {3.640323801083107*^9, 3.640323853657879*^9}, {
   3.640324080501268*^9, 3.640324098260775*^9}, {3.640324131428171*^9, 
   3.640324141228047*^9}, {3.640324243154353*^9, 3.640324264689221*^9}, {
   3.6403406999123363`*^9, 3.640340704343871*^9}}],

Cell[BoxData["1.0690449676496976`"], "Print",
 CellChangeTimes->{
  3.64032339339132*^9, {3.640323429297871*^9, 3.64032346055303*^9}, {
   3.640323564438593*^9, 3.640323578893775*^9}, {3.640323840611248*^9, 
   3.640323854039476*^9}, {3.640324084810349*^9, 3.640324098593706*^9}, 
   3.6403241419044437`*^9, 3.640324265722541*^9, 3.640340131597786*^9, 
   3.640340706442175*^9}],

Cell[BoxData["6.509669347937377`"], "Output",
 CellChangeTimes->{
  3.6403233375992117`*^9, 3.640323393391815*^9, {3.640323429298245*^9, 
   3.6403234605534277`*^9}, {3.640323564438945*^9, 3.640323578894125*^9}, {
   3.6403238406116533`*^9, 3.640323854039859*^9}, {3.6403240848107443`*^9, 
   3.6403240985940933`*^9}, 3.640324142007071*^9, 3.640324265722934*^9, 
   3.640340131598209*^9, 3.640340706442732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.159909446228229`", "/", "0.4943701582912671`"}]], "Input",
 CellChangeTimes->{{3.640324606681732*^9, 3.640324607601631*^9}}],

Cell[BoxData["2.3462367757740896`"], "Output",
 CellChangeTimes->{3.640324608307645*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LL", "=", "LLL"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NI", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KK1", "[", "x_", "]"}], ":=", 
   FractionBox["2", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KK12", "[", "x_", "]"}], ":=", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      RowBox[{"1", "/", "4"}]}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rap", "=", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "/", "2"}], "+", "\[Epsilon]"}], ")"}], " ", "I"}], 
      ","}], "*)"}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "+", "\[Epsilon]"}], ")"}], " ", "I"}], ",", 
     
     RowBox[{"rappp", "[", "1", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Kp", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"KK1", "[", 
     RowBox[{"x", "-", "y"}], "]"}], "+", 
    RowBox[{"KK1", "[", 
     RowBox[{"x", "+", "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Km", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"KK1", "[", 
     RowBox[{"x", "-", "y"}], "]"}], "-", 
    RowBox[{"KK1", "[", 
     RowBox[{"x", "+", "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gp", "[", 
    RowBox[{"j_", ",", "k_", ",", "rap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"j", ",", "k"}], "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"LL", " ", 
        RowBox[{"KK12", "[", 
         RowBox[{"rap", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "-", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Kp", "[", 
          RowBox[{
           RowBox[{"rap", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"rap", "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ")"}]}], "+", 
    RowBox[{"Kp", "[", 
     RowBox[{
      RowBox[{"rap", "[", 
       RowBox[{"[", "j", "]"}], "]"}], ",", 
      RowBox[{"rap", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gm", "[", 
    RowBox[{"j_", ",", "k_", ",", "rap_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"j", ",", "k"}], "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"LL", " ", 
        RowBox[{"KK12", "[", 
         RowBox[{"rap", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "-", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Kp", "[", 
          RowBox[{
           RowBox[{"rap", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"rap", "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ")"}]}], "+", 
    RowBox[{"Km", "[", 
     RowBox[{
      RowBox[{"rap", "[", 
       RowBox[{"[", "j", "]"}], "]"}], ",", 
      RowBox[{"rap", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Gp", "[", 
      RowBox[{"i", ",", "j", ",", "rap"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGm", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Gm", "[", 
      RowBox[{"i", ",", "j", ",", "rap"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrMG", "=", 
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["2", "0.5"]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"rap", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"I", "/", "2"}]}], 
          RowBox[{
           RowBox[{"rap", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "+", 
           RowBox[{"I", "/", "2"}]}]]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}], 
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["2", "0.5"]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"rap", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "-", 
           RowBox[{"I", "/", "2"}]}], 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"rap", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "+", 
           RowBox[{"I", "/", "2"}]}]]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pr", "=", 
   RowBox[{"Product", "[", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"rap", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "2"], "+", 
         RowBox[{"1", "/", "4"}]}], ")"}], 
       RowBox[{"1", "/", "2"}]], 
      RowBox[{"4", 
       RowBox[{"rap", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "m"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   FractionBox[
    RowBox[{"Det", "[", "GGp", "]"}], 
    RowBox[{"Det", "[", "GGm", "]"}]], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "LLL", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"FullSimplify", "[", "GGp", "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{"FullSimplify", "[", "GGm", "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0ltI03EcBfBpNxO1RBdaormcq7VKoeYlGWpDStoSL81gZprmNME5c1s5
UlLmCC95W4Y67AJF6UNelm1Lc6VYlOKlIl1SOs3wQUWQoVP7nf/D4fN4vl84
/ul58ZmONBrtLAnsS9jRftVvMcriHfQG1i7o+mHc9JAZXrti/QrF48XDcEwU
OwYZ+YZvcNpGm4e+L7gLUCpotsNGCWMLZrFFAanE5hTPQDj5uU4CD+zUUc4Y
HjTCiI0myhh5zBZUr8ZROiX8m0sjjtvc5mFZWuLWdaKr9LdDBtFnqTIE3q6J
j4TcllenMomrn5aDIbf8CPsGMcPDcgImypLPQI2NGQJZ9JFOyHCp7oKWL30j
cNLBdxR+H2pnZRG9Gro5cHk9nAvbit1DYMXM3XtQ7hJaCs3dP15D6Zq8E+Y4
9uRLiBx2sQxOi9yVUG/lUa5Lex/DQWnSE5g2wLfArE0lpUwhLsnGnwt5lKMS
jiIH95hWKTW8JclNYsCfpGy4FqhqgpcrqyjZRfoO+DHuYBdspa+8hZqJGgN0
E5ZZ69GjTJ6jLD9vbSAyGQLKCJFgEwo12m1oztU0GIm7xSotnPWOdTERg04K
XeFLfkch9Jk9p4b6jp+1sDMluB6Ws/wewUovpxZ4S732FHqEOT+DZRV/ee+I
JRsTkbBHUjfZSzRFp1tgs824AnXmTcpjF7Md+7DbTNleuHRB5QOPyj5QPqzS
D8Mc5vMRuB4umIK8O64WyJdv174nrhiLtFBM72f2YzcFskDoqZiJhvPRh/gw
V3z8EjTVt1LmF4QqIWeXnVK/L70etlmrtXC/IFIH7cb7lApTqnqKuIf1izLC
zhmAp+vGBqGzQWiHdGshzUJUhcW6eR5ejOo1lvrD/6XSxo4=
  "]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", 
        RowBox[{"\[Epsilon]", "+", 
         SuperscriptBox["\[Epsilon]", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"\[Epsilon]", "+", 
         SuperscriptBox["\[Epsilon]", "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"rappp", "[", "1", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"rappp", "[", "1", "]"}]}], ")"}], "2"]}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"rappp", "[", "1", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"rappp", "[", "1", "]"}]}], ")"}], "2"]}]]}]},
     {
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"rappp", "[", "1", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"rappp", "[", "1", "]"}]}], ")"}], "2"]}]]}], 
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rappp", "[", "1", "]"}], "2"]}]], "-", 
       FractionBox["4", 
        RowBox[{"1", "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"rappp", "[", "1", "]"}], "2"]}]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"rappp", "[", "1", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"rappp", "[", "1", "]"}]}], ")"}], "2"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.640522641452053*^9, {3.640522784724049*^9, 3.6405227973774157`*^9}, 
   3.640522828641877*^9, 3.6405229828981037`*^9, {3.640524409300077*^9, 
   3.6405244153072567`*^9}, 3.640524513395995*^9, {3.640526005398673*^9, 
   3.640526014943774*^9}, 3.640527156712071*^9, 3.640527394288684*^9, {
   3.6405274371747303`*^9, 3.6405274536896067`*^9}, {3.640527485432119*^9, 
   3.640527493865161*^9}, {3.6405278182788467`*^9, 3.6405278219795923`*^9}, {
   3.640528044449356*^9, 3.640528062140427*^9}, 3.6405281603280687`*^9, 
   3.64058117567094*^9, {3.640581248427347*^9, 3.640581250363748*^9}, {
   3.640581687351412*^9, 3.6405816978455267`*^9}, {3.6405821383275347`*^9, 
   3.640582150679084*^9}, {3.640697015770509*^9, 3.640697070544482*^9}, 
   3.640697101432674*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LLL", "=", "12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Det", "[", "%319", "]"}], "/", 
          RowBox[{"Det", "[", "%320", "]"}]}], ")"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", ".0009", ",", "0.0000011", ",", 
        RowBox[{"-", ".00000013"}]}], "}"}]}], "]"}], "//", 
    "ListPlot"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3XMj98U++deOcfozwPSOA3c+gGi37wIfQfTm36dn
HADSDyW4N4PoxnMrtoPobyJbD4Dotj1eF0D0Pkb/ayD6mWXvPRA96Uz7fRBt
1GrzGkQ/2XccTC/bfPQDiDb+dQJM5+hOcz0IpGenfgfTa+Y6eIHoJb/dfEG0
gK1bIIjeV74cTG9xWxEKonf1fcgG0WXxnlUgOsvvMpjeYXGrBURLLKvqAtFP
sjbOANEyKz1mgug5W14tAdEWG3uWgmj+bR3tt4F0UOInMH2l9tQEEF22LH4i
iP5y6RbjHSB9wWEpE4gGAOYCplA=
  "]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
vhGeN2ryo8TSYGqT7RCa30xfblkMDe5atTajpY7Uve64RtRfzI4naFVHHY+s
qzSweVWYidY+WSXue4UGR5c2RaONPbdX6V+mwSVK3H9oh3PlxyUv0aDGkec4
2juItfp7CA02JviYoMMuFZdWBtMg9tXodvTNKIpNdBANFH9bbkU/iMvldgik
Qadiowi6Iln5Ec2fBrfNNTnQLRnZptx+NAgPffRtDOfJg82LnT40uFwo/R49
WZCekX2GBvf6r1WjuZ7I7PXzosEAH2cuWqQq+edeDxqw6J630Ar16xM3nCLy
feRTCJrdEr9jwpUG7DDT02iDd2u/VrkQ8XxUa4W27o2OjnEm4tXB3I12/7SK
7ehEPP/CPSo6cCziI8ORsMx6aXT01IpLKxxokKkTwYdOnw9R7balQZfTn5mv
hIv/cXY+OEID0mXXAXQdz/kAfysaJDzoa0R3rVqUN7Ik6qPR6DF6TORck4w5
DerHnqejFyXnvKZMiXjwUaLQApu8JF+a0OD4lvRzaGmlyepYYxo46q49hiZT
3FycjIjzYhdijN7JHlvDNqRB1n+z29CmcPwJnwENfsU5bUE76Q3bfdhN9Le8
98Jo3332vI920WCkfs/fUew/pv15gTo0CPv45Cs60crK3HgH0S/mlN6hcxy6
/m4EGmwQSK5CV544lDWtSYO1G1floFtPt+2r1aDBZkZgAnrIZ/9sPJsGB/dM
BKNnApuSnZk0SDps547mCdPX1aDT4N/Jt5Zo8at131ZSifr337kLrRSrc6NP
jYhXZBEZrZFUpZFHosGHRHkptGH69qEgZRoUZMetQNvcL79sspUGaSU8018I
n85nUeS30CDvhU8/OvhxcdesPA16mkZfo2MrKUH1csR+3luWoLNqc7fckqWB
/0BDKrqsSfmNizTRr0e3RaJftWef1ZQi8jmZ44Pu6dksLShBA/1fG46ixwfT
az+KEf1kKcoI/XdUxq1gHQ14uTg00EKTySIX19JgDY/HZrTcr/UVpmuI+uUb
EkLT/8YfVVhNg7MrDy6OYP/hFlk5L0CDDoGaL2gzgeuFr/lpsG8Vox3tvFbw
cBIvDT4JZFWi/SSucLrx0CBmpdgDdORG3vtay4n5xRceh76tGGosxEWsl+d3
EDpfjWt+8B8V9nO5uKKrmefvFC1RwW2pxxzdsX1RL/QPFe7/2quDHtY998Ps
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
co/CiFW7Msys+HkGzXNaLCb1qTKEHHQ9gjbNXczorVMGqcpmT3RS7VQDuVIZ
ns/obEF393718ClRhsy1ufpo4vQ7npJryhB/RJyJdpN+lTWZqQznqkKl0AWa
T/T105Sh5vfn+RDMx/J+z4l4ZZjVtvuK1t1dEvL0pDI4HajrREecypUlhCrD
yyL1h+imnPPlDgHKsPtzehGa8CDONnO3MhDJfOlox57w8QE3ZRj678BJdPpU
4Bm2ozI8O/vWD90v6aN+wJp7vCaz7WjmcufmChNl+DZ/ZyPa38LGZ95AGVja
lBXoSm9j/o2rlOGEzxklNE+kbl6cujL8uPRnKdo0W92oXU0Zjr/w+nUI86km
9RMVlYHN8+oduq1b+tgOSWX4rgnNaOKkgNI1QWVodbtxB+0mMVc1ysPNM1Eu
B12g8WPbymklGKw5GY8eNxuaPPxdCYgj3w+hdb3epNR9UoK9cs470REnWlYs
facE3UZNm9FNWQ9brTqVYIev9lq0wP07vqnPlWDhXDYNbfO6ULj3kRLU1YpI
oNN/ZRaS7ytBxueQv8GYj3jyJp/bSpAkNvQZzVSPGrpZqARXtLe8QvubHjk5
ma0Ebf/VPEBX7vIj66crgfwx1nU0z3GP2hOJShCek5aGNs10cHkaxT3/o0XH
0dFV5rPix5Tg0pDvPnRb57oLDgeVYCt/zzY08afW6sx9SsCgm2xAu4kxOgd2
KoHcxtvL0AVsxUC2kxJQdqoooMdNxCUO2CqBeUQsH1p355KSCjMliM+YGj+I
+YT/tpw3VILRCo8+dN2lka/Gukrg2f7iCVqg8n103HIl+Duytgxt0/GK3k5X
ghLe/Cx0+viTBqKKEoQpScWi+0WqPXbIcF+/Mvwgmskq5bkmogQ+ZiNuaP+N
eVmjS5QgxnWbJbrSPV1/5awiNAY8Wo2ePhrfc/inIqhELVdDG16MCKn7oghJ
6ZfE0NF3g2SXflAE0vWlf4Iwn3afcqtuRXh2L3AITfzubJvaqghnm9+3od2E
t4z3NCpC0BuLanQBY+MZ8gNFCPxckY8e37BG3eeOIsRNqKWgNd00mm8WKUId
T9IxdEgY2WcyVxGkRf7uRtely/DrX1KEcFkfe7TAHcG8E8mKIEjqMETbvJxb
/zRGEYqZhuro9LEf78WPK4KvZpEcul/w01GHEEUwW01cgmbSexQz9yvCOoPI
b4GYj9GLqgEvRbAzGn+DLnWt38Z2VYQIE+fH6Okjdyf97RWhxaypFG14/npK
haUirLTUzkBHl2WtmN+gCOVW2afRba3JrcZ6irB1s0ggmjga5RunpQhCm0Nc
0W4CocLtLEV4bzlohi6g7i8kkhWh3dxmFXrYcOemHURFeLepmoTWdNk2dFVc
EfiMmSLokMMWJ0f5FcEcUn8HYD5pQF45rwDX1/AMoAVur6w9PKkA1JX7XqBt
XjBc6kYVoJrTXYVO/6o4yz+oAPvVjK+i+/kJF6x6FcBAoTQJTVLjXZ3argB0
glIY2gemO3qeKoA6X7Q3utRpNID8UAGsZ37ZoqcP9RN8KhUgbnTHOrRhasfN
myUK8OndMxY6urTJcvKaAji3rZZBtz2v/qqXpQBf6nJ50MQvpdEn0hQgpVR8
9ADmw3eV/jReAVwuh75GZ5MvNIhHKsD6hM/16GGDBA+HUAVYd2TrTbTm9uM8
mQEK4ORVewEdEnwwa2C3AiRt4ZxC1yXv1me7K8CA3nl/tECJS4+/owLY0pY4
o22ebQmpsFaAHtH9m9DpnzfKzpsowPHJHi1095K15cbruOfvM1FBk0jLbONW
KYBK/W1BtI8+ZfylugLI5qtM+mM+jrJniFQFYMfF9qOng4TUdygqwH9+U8/Q
hmfnn16VVIA8G48KdHTxT+9RQQUQ0XpxBd329BPfykXc+SXXnkETPvXkHp6W
B42fVw+jHRe3rq/7Lg/DbRKe6GyVR+/5P8tDzc2jNujhtRVHrd7JQ0ncFz20
5rYbiqmd8nDf256BDgm8XNXzXB4+GT2URNclpmwjN8gDW1ljfj/mU3R60vu+
PMRMpX9BmzaFpty8LQ9LW3k70UmD+1dMFspD5jX/OnQ3z65WvRx5sD7adwNN
Unb0PZEuD+StpufRPmsshZ8myoMos/wEutTesFD8tDyI/1X1Q08f0N7kcEwe
tFvj/kMbnmEOZRyUh4Cc38bo6OtKJwf2ycOzgJ2a6KZGApm9Sx4MN7QqogkD
vLX+TvLwSlJvKdpxYdq5wlYewj9c++mH+SiO/Zkzk4dNJZLv0MOrP6Qbr5cH
9bBjT9Gadp06cbrcfE2/lqND/J92vFzO3V/KIRtdF18TQGTIQ+jbh3FonsJb
hB0q8vDymsYhtOnjqzevysgD7L/ggU76cMFyVEQenuvwbUZ3zyV81eKVh/1z
/mvQJIUT+B0WrHjUR0X76ATT634SQSLalIAutd3TwP+VCAKW5bO+mI+fq4fV
ByIoiZM+o3XjbHlSu4lg/jKuHR2Rb5LV00qEc8m/a9BNj9bqk58QgWfrzkI0
oX9Zj/cDIpyUbE1FO/6lhNy8QwTKy7UR6GyinOxkERHenrm2Fz2sLVyul0eE
uxaS29CaWxa2nLhEhPylx4zQ/r6/vjclc7fXf9FAV8Z8ThCPJUJfmL08muda
L8fhOPf4Og950ab1rU8zQohw6pv6+D7M590j74H9RFi4mt6L7v5Twcf2JsIF
Z94naJJcUa6/KxEsJf1vo31WZq+vsOde/5PeTHSpder7OUsiLA3dFIMe3xt9
1NiYCOLLyoLQutFhinF6RNDqV3FDR+T5V73UIoL/2VgLdFPdrm1ENhGa10/p
oAlvHSddyURY98OdgnacsUy5SiTCq8stouhsmfUrRsWJEGa1ZmYv5rNiVavW
UiJs+pM3iGZuZvkenpcD9WuENrT/HmXhukk50NgSdh9dGSVRyD8mB6azn6+h
eXL5NlkNykF43tZktGntzGBKrxy8tKw9ik7qHTvR0y4HxhPs3eju3x9I5GY5
aL54zg5Nku564P1QDoIMFxui3TSbnW9WyoH2kC8HXWD54M9EiRxIxLyRRY/7
3E7Xy5cDEfWNi9G6p67pnMiSA8qL0rE9mE/OxY6mNDmw3a/0Bt1UcyZAPEEO
ssWjG9CEnhMEh0g54C/5VYJ2nAq+mREqB7FWOy6hsyX3Wg4EcK9/pDkK3b9s
x1fWHjkYOq0TgGZabI32d5eDe2pXXND+3pvoFY5yUPpA1AxdeVKvYc5aDmoc
D2ujebKXexhvkoPhH4OqaNNqNZ64ddzjx9oIo5O65bJerpKDOHL11G7MZ0JY
n6ghB8KVjI9oogRPjytVDnKsUlrQbhoTh64qyoHDx/lKdIHZsMyopBzQg/fk
occ9+8q0hORASrArEa17om3L4UVyoHBpfSg6Iqvhe+20LOirF3uhm+5VJvCP
y0JYNdEWTXhdxLH6LAudFpEGaJtf2U9T3smCVc93JjpdPM27p1MW3nk7SaP7
OTF85BZZiJ1oXPDBfEyP5no3yIJthNYI2n/XgfU378vCGuGsLnRlhOf7iduy
oJsmWI/myfzvqN51WXBQOViMNq2yUjyRIwvx1/rT0dGd66ua0mVhQMMyEt32
Y9U28SRZsCmv2I8mirEn7U/Lwps1ak5oN7ZKSsYxWTjx4IwJusBEcsXAQVnY
aPRnBXrcg7+V5SsL5Meeymjd8D/7/HfJAnHTSwF0xKVvQhVOsrCiSX/CG/Op
+FgwZysL7qYF79ECHV0mxuayUPxE6hnaZrx5MHa9LMiYhN9Fp4vUnnipKwsX
Hn3NQfczy0hETVlYa+iQgGZuzH/gypCFifsPQ9D+7pecr6rIcu+vGrvQlfjv
hGVkobo03RrNc/FkupaoLDSzePXQhncP6Rzm5b4+Zz8dHd2+t6N2VgbWyfdK
oNu+7Qjg/yUDmYkmc16Yj7AdweqrDCjw3R5GuzFMb6Z8kIHbh5U70AUb9C17
umXAayy6Fj2+Q/MrqU0GtN0mrqN1w6jR3k9kgNa+4xw6JJ1Iv/lABlgbnh1H
15WLNEzckQGLMh1ftMBLHg+9YhmIo1xxRNuMTSwcz5OBT0mixuh0wS+ZTZdk
wHk+ZDm6n/ZWTzxFBr7vGVRAM41evrGPlYGLXdb8aH/Xx4cyjsuA5/r7Pzzx
fnmkSmYgRAbMbtDfoqfPFZex/LmWTm5CG5blbPH35u4fNleGjm5N+37XVQYy
Bnwuo9tGYhLm7LnnM+uIRRMFjnGMrWTArQSC0W7UgKexxjIwLHXDHV1g6OX9
Uk8Gkg7JWqHHnbfzEVfKwJae47pozcObc13ZMqClP6aGDkkzWn+VLAPMTEdx
dN0tnfcjRO76zD36swvzecE+qkWQgQPOyz+hbb6qKB5eKgNV9y6+RKfzS1XV
zkuDGpG/Bt1PWbqNf0oaCoMOFKCZMDthOSYNm9r6UtA+Tt+TUwalYRHHNBxd
emhAs6dXGt5Elu1BT6e8fkF6JQ3Nb1Uc0Ialz/Z5N0tD76rY9ejo57VCNx9K
w5KESXV023BZwUSlNJgNuBHRRL4CE71SaSjQfb4E7UbOGDyeLw3MhNXfd+L9
0iDpRFOWNNT2X+lBD/8XSRI/Jw2BK8Ua0ZrBIQ/sE6Rh/anDt9AhyfucMyKl
QbNrMANdd9Ptz8dQaVhJt4lGCzyzS2cFSoPjwfuBaJvPpjr+e6Th3CP6DnT6
EoOOu+7S8J2QbI7uV10RMOcoDV4uc6vQJH0awdhGGn4X+JDRPo7yN2M3cfP7
9UoEXRokavlynTT4G8C0B+aTtOirnI40bIm6PoA2LJ487arB9QuZVnT00y+0
q1Rp8JM5fg/dNvT20YiiNOQ5jV5FExe3u2tJcc+Xve0s2lGlcSFESBq8h+rD
0Nlr72XWLuLOy1zmgx52uKnHPyMF5/de2IrWDLzyxnJcCrYV8wI6JPHcoZTP
UqDzbT8bXXcjVqbnnRQsX9YrgxZoOlZG6pICI1+TRWibwYAt3i1SEHzj1qg7
Pk94vL8XN0hB3bBSN7pbySlh4r4UMGnRj9CkNdYcvTIpKHL7dRPtY7/h6fHr
UmB+yfUiuvTAau+mHCng63x6Cj2dwOETvyAFfaKrDqANr6vm2idJQcvGbGd0
dKPU+ozTUvAmTNgU3fRx6fuPx7ivLwteiSYszIaxgqXAbPiDCtpRcVzB31cK
ritZCaGzVw9W3t3Fnc+mctIN89na7TDnJAUPTqh9QGv6P5/YsFUKgsrPPEeH
xNclx5pzr39opgJdV1Cu+XK9FKjLeOaiBR4XvJBbIwUrjdvOoE0/ZOxz1ZQC
uwC9I+ikuSShqwwpSLl8zRPdLX+qYERFCr4+k9iCJukcNtGSlQK332H6aB9b
38EQUSn4RR5moEv93E/U8krBZYutUujpWHsS/19J2B30YH4H5pNv9sDylyRY
ZLC+oiMeGTinfOX6UWonuun9ij9vPkjCzi8LdWjCX1o66Y0kZIjtLUI7EhV0
vNsk4btW13l0trZYR/ETSXB1WH8SPWyzOGDigSR8DinyQ2v6Tonr3ZWEuIty
29EhMV+LjxdLgtX9ExvRlVffWTTlSQKrd0wTzVPf/kUsQxLU/jgqoU3fNZ62
T5EEHWLDUnTSn3u0jFhJ8Fy1/Jcr5iNb8ujjcUm4veXiOzRpZa4767AkEH35
mtE+1ucX9vtLwqXT/nfQpXvjMu96S8LanN5s9PjpcL05V0n4VWUSj9bNC3yz
wUESml7eOoSOqPM+FGslCdXDSjvRTX1OMi+NJaFx/vRmNGHGukxOXxJ+SP1a
g3aUMd7iulIStJmuNHT2in+fWABpek8J6GEr9YQRsiRIbNb+64L57CFxtOQl
IX/H5c9o/yjppyEESdjuL/QKXXlFwLt2KTefiIMP0Dy1f3n5FyRAMrG/EG3a
O37FckoCiJkWaeik34OGKWMSoHP9bgS6W+rNuzeDEhByl7wPTdJsCSP1SUDb
w/htaB/LhwreryRgw/PfRugCnzuVxc0S0NnpsQw9HlnoMPFQAsLftcijdXMy
J9ZWSYDpJ10+dETN2eTjpRKgPpY77oz5vDml2ZQvAcxfYn1owtThF2KXJcB4
+vATtKOk3z77cxIQ+nfwNjp7mYdQRoIENC9YZ6H7zR0KPkZKwOrF92PQTG9z
E1aYBNQtoR9E+59cN7g/UAK8eM+6oSsva524u0cCaLx/LdA81XTSnLsELFri
vRpt2q3wYMN/EjDN005BJ02IOcfaSIDIvL4Yupuw5E/bJgnQ+5M/44T5aPw+
z/1uHk5NSg6h3cxGVrnqSMDI96Nt6ALP96/yNCTA78vwffT48VcHRqgSIPRx
az5aN+uJuJaSBDx68yAZHXHvfnGIlARcbGMdQzd1lVjUCklATGPqbjThV+4X
vsUSkHZ/wQ7tKJ5+2nKGADUlewzR6Zx4Wso4gfs+ppOD7t8U8ejNZwK4phnK
oZm7gtxJ7wnQHXVjMdo/wmfBq4sA/odkv23HfDKcM4tbCEDxPv4GzVNlozfR
QIBv9qMNaNNO4zdrqwnwZsO2UnTSD91Dx8sI0K9ZfwndJqoh03SdAAtKGqfR
RDa5TOwKAfQE0gPQbiYyW+wvECD552JXdIGH4PdLSQTg6/M1Q48fm4v/eJoA
qQ3d2mjdSz/YrHACQNEGEjqiYqhpfzABeFNuCqObXr3xuutL4N4/5H//h/fL
8RbeuV0EGHSJ/Ii2Eam/ssGZAHPrv7eg05l3DWO3EkCLtr0K3W98/V2bOQFO
Ln2ch2a6Z4XJGRHgx/DyJLT/0WQF1zUECH56MRRdeSGqMk+TAAqFfN5onrtH
HEYY3DxO+9uiTdv9JlaoEqDMs9cAHf3NIzlElgA3jExY6DahbZq1otz1Urkl
jSYyLF7w8RHg64wiD7ou6lh3+rQ4rOyIGnHE+Wu9pOmfxeFC8Y8udP/vzTZl
neIgH+Vcj/bXXB1v2CAOZS5PitE8u1WbWm6Lg5+21gV0RM5SXqcccVgvlBmJ
JvR8h+FEcdB8v9QfnS3ZHXrwmDjolQU4oTUt6ioW+4qDe9RbE3TdyYJfiU7i
kOtoqvVvnuqk5crm4sDDLlP+N89EyN7ruuJw+I+y4L95NNzzVzPEgdAcPbEN
19PTbKBBRhwepv96j47IWqFqyysOcV6uz9CE1/JO73+KQcDKp3fR2eKLz+/7
IAYhCyuvoDVNv7bPtIpBenNWArouol3s9AMxeJUqeBhtU3XPXLpYDBiuQbvQ
/T+uROVcEoOL9PfWaDd2XP2yWDFgfjPT+zePR+D8/RAxaC8vp/+b55LTWjNv
MTh3RFXy3zwdG4K77MXgEMTOOeA8Iuq3dxqLQeCSyWG05kbpb+NaYhDXuKMD
XXf0L+sYWQweRDfXom3uDnoKE8RA2HzVDXT/t+c56fOiECKUfQ7txrjzljYm
CgtPhU6gx3dkypf1ikJO9EFfdET6KXvDZlHYYdLviCa89D3bUikKq5dYGP+b
R9ChZXu+KCyvvbP83zxG6wSH00TB4AhJ8d88R+gbD0aKwm7tOP5/85SJHV8c
KAqlY5M/7LF/I1PVie6iIHvN7S3ajfp+WslGFNJcnjWhx52faF9fJworpHXK
0RFpJf6rNUTh09Psy2jCi/NFDYqiUHFMOA6dzR8xvEVIFK5qBQejNcGHe0QR
KBnqd0fXHbJx2/dZBF6dt7BCG5bqZsx0ioC02V3df/MMk7qjGkRg/wyJ+m8e
sqC0dJkIDBfEif+b578f1jk5IhC2beqPHc6T/CZuWZIIcPjcP6EJzx4+uX9M
BCZuPXuJzl5yfYmZrwi8c9GpQWvqJ0OXE9cCOQXouqAjoTvNReDvbeFUtGGx
R8W4rgjoOAeHo9uGzH8dZYhADO+HPWg3lZXLhWVFYPaGhQN63EFxbzqvCJy2
vbv+3zyJS/Jpv4Rh+TRJ4988TSMfb38Qhh8ZccR/8/B0qBi2CcNLw6kl/+ZZ
U7295YEwNA+4fd+6Er8/zTu3vVgYPp561oM2vB7f/vmSMEgzdBrRbR+DxA7G
CoPHk+xbaDdFF/PFh4XhuZdwJnp868aoRG9hsOELjkZHxGvUKzkIw/iV/kA0
4bHMfKGxMBSBxQ509tzcmtUrheFk7x1zNEnn08EGsjAEB5N0/s3j9+LWFoIw
nCbEkf/Nk3937N28ENwqnBT5N8/7LNa+MSGYXu82bYvzEE97zvQKgf2b5gH0
uM3+nKhmIXi9f1UrOiJm21upKiHw58u+hybUg3xOvhBQLwpdQyf9YdgvOycE
kxoHz6JJKwln70cKQX/d+zB06d7p56aBQjBka+6DNszrF+hyFwKhwfKt6La+
JuOdNkJgFqQK/+aRuRUxvk4I8pfEsv/NY3Wh+qiGECgmT8j8myfq+LSQkhAU
qe5Y9G+e2t3a6UJCsL3o6egWnOf3Fn/ajCCo6Wp3o0maa4tufxYE/kdZj9Cl
PpRh6BKEpVaCJWjDHCFqSwN3/67Ai+i2Nz93bC8TBEfXd6fQbpK9lz7nCELR
kOkB9Lj5o9dBSYKgvK/MGR1x8obU4nBByP+hbIrmqU6xTvQVBMvg6JX/5pkI
jVNyFgTxPz9V/s2jsetJobkgjIa5CP2bx9Nyyeo1gvBp/sn/Hdp5NNT7G8Dx
WYytjVSWVCJF2YoI9Xy4WeuqqaSImixdS4WQbNekpCJLhX4Rk7K0kJQS0tiq
aylrUmiSNfu+8+vz+fN1nnme8z7HOd+vY4wxcU+CBirZJIQmArf9xK76Iu13
YJUQUqDcq8BmLWO8buETQl6BAjnYg8Z9wy4jguj7nPsDbDd2vcrUT0HE8msK
Z5L3/1vnK1WCaG7CyJdJ3vfJKWLvBNFrj+cO2DKbw1s56YIorH/1AexM2/Nr
VeIFUaDjlZ2kJ+64Vd71P/Ofg5tIT61RjImPIMqyPCZGehar1tT/I4gmqkrn
9+MeA/GldhaCyNJY7fd+8v5dMB00EET1+Xfr95P3bWdwgLogctnKKMSO7P9c
KCwriNYkuz7FltmUMxcrIogGxb/FYmee4GjLLwighmsGl7D17lz1yuoTQM3T
GWexq6rcnqMmAbTgLGmFzRKy7KsoE0C7vl0yxObp6ytavRFAN0361UiPr6JD
Z6oA4n91VJr0vBC97xkjgGJliwVIT89UEzVYAOmHK4/swz0bWiUiPASQ0FRs
C3amdZm5tK0A6rOllWHrRWdFPmIKoO7y09nYVZV3KzSRAKJrNHCwmfyXBEuU
BdDOOP0wbB64GByQFkCh1Kfe2G7eh9gtwgJo6tQqO2xKpm6+yxQ/Cipn78OO
7JKbnOzkR7KqPdqkZ/1ijStf+FFr1GF50mM56ipWyo/ejrwTIT03m55wXvCj
V+abZ83w87KspFM5iR+Vvrzdic2kp8vlRfKjEbGFGmyebvQJk0B+hM45FWC7
eQbE1Z/hRw8/1z7CpqQ7NNha86ONShCNHdluJja4hx8VhqSxsWXWau4P0OZH
Pq3LT2NnWqwNFVbgR2Y7A45g60Xwf4hdxY90ozv/Ij0f+mnyDH60p++ACumh
NEDWCAOdNciXJD073vmiVgbKvLuRQXrcU19VVDHQ0sHIwb9xz+OIYct3DHTF
YOY7dmSrt0pnOgOtvuPwAVtmNcvZM56Byn5/zsLOPGSSQg1loLs7dRKw1cLU
WsN9GIh94+E1bC7+tt+RgYKal3phM+coVo8sGOiBkg8Lm7e9O1rTkIF++P7a
i+12trq6WJ2BND6aaZGe1DdLDsgyUMqKHFnS8+O+aYsIA6mzZJeSHonrwS4L
fKjlcdjUXvz8Zp4rnOzjQ5zR8TZstWtWc8FNfOjirpNV2NzCv7TFyvlQQHB5
HjZzerMX5w0fiqrYnorN2yb2XDmND31YzrmJ7eYy05sbw4fEjwr/i015+EvB
JJgPseM9nbAjm8rt6z34EB+vxRxbZOVLjq0tH0qVNdUjPWbxTQNMPmRn/2IL
6blyWSIA8SFIXiNOegpOmwur8KFt7SE00jNhHhkrzYcMNgz37cE9qrsqNizi
Q2dsrRux3RzlBbOm6Cg78X0JNuX+EgPURUfiTWqZ2JGNY4EVX+goWjwuDltk
eUueZSkdbT3ICMHm7Hk/0fGCjrpCXc9hq13KUPdM+nOvpNEGm5sX40qNoqMH
s7tNsZmj/z4JD6SjJ+oZGqRH6Z/O1WfpqNpJQob0OOyXe2RNR6KJQYtIT4LW
Cc29dORS2ztuip/fX9bFFWvT0U/+I63YIssEG5gKdOSuXViJzTEeXN6yio7k
XLa8wVZjf93nwqCj33HRD7G5OdzrkyM0VF2+EIHNHEp7H9xKQ3XTTn7YPMUo
mlg1DQ0q1J3CdrP1Ac47GlKwgIPYg3dP+ipn0JB/UNou0lNr+io3noa605cr
kp7F24aNQ2no/Ff/FaTHQEql3oeGVtM6F0xwTwDN2daRhlo2H+jB5mb/Th6w
oKG8g3lfsJn9NT/9DWko20e+CJu3MW+NsAYN/ZcYkY7tduKBZawsDU2XTN3B
HsT/Ti5KQ0bddpex2VUe1c8XqOjZ4k+u2CJC1ktQPxWpq+44hs3RNzCtaKKi
amaSEenxVQq2LKeiG+6Lt5GerBWFHW+oyC7q/BrS0zM765FGReaZPEHSI9e+
gxpLRaxPe0aN8fPbutIzPJiKQnte/sAevJ2dudqTij4JrCvHZlfe602zpSJl
uWuvsEX4ryhoHqCix7tG7mNz4Kx9MaKiv47Y3MBW87bgMFWoaNT1wwVs7jNo
apamouKQrfbYzK6NEi6LqCg9IW4/dpXMMvPJKQp68ZKhS3osJyKCuyio7j/X
jaQn6kf58gYKWt7SKEp6yj4IcEopyGVo95wR7qFn7lZ+SUE8ekYXNkf3TmBu
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
F2ATvrJf/Y//DwMmLSc=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.1999742416738601`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 0.0009}, {1.2000006961979104`, 1.200529786678918}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6403477115066643`*^9, 3.6403497113221617`*^9, 3.64035163915172*^9, 
   3.640351978267309*^9, 3.640352187772359*^9, 3.6403523481534*^9, 
   3.6404365807086*^9, 3.640438963936165*^9, 3.640515946890497*^9, 
   3.640516769975582*^9, 3.640517932527608*^9, 3.640519198796343*^9, 
   3.640520120136816*^9, {3.6405203467074738`*^9, 3.640520360584124*^9}, 
   3.640520933670116*^9, 3.640521564831909*^9, {3.640522505348158*^9, 
   3.6405225660158157`*^9}, {3.6405226333876123`*^9, 3.64052264679592*^9}, {
   3.6405260510956173`*^9, 3.640526062775621*^9}, {3.6405260968422413`*^9, 
   3.6405262327626753`*^9}, {3.640526270357675*^9, 3.6405263422792473`*^9}, 
   3.640526414133527*^9, {3.6405264685923567`*^9, 3.640526514981516*^9}, 
   3.640526589046649*^9, 3.6405266871285686`*^9, 3.640526726955764*^9, 
   3.64052741104158*^9, {3.6405274467554293`*^9, 3.6405274703619947`*^9}, 
   3.640527502713228*^9, {3.6405275350312634`*^9, 3.640527688880886*^9}, 
   3.640527735255365*^9, 3.640527855683765*^9, {3.640527922109201*^9, 
   3.6405279424785423`*^9}, 3.6405280008610764`*^9, 3.640528120930846*^9, 
   3.640528175725421*^9, 3.640581185459106*^9, 3.640581260868783*^9, 
   3.64058216655785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["LLL", "2"], "/", 
  RowBox[{"(", 
   RowBox[{"LLL", " ", 
    RowBox[{"(", 
     RowBox[{"LLL", "-", "2."}], ")"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.640526696352964*^9, 3.640526722904299*^9}}],

Cell[BoxData["1.2`"], "Output",
 CellChangeTimes->{{3.6405267074945087`*^9, 3.640526729189438*^9}, 
   3.6405275621447363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["13", "2"]}]], "Input",
 CellChangeTimes->{{3.640526255918997*^9, 3.640526261393351*^9}, {
  3.640526347184721*^9, 3.640526459261451*^9}, {3.6405265256449347`*^9, 
  3.6405265345806503`*^9}, {3.6405265954912863`*^9, 3.6405266001145773`*^9}}],

Cell[BoxData["338"], "Output",
 CellChangeTimes->{{3.640526257727983*^9, 3.640526261737887*^9}, {
  3.640526349203291*^9, 3.640526459784658*^9}, {3.640526529052772*^9, 
  3.640526535318719*^9}, {3.6405265962535343`*^9, 3.640526600523439*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"336", "/", "14"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6405266218514643`*^9, 3.6405266263538847`*^9}}],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.640526626941744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GGpx", "=", 
   RowBox[{"GGp", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
      RowBox[{"GGp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"+", 
       RowBox[{"GGp", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "*)"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGpxx", "=", 
    RowBox[{"GGpx", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GGpx", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"GGpx", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", 
        RowBox[{"GGpx", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GGpxxx", "=", 
     RowBox[{"GGpxx", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GGpxx", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"GGpxx", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "+", 
         RowBox[{"GGpxx", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGpT", "=", 
    RowBox[{"Transpose", "[", "GGpxx", "]"}]}], ";"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GGpTx", "=", 
     RowBox[{"GGpT", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GGpT", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"GGpT", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "+", 
         RowBox[{"GGpT", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"GGpTxx", "=", 
     RowBox[{"GGpTx", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GGpTx", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"GGpTx", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "+", 
         RowBox[{"GGpTx", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"GGpTxxx", "=", 
      RowBox[{"GGpTxx", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GGpTxx", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "\[Rule]", 
         RowBox[{
          RowBox[{"GGpTxx", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "+", 
          RowBox[{"GGpTxx", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], ";"}], "*)"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGpfin", "=", 
   RowBox[{"Transpose", "[", "GGpT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", "GGpxx", "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.640347735337174*^9, 3.640347837962841*^9}, {
   3.6403500649808292`*^9, 3.6403500769158907`*^9}, 3.640350339909585*^9, {
   3.640350415491638*^9, 3.6403504201155777`*^9}, {3.6403504598510847`*^9, 
   3.6403505709616537`*^9}, {3.640351023192195*^9, 3.640351070870144*^9}, {
   3.640351107575961*^9, 3.6403511132772217`*^9}, {3.640351178437914*^9, 
   3.6403512241870117`*^9}, 3.6403512795221024`*^9, {3.640351417720108*^9, 
   3.640351422215839*^9}, 3.640351999467683*^9, 3.640352048587325*^9, {
   3.6403523541008377`*^9, 3.640352367914851*^9}, {3.6404372237536*^9, 
   3.640437243768961*^9}, {3.640437738054902*^9, 3.640437756757881*^9}, {
   3.6404391844597607`*^9, 3.640439198673173*^9}, {3.640439240682633*^9, 
   3.640439241714025*^9}, {3.6405159555431957`*^9, 3.640515975643334*^9}, {
   3.640516033194178*^9, 3.640516038409832*^9}, {3.640516779741144*^9, 
   3.640516790778509*^9}, {3.64051794007758*^9, 3.640517947802764*^9}, {
   3.640517995660344*^9, 3.640518110567362*^9}, {3.640518217149295*^9, 
   3.640518229190051*^9}, 3.640518352658358*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"1", "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Epsilon]", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]p"}]}], ")"}], "2"]}]], "+", 
  FractionBox["1", 
   RowBox[{"1", "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Epsilon]", "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]pp"}]}], ")"}], 
     "2"]}]]}]], "Output",
 CellChangeTimes->{3.6405182114529333`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"4", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{"xxx", "/", "8"}], "]"}], ",", "xxx"}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3fYkbXWm/GvHzV3sG0F0Z+0BnSwgHWx3Gkz/sSwz
BtFREYImIPrO6te2IHrepRg7EJ2mW5ifA6T/SVUVg2i/45XNIDpurVYLiP6f
ebALRE8oOzoJRB+5pTgLRLOd5ZoNohkSJOeD9ZnFLQbRKhLL7oPo/vqIxyC6
bPa17yD6Za36D7C8XMRfEK014TSYVjuqxZwLpJNOlnOC6G/GtyZOBdKczncn
geicVylnQLTN/HPnQPSXK8uu7AbSK6zXgul125pug2g548d3QfTUApUnIDpB
9jqYPmFn4LAHSOd52bmAaACP3ZMz
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Epsilon]", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]p"}]}], ")"}], "2"]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Epsilon]", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]p"}]}], ")"}], "2"]}]]}],
       ")"}]}], "-", 
    FractionBox["2", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Epsilon]", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]p"}]}], ")"}], "2"]}]], "+", 
    FractionBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Epsilon]", "2"], "+", 
      RowBox[{
      "2", " ", "\[ImaginaryI]", " ", "\[Epsilon]", " ", "\[Epsilon]p"}], "-", 
      SuperscriptBox["\[Epsilon]p", "2"]}]], "+", 
    FractionBox["LLL", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]p"}], "+", 
      SuperscriptBox["\[Epsilon]p", "2"]}]], "-", 
    FractionBox["2", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", "-", "\[Epsilon]p", "+", "\[Epsilon]pp"}], 
        ")"}], "2"]}]], "-", 
    FractionBox["2", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]"}], "+", "\[Epsilon]p", "+", 
         "\[Epsilon]pp"}], ")"}], "2"]}]], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "-", "\[Epsilon]p", "+", "\[Epsilon]pp"}],
            ")"}], "2"]}]], "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[ImaginaryI]"}], "+", "\[Epsilon]p", "+", 
            "\[Epsilon]pp"}], ")"}], "2"]}]]}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640518902883088*^9, 3.6405189597684803`*^9}, 
   3.640519010976397*^9, {3.640519048593611*^9, 3.640519068454343*^9}}],

Cell[BoxData[
 FractionBox["LLL", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]p"}], "+", 
   SuperscriptBox["\[Epsilon]p", "2"]}]]], "Output",
 CellChangeTimes->{{3.640348036020924*^9, 3.6403480416389713`*^9}, 
   3.640349031257468*^9, {3.64034908449494*^9, 3.640349088977951*^9}, {
   3.640349168039353*^9, 3.640349171351191*^9}, {3.640353660648178*^9, 
   3.6403536923324413`*^9}, {3.640353820499506*^9, 3.64035382591043*^9}, {
   3.6403538878564167`*^9, 3.6403539428000317`*^9}, {3.640354001888114*^9, 
   3.640354008810218*^9}, {3.6403540443367357`*^9, 3.640354075367708*^9}, {
   3.64035456150329*^9, 3.640354587904928*^9}, 3.6403547536741533`*^9, {
   3.6403547955976963`*^9, 3.640354798766946*^9}, {3.640354841901259*^9, 
   3.640354858660928*^9}, {3.640354888915107*^9, 3.6403548921670437`*^9}, {
   3.6404379035070972`*^9, 3.64043791136733*^9}, {3.640438374976664*^9, 
   3.640438391068841*^9}, 3.640516262030662*^9, {3.640516318055558*^9, 
   3.640516336092856*^9}, {3.64051638625428*^9, 3.640516391190731*^9}, {
   3.640517122235004*^9, 3.640517154602167*^9}, 3.640518920500695*^9, 
   3.640518960947781*^9, 3.6405190120686073`*^9, 3.6405190691978083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "GGp", "]"}]], "Input",
 CellChangeTimes->{{3.640519623219589*^9, 3.6405196370312243`*^9}, {
  3.64051967096694*^9, 3.640519671550694*^9}, {3.640520697377633*^9, 
  3.640520700401526*^9}, {3.640520733745611*^9, 3.640520734537125*^9}, {
  3.640520948380715*^9, 3.6405209513403587`*^9}, {3.640521028107121*^9, 
  3.640521046040144*^9}, {3.640522005828395*^9, 3.640522049382574*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Epsilon]"}], "+", "\[Epsilon]pp"}], ")"}]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "+", 
          SuperscriptBox["\[Epsilon]", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], 
        " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "+", 
          SuperscriptBox["\[Epsilon]p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]p", "-", "\[Epsilon]pp"}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "-", "\[Epsilon]pp"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "+", 
          SuperscriptBox["\[Epsilon]", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], 
        " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "+", 
          SuperscriptBox["\[Epsilon]p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]p", "-", "\[Epsilon]pp"}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["LLL", 
            RowBox[{"\[Epsilon]", "+", 
             SuperscriptBox["\[Epsilon]", "2"]}]]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], 
                ")"}]}]], "+", 
             FractionBox["1", 
              RowBox[{
               SuperscriptBox["\[Epsilon]", "2"], "-", 
               RowBox[{"2", " ", "\[Epsilon]", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[Epsilon]pp"}], ")"}]}], "+", 
               RowBox[{"\[Epsilon]pp", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[Epsilon]pp"}], ")"}]}]}]]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Epsilon]p"}], "+", "\[Epsilon]pp"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "+", 
           SuperscriptBox["\[Epsilon]", "2"]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], 
        " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "+", 
          SuperscriptBox["\[Epsilon]p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]p", "-", "\[Epsilon]pp"}], 
         ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "+", 
          SuperscriptBox["\[Epsilon]", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], 
        " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "+", 
          SuperscriptBox["\[Epsilon]p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]p", "-", "\[Epsilon]pp"}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "-", "\[Epsilon]pp"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["LLL", 
            RowBox[{"\[Epsilon]p", "+", 
             SuperscriptBox["\[Epsilon]p", "2"]}]]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], 
                ")"}]}]], "+", 
             FractionBox["1", 
              RowBox[{
               SuperscriptBox["\[Epsilon]p", "2"], "-", 
               RowBox[{"2", " ", "\[Epsilon]p", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[Epsilon]pp"}], ")"}]}], "+", 
               RowBox[{"\[Epsilon]pp", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[Epsilon]pp"}], ")"}]}]}]]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Epsilon]", "+", "\[Epsilon]p", "-", 
       RowBox[{"2", " ", "\[Epsilon]pp"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "+", 
           SuperscriptBox["\[Epsilon]", "2"]}], ")"}]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], 
        " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "+", 
          SuperscriptBox["\[Epsilon]p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]p", "-", "\[Epsilon]pp"}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "-", "\[Epsilon]pp"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "+", 
          SuperscriptBox["\[Epsilon]", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], 
        " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "+", 
          SuperscriptBox["\[Epsilon]p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}],
         " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Epsilon]p", "-", "\[Epsilon]pp"}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]p", "-", "\[Epsilon]pp"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["LLL", 
            RowBox[{"\[Epsilon]", "+", 
             SuperscriptBox["\[Epsilon]", "2"]}]]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], 
                ")"}]}]], "+", 
             FractionBox["1", 
              RowBox[{
               SuperscriptBox["\[Epsilon]", "2"], "-", 
               RowBox[{"2", " ", "\[Epsilon]", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[Epsilon]pp"}], ")"}]}], "+", 
               RowBox[{"\[Epsilon]pp", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[Epsilon]pp"}], ")"}]}]}]]}], ")"}]}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["LLL", 
            RowBox[{"\[Epsilon]p", "+", 
             SuperscriptBox["\[Epsilon]p", "2"]}]]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], 
                ")"}]}]], "+", 
             FractionBox["1", 
              RowBox[{
               SuperscriptBox["\[Epsilon]p", "2"], "-", 
               RowBox[{"2", " ", "\[Epsilon]p", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[Epsilon]pp"}], ")"}]}], "+", 
               RowBox[{"\[Epsilon]pp", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[Epsilon]pp"}], ")"}]}]}]]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Epsilon]", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], "2"], " ", 
    
    RowBox[{"(", 
     RowBox[{"\[Epsilon]p", "+", 
      SuperscriptBox["\[Epsilon]p", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}], 
    " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Epsilon]", "-", "\[Epsilon]pp"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Epsilon]p", "-", "\[Epsilon]pp"}], ")"}], 
    " ", 
    RowBox[{"(", 
     RowBox[{"\[Epsilon]p", "-", "\[Epsilon]pp"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Epsilon]p"}], "+", "\[Epsilon]pp"}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.640519628850503*^9, 3.6405196723255568`*^9}, 
   3.6405206929695168`*^9, {3.6405207300790167`*^9, 3.6405207352228537`*^9}, {
   3.640520942781271*^9, 3.6405209525474873`*^9}, {3.640521029671686*^9, 
   3.640521046523328*^9}, {3.6405220306398993`*^9, 3.6405220498707457`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Series", "[", 
   RowBox[{"%2325", ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]p", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]pp", ",", "0", ",", "0"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.640519678597621*^9, 3.6405197377494926`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    InterpretationBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "LLL"}], ")"}], " ", "LLL"}], 
          "\[Epsilon]pp"], "-", 
         RowBox[{
          FractionBox["1", "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "LLL"}], ")"}], " ", "LLL", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "LLL"}]}], ")"}]}], "+", 
         InterpretationBox[
          SuperscriptBox[
           RowBox[{"O", "[", "\[Epsilon]pp", "]"}], "1"],
          SeriesData[$CellContext`\[Epsilon]pp, 0, {}, -1, 1, 1],
          Editable->False]}],
        SeriesData[$CellContext`\[Epsilon]pp, 0, {
         2 (-1 + $CellContext`LLL) $CellContext`LLL, 
          Rational[-1, 6] (-1 + $CellContext`LLL) $CellContext`LLL (-2 + 
           3 $CellContext`LLL)}, -1, 1, 1],
        Editable->False], "\[Epsilon]p"], "+", 
      RowBox[{"(", 
       InterpretationBox[
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "LLL"}], ")"}], " ", "LLL"}], 
          SuperscriptBox["\[Epsilon]pp", "2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"28", "-", 
             RowBox[{"9", " ", "LLL"}]}], ")"}], " ", "LLL"}], 
          RowBox[{"6", " ", "\[Epsilon]pp"}]], "+", 
         RowBox[{
          FractionBox["1", "18"], " ", "LLL", " ", 
          RowBox[{"(", 
           RowBox[{"58", "+", 
            RowBox[{"LLL", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "61"}], "+", 
               RowBox[{"9", " ", "LLL"}]}], ")"}]}]}], ")"}]}], "+", 
         InterpretationBox[
          SuperscriptBox[
           RowBox[{"O", "[", "\[Epsilon]pp", "]"}], "1"],
          SeriesData[$CellContext`\[Epsilon]pp, 0, {}, -2, 1, 1],
          Editable->False]}],
        SeriesData[$CellContext`\[Epsilon]pp, 
         0, {(-2 + $CellContext`LLL) $CellContext`LLL, 
          Rational[1, 6] (28 - 9 $CellContext`LLL) $CellContext`LLL, 
          Rational[1, 18] $CellContext`LLL (
           58 + $CellContext`LLL (-61 + 9 $CellContext`LLL))}, -2, 1, 1],
        Editable->False], ")"}], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", "\[Epsilon]p", "]"}], "1"],
       SeriesData[$CellContext`\[Epsilon]p, 0, {}, -1, 1, 1],
       Editable->False]}],
     SeriesData[$CellContext`\[Epsilon]p, 0, {
       SeriesData[$CellContext`\[Epsilon]pp, 0, {
        2 (-1 + $CellContext`LLL) $CellContext`LLL, 
         Rational[-1, 6] (-1 + $CellContext`LLL) $CellContext`LLL (-2 + 
          3 $CellContext`LLL)}, -1, 1, 1], 
       SeriesData[$CellContext`\[Epsilon]pp, 
        0, {(-2 + $CellContext`LLL) $CellContext`LLL, 
         Rational[1, 6] (28 - 9 $CellContext`LLL) $CellContext`LLL, 
         Rational[1, 18] $CellContext`LLL (
          58 + $CellContext`LLL (-61 + 9 $CellContext`LLL))}, -2, 1, 1]}, -1, 
      1, 1],
     Editable->False], "\[Epsilon]"], "+", 
   RowBox[{"(", 
    InterpretationBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "LLL"}], ")"}], " ", "LLL"}], 
          SuperscriptBox["\[Epsilon]pp", "2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"46", "-", 
             RowBox[{"9", " ", "LLL"}]}], ")"}], " ", "LLL"}], 
          RowBox[{"6", " ", "\[Epsilon]pp"}]], "+", 
         RowBox[{
          FractionBox["1", "18"], " ", "LLL", " ", 
          RowBox[{"(", 
           RowBox[{"94", "+", 
            RowBox[{"LLL", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "79"}], "+", 
               RowBox[{"9", " ", "LLL"}]}], ")"}]}]}], ")"}]}], "+", 
         InterpretationBox[
          SuperscriptBox[
           RowBox[{"O", "[", "\[Epsilon]pp", "]"}], "1"],
          SeriesData[$CellContext`\[Epsilon]pp, 0, {}, -2, 1, 1],
          Editable->False]}],
        SeriesData[$CellContext`\[Epsilon]pp, 
         0, {(-2 + $CellContext`LLL) $CellContext`LLL, 
          Rational[1, 6] (46 - 9 $CellContext`LLL) $CellContext`LLL, 
          Rational[1, 18] $CellContext`LLL (
           94 + $CellContext`LLL (-79 + 9 $CellContext`LLL))}, -2, 1, 1],
        Editable->False], "\[Epsilon]p"], "+", 
      RowBox[{"(", 
       InterpretationBox[
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "LLL"}], 
           SuperscriptBox["\[Epsilon]pp", "3"]]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"23", "-", 
             RowBox[{"6", " ", "LLL"}]}], ")"}], " ", "LLL"}], 
          RowBox[{"3", " ", 
           SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"89", " ", "LLL"}], "18"]}], "+", 
           SuperscriptBox["LLL", "2"]}], "\[Epsilon]pp"], "-", 
         RowBox[{
          FractionBox["1", "108"], " ", "LLL", " ", 
          RowBox[{"(", 
           RowBox[{"2368", "-", 
            RowBox[{"777", " ", "LLL"}], "+", 
            RowBox[{"54", " ", 
             SuperscriptBox["LLL", "2"]}]}], ")"}]}], "+", 
         InterpretationBox[
          SuperscriptBox[
           RowBox[{"O", "[", "\[Epsilon]pp", "]"}], "1"],
          SeriesData[$CellContext`\[Epsilon]pp, 0, {}, -3, 1, 1],
          Editable->False]}],
        SeriesData[$CellContext`\[Epsilon]pp, 
         0, {(-2) $CellContext`LLL, 
          Rational[1, 3] (23 - 6 $CellContext`LLL) $CellContext`LLL, 
          Rational[-89, 18] $CellContext`LLL + $CellContext`LLL^2, 
          Rational[-1, 108] $CellContext`LLL (2368 - 777 $CellContext`LLL + 
           54 $CellContext`LLL^2)}, -3, 1, 1],
        Editable->False], ")"}], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", "\[Epsilon]p", "]"}], "1"],
       SeriesData[$CellContext`\[Epsilon]p, 0, {}, -1, 1, 1],
       Editable->False]}],
     SeriesData[$CellContext`\[Epsilon]p, 0, {
       SeriesData[$CellContext`\[Epsilon]pp, 
        0, {(-2 + $CellContext`LLL) $CellContext`LLL, 
         Rational[1, 6] (46 - 9 $CellContext`LLL) $CellContext`LLL, 
         Rational[1, 18] $CellContext`LLL (
          94 + $CellContext`LLL (-79 + 9 $CellContext`LLL))}, -2, 1, 1], 
       SeriesData[$CellContext`\[Epsilon]pp, 
        0, {(-2) $CellContext`LLL, 
         Rational[1, 3] (23 - 6 $CellContext`LLL) $CellContext`LLL, 
         Rational[-89, 18] $CellContext`LLL + $CellContext`LLL^2, 
         Rational[-1, 108] $CellContext`LLL (2368 - 777 $CellContext`LLL + 
          54 $CellContext`LLL^2)}, -3, 1, 1]}, -1, 1, 1],
     Editable->False], ")"}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "1"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, -1, 1, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 0, {
    SeriesData[$CellContext`\[Epsilon]p, 0, {
      SeriesData[$CellContext`\[Epsilon]pp, 0, {
       2 (-1 + $CellContext`LLL) $CellContext`LLL, 
        Rational[-1, 6] (-1 + $CellContext`LLL) $CellContext`LLL (-2 + 
         3 $CellContext`LLL)}, -1, 1, 1], 
      SeriesData[$CellContext`\[Epsilon]pp, 
       0, {(-2 + $CellContext`LLL) $CellContext`LLL, 
        Rational[1, 6] (28 - 9 $CellContext`LLL) $CellContext`LLL, 
        Rational[1, 18] $CellContext`LLL (
         58 + $CellContext`LLL (-61 + 9 $CellContext`LLL))}, -2, 1, 1]}, -1, 
     1, 1], 
    SeriesData[$CellContext`\[Epsilon]p, 0, {
      SeriesData[$CellContext`\[Epsilon]pp, 
       0, {(-2 + $CellContext`LLL) $CellContext`LLL, 
        Rational[1, 6] (46 - 9 $CellContext`LLL) $CellContext`LLL, 
        Rational[1, 18] $CellContext`LLL (
         94 + $CellContext`LLL (-79 + 9 $CellContext`LLL))}, -2, 1, 1], 
      SeriesData[$CellContext`\[Epsilon]pp, 
       0, {(-2) $CellContext`LLL, 
        Rational[1, 3] (23 - 6 $CellContext`LLL) $CellContext`LLL, 
        Rational[-89, 18] $CellContext`LLL + $CellContext`LLL^2, 
        Rational[-1, 108] $CellContext`LLL (2368 - 777 $CellContext`LLL + 
         54 $CellContext`LLL^2)}, -3, 1, 1]}, -1, 1, 1]}, -1, 1, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.640519705722665*^9, 3.640519738153824*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "+", 
           RowBox[{"rrr", "[", "1", "]"}]}], ")"}], "2"]}]]}], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["\[ImaginaryI]", "2"], "+", 
          RowBox[{"rrr", "[", "1", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"3", " ", "\[ImaginaryI]"}], "2"]}], "+", 
          RowBox[{"rrr", "[", "1", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[ImaginaryI]"}], "2"], "+", 
          RowBox[{"rrr", "[", "1", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[ImaginaryI]", "2"]}], "+", 
          RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["\[ImaginaryI]", "2"], "+", 
          RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"3", " ", "\[ImaginaryI]"}], "2"]}], "+", 
          RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[ImaginaryI]"}], "2"], "+", 
          RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[ImaginaryI]", "2"]}], "+", 
          RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["\[ImaginaryI]", "2"], "+", 
          RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"3", " ", "\[ImaginaryI]"}], "2"]}], "+", 
          RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[ImaginaryI]"}], "2"], "+", 
          RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[ImaginaryI]", "2"]}], "+", 
          RowBox[{"rrr", "[", "4", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["\[ImaginaryI]", "2"], "+", 
          RowBox[{"rrr", "[", "4", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"3", " ", "\[ImaginaryI]"}], "2"]}], "+", 
          RowBox[{"rrr", "[", "4", "]"}]}], ")"}], "2"]}]], "-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[ImaginaryI]"}], "2"], "+", 
          RowBox[{"rrr", "[", "4", "]"}]}], ")"}], "2"]}]]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"rrr", "[", "1", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"xxx", "/", "2"}], "-", 
       RowBox[{
        RowBox[{"3", "/", "2"}], "I"}]}]}], ",", 
     RowBox[{
      RowBox[{"rrr", "[", "2", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"xxx", "/", "2"}], "-", 
       RowBox[{"I", "/", "2"}]}]}], ",", 
     RowBox[{
      RowBox[{"rrr", "[", "3", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"xxx", "/", "2"}], "+", 
       RowBox[{"I", "/", "2"}]}]}], ",", 
     RowBox[{
      RowBox[{"rrr", "[", "4", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"xxx", "/", "2"}], "+", 
       RowBox[{
        RowBox[{"3", "/", "2"}], "I"}]}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64034821400786*^9, 3.640348285031575*^9}, {
  3.640348387555994*^9, 3.640348397222232*^9}, {3.640348433917534*^9, 
  3.6403484368535223`*^9}, {3.64034883322978*^9, 3.6403488341811657`*^9}, {
  3.640348943195272*^9, 3.6403489445952673`*^9}, {3.640352597251122*^9, 
  3.640352629959899*^9}, {3.640352699246347*^9, 3.640352722718429*^9}, {
  3.640352986746027*^9, 3.640352998153441*^9}, {3.640354497899375*^9, 
  3.640354528274885*^9}, {3.640354699790434*^9, 3.6403547146134043`*^9}, {
  3.640437823285631*^9, 3.640437889718254*^9}, {3.640439518484158*^9, 
  3.640439539773488*^9}, {3.640516085704195*^9, 3.640516122269691*^9}, {
  3.640517074178009*^9, 3.640517111474485*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"4", "+", 
       SuperscriptBox["xxx", "2"]}]]}], "-", 
    FractionBox["2", 
     RowBox[{"16", "+", 
      SuperscriptBox["xxx", "2"]}]], "-", 
    FractionBox["3", 
     RowBox[{"36", "+", 
      SuperscriptBox["xxx", "2"]}]], "-", 
    FractionBox["2", 
     RowBox[{"64", "+", 
      SuperscriptBox["xxx", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.640348231916914*^9, 3.6403482858698797`*^9, 3.640348405257181*^9, 
   3.640348437364684*^9, 3.640348834889411*^9, 3.640348944943914*^9, 
   3.6403527240639544`*^9, 3.640352999253055*^9, 3.64035362184699*^9, 
   3.640354529433215*^9, 3.640354715352705*^9, {3.640437882942848*^9, 
   3.640437890043045*^9}, 3.640439540560451*^9, 3.640516123802476*^9, {
   3.640517099564877*^9, 3.6405171120959787`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["2", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "+", 
          FractionBox["xxx", "2"]}], ")"}], "2"]}]]}], "-", 
    FractionBox["2", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", "+", 
         FractionBox["xxx", "2"]}], ")"}], "2"]}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640348708577093*^9, 3.640348711469783*^9}, 
   3.640348980956477*^9, {3.640352761059163*^9, 3.640352805234779*^9}, {
   3.640352875198295*^9, 3.640352938886215*^9}, {3.6403530221709547`*^9, 
   3.640353081772958*^9}, {3.640353332432296*^9, 3.640353467125868*^9}, {
   3.640353536767489*^9, 3.640353602161359*^9}, {3.640353802191821*^9, 
   3.640353812175292*^9}, 3.6403545478889914`*^9, {3.640354722061713*^9, 
   3.640354734939542*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["16", 
   RowBox[{"16", "+", 
    SuperscriptBox["xxx", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.640348712085185*^9, 3.640348982024818*^9, {3.6403527619854403`*^9, 
   3.64035280561896*^9}, {3.640352876283402*^9, 3.640352939792603*^9}, {
   3.640353023181262*^9, 3.6403530826732616`*^9}, {3.640353341937357*^9, 
   3.640353467628852*^9}, 3.640353538067583*^9, {3.640353576917054*^9, 
   3.640353603066141*^9}, {3.64035380329722*^9, 3.640353814645535*^9}, 
   3.640354548988537*^9, {3.640354723000764*^9, 3.6403547355209913`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"rrr", "/", "2"}], "+", 
     RowBox[{
      RowBox[{"I", "/", "2"}], 
      RowBox[{"(", 
       RowBox[{"n", "+", "1", "-", 
        RowBox[{"2", "j"}]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.640326403053123*^9, 3.640326419646009*^9}, {
  3.640336353078785*^9, 3.6403363531901903`*^9}, {3.6403387980144577`*^9, 
  3.640338798333749*^9}, {3.6403530076222057`*^9, 3.6403530078538857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", "+", 
    FractionBox["rrr", "2"]}], ",", 
   FractionBox["rrr", "2"], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], "+", 
    FractionBox["rrr", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.640326411372571*^9, 3.640326420069181*^9}, 
   3.640336353958222*^9, 3.640338799223967*^9, 3.640353008305154*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"GGp", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "+", 
   RowBox[{"GGp", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6403269756732492`*^9, 3.640326978481484*^9}, {
  3.6403270997509117`*^9, 3.64032710070297*^9}, {3.64032714011014*^9, 
  3.6403271630778093`*^9}, {3.640327201142193*^9, 3.6403272250687037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["LLL", 
     RowBox[{"\[Epsilon]", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox["LLL", 
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "\[Epsilon]p"}], "+", 
      SuperscriptBox["\[Epsilon]p", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.640327142740959*^9, 3.640327163387089*^9}, {
  3.640327201755067*^9, 3.64032722546869*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox["2", 
    RowBox[{
     SuperscriptBox["\[Epsilon]", "2"], "-", 
     RowBox[{"2", " ", "\[Epsilon]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Epsilon]p"}], ")"}]}], "+", 
     RowBox[{"\[Epsilon]p", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "\[Epsilon]p"}], ")"}]}]}]], "+", 
   FractionBox["2", 
    RowBox[{
     SuperscriptBox["\[Epsilon]p", "2"], "-", 
     RowBox[{"2", " ", "\[Epsilon]p", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Epsilon]pp"}], ")"}]}], "+", 
     RowBox[{"\[Epsilon]pp", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "\[Epsilon]pp"}], ")"}]}]}]], "+", 
   FractionBox["1", 
    RowBox[{"\[Epsilon]p", "-", "\[Epsilon]pp"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.6403370047778*^9, 3.640337054785887*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["2", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Epsilon]", "-", "\[Epsilon]p"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Epsilon]", "-", "\[Epsilon]p"}], ")"}]}]], "+", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "\[Epsilon]p", "-", 
    "\[Epsilon]pp"}]]}]], "Output",
 CellChangeTimes->{{3.640337007455615*^9, 3.640337055941431*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GGp1x", "=", 
   RowBox[{"GGp", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGp", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"GGp", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"GGp", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGp1xx", "=", 
   RowBox[{"GGp1x", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGp", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"GGp", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGp1T", "=", 
   RowBox[{"Transpose", "[", "GGp1xx", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGp1Tx", "=", 
   RowBox[{"GGp1T", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGp1T", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGp1T", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"GGp1T", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"GGp1T", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGp1Txx", "=", 
   RowBox[{"GGp1Tx", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGp1T", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGp1T", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"GGp1T", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGpfin", "=", 
   RowBox[{"Transpose", "[", "GGp1Txx", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "GGp1Txx", "]"}]}], "Input",
 CellChangeTimes->{{3.6403371971159773`*^9, 3.640337254732679*^9}, {
  3.640337330419252*^9, 3.640337510288241*^9}, {3.640339004571809*^9, 
  3.64033911549656*^9}, {3.640339176712111*^9, 3.640339202606299*^9}, {
  3.6403501414726753`*^9, 3.640350189697269*^9}, {3.6403502963275137`*^9, 
  3.640350296807019*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "1", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "1", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "1", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "2", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "3", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]]}], 
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "2", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "3", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]]}], 
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "3", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]]}]},
     {
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "1", "]"}], "-", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "2", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "1", "]"}]}], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "1", "]"}], "-", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "3", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "1", "]"}]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]]}], 
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "2", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "1", "]"}]}], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "1", "]"}], "+", 
            RowBox[{"rrr", "[", "2", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "3", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "1", "]"}]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "1", "]"}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]]}], 
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "3", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "1", "]"}]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "1", "]"}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]]}]},
     {
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "1", "]"}], "-", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "2", "]"}], "-", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "3", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "1", "]"}]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "2", "]"}]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "2", "]"}], "-", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "+", 
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "3", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "1", "]"}]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "1", "]"}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "2", "]"}]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]]}], 
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "+", 
         SuperscriptBox[
          RowBox[{"rrr", "[", "3", "]"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "2"]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "2"], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "1", "]"}]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "1", "]"}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"rrr", "[", "2", "]"}]}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rrr", "[", "2", "]"}], "+", 
            RowBox[{"rrr", "[", "3", "]"}]}], ")"}], "2"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.640337240150062*^9, 3.64033725579845*^9}, 
   3.640337353643667*^9, {3.640337459186323*^9, 3.64033751087037*^9}, 
   3.640339286769923*^9, {3.640350177070503*^9, 3.6403501905705233`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GGm1x", "=", 
   RowBox[{"GGm", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGm", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGm", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"GGm", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"GGm", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "+", 
       RowBox[{"GGm", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGm1xx", "=", 
   RowBox[{"GGm1x", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGm", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGm", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"GGm", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "+", 
       RowBox[{"GGm", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGm1xxx", "=", 
   RowBox[{"GGm1xx", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGm", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGm", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "+", 
       RowBox[{"GGm", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGm1T", "=", 
   RowBox[{"Transpose", "[", "GGm1xxx", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGm1Tx", "=", 
   RowBox[{"GGm1T", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGm1T", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGm1T", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"GGm1T", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"GGm1T", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "+", 
       RowBox[{"GGm1T", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGm1Txx", "=", 
   RowBox[{"GGm1Tx", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGm1T", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGm1T", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"GGm1T", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "+", 
       RowBox[{"GGm1T", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGm1Txxx", "=", 
   RowBox[{"GGm1Txx", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GGm1T", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"GGm1T", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "+", 
       RowBox[{"GGm1T", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGmfin", "=", 
   RowBox[{"Transpose", "[", "GGm1Txxx", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", "GGm1Txxx", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.640337892857304*^9, 3.6403379466064053`*^9}, {
  3.6403380274535103`*^9, 3.640338051181245*^9}, {3.6403394602879868`*^9, 
  3.64033953993517*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", 
        RowBox[{"\[Epsilon]", "+", 
         SuperscriptBox["\[Epsilon]", "2"]}]], "+", 
       FractionBox["8", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}]}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "\[Epsilon]p"}], "+", 
         SuperscriptBox["\[Epsilon]p", "2"]}]], "+", 
       FractionBox["8", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["8", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}], " ", 
         
         RowBox[{"(", 
          RowBox[{"5", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "+", 
       RowBox[{"LLL", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"\[Epsilon]", "+", 
             SuperscriptBox["\[Epsilon]", "2"]}]]}], "-", 
          FractionBox["1", 
           RowBox[{"2", "+", 
            RowBox[{"3", " ", "\[Epsilon]p"}], "+", 
            SuperscriptBox["\[Epsilon]p", "2"]}]], "-", 
          FractionBox["1", 
           RowBox[{"6", "+", 
            RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
            SuperscriptBox["\[Epsilon]pp", "2"]}]], "-", 
          FractionBox["1", 
           RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
          FractionBox["1", 
           RowBox[{"4", "+", "\[Epsilon]ppp"}]]}], ")"}]}]}], 
      RowBox[{
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}]}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "\[Epsilon]p"}], "+", 
         SuperscriptBox["\[Epsilon]p", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "\[Epsilon]p"}], "+", 
         SuperscriptBox["\[Epsilon]p", "2"]}]], "+", 
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["8", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}], " ", 
         
         RowBox[{"(", 
          RowBox[{"5", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}], " ", 
         
         RowBox[{"(", 
          RowBox[{"5", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}]},
     {
      RowBox[{
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}]}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "\[Epsilon]p"}], "+", 
         SuperscriptBox["\[Epsilon]p", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "\[Epsilon]p"}], "+", 
         SuperscriptBox["\[Epsilon]p", "2"]}]], "+", 
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["8", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}], " ", 
         
         RowBox[{"(", 
          RowBox[{"5", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Epsilon]"}], "+", "\[Epsilon]p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}]}]], "+", 
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]p"}], ")"}]}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "\[Epsilon]p"}], "+", 
         SuperscriptBox["\[Epsilon]p", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "\[Epsilon]p"}], "+", 
         SuperscriptBox["\[Epsilon]p", "2"]}]], "+", 
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "\[Epsilon]", "-", "\[Epsilon]pp"}], 
          ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Epsilon]", "-", "\[Epsilon]pp"}], 
          ")"}]}]], "+", 
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["8", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}], " ", 
         
         RowBox[{"(", 
          RowBox[{"5", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "\[Epsilon]", "-", "\[Epsilon]ppp"}]], "+", 
       
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}], " ", 
         
         RowBox[{"(", 
          RowBox[{"5", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "\[Epsilon]", "-", "\[Epsilon]ppp"}]], "+", 
       
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "\[Epsilon]", "-", "\[Epsilon]ppp"}]], "+", 
       
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}]},
     {
      RowBox[{
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}], " ", 
         
         RowBox[{"(", 
          RowBox[{"5", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["4", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}], " ", 
         
         RowBox[{"(", 
          RowBox[{"5", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "\[Epsilon]", "-", "\[Epsilon]ppp"}]], "+", 
       
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "\[Epsilon]", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Epsilon]p"}], "+", "\[Epsilon]pp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}], " ", 
         
         RowBox[{"(", 
          RowBox[{"5", "+", "\[Epsilon]p", "+", "\[Epsilon]pp"}], ")"}]}]], 
       "+", 
       FractionBox["1", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "-", 
       FractionBox["LLL", 
        RowBox[{"6", "+", 
         RowBox[{"5", " ", "\[Epsilon]pp"}], "+", 
         SuperscriptBox["\[Epsilon]pp", "2"]}]], "+", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "\[Epsilon]", "-", "\[Epsilon]ppp"}]], "+", 
       
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "\[Epsilon]p", "-", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"1", "-", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["4", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["4", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "\[Epsilon]", "-", "\[Epsilon]ppp"}]], "+", 
       
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "\[Epsilon]p", "-", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"1", "-", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "\[Epsilon]", "-", "\[Epsilon]ppp"}]], "+", 
       
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "\[Epsilon]", "-", "\[Epsilon]ppp"}]], "+", 
       
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "\[Epsilon]p", "-", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"1", "-", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["2", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["2", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}], 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "\[Epsilon]", "-", "\[Epsilon]ppp"}]], "+", 
       
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "\[Epsilon]p", "-", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Epsilon]pp", "-", "\[Epsilon]ppp"}]], 
       "+", 
       FractionBox[
        RowBox[{"1", "-", "LLL"}], 
        RowBox[{"3", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "LLL"}], 
        RowBox[{"4", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"2", "-", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"3", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"1", "-", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"4", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"6", "+", "\[Epsilon]p", "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "\[Epsilon]pp"}], "+", "\[Epsilon]ppp"}]], "+", 
       FractionBox["1", 
        RowBox[{"5", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]], "-", 
       FractionBox["1", 
        RowBox[{"7", "+", "\[Epsilon]pp", "+", "\[Epsilon]ppp"}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.640337963482738*^9, {3.640338022456427*^9, 3.640338052189665*^9}, 
   3.640339783245466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "2"], "-", 
   RowBox[{"2", " ", "\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Epsilon]p"}], ")"}]}], "+", 
   RowBox[{"\[Epsilon]p", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "\[Epsilon]p"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6403382062614183`*^9, 3.640338209329547*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "\[Epsilon]", "-", "\[Epsilon]p"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"\[Epsilon]", "-", "\[Epsilon]p"}], ")"}]}]], "Output",
 CellChangeTimes->{3.640338209981246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"%895", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Epsilon]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Epsilon]p", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Epsilon]pp", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Epsilon]ppp", "->", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640339344036824*^9, 3.640339390370214*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6403393641789913`*^9, 3.640339390709231*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6403393641789913`*^9, 3.640339390737792*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6403393641789913`*^9, 3.640339390784183*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6403393641789913`*^9, 3.640339390808777*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"ComplexInfinity", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", "LLL"}], "4"]}], 
      RowBox[{"-", 
       FractionBox["LLL", "4"]}], 
      RowBox[{"-", 
       FractionBox["LLL", "12"]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", "LLL"}], "4"]}], "ComplexInfinity", 
      RowBox[{
       FractionBox["13", "10"], "-", 
       FractionBox["LLL", "4"]}], 
      RowBox[{
       FractionBox["23", "60"], "-", 
       FractionBox["LLL", "12"]}]},
     {
      RowBox[{"-", 
       FractionBox["LLL", "4"]}], 
      RowBox[{
       FractionBox["13", "10"], "-", 
       FractionBox["LLL", "4"]}], "ComplexInfinity", 
      RowBox[{
       FractionBox["17", "15"], "-", 
       FractionBox["LLL", "12"]}]},
     {
      RowBox[{"-", 
       FractionBox["LLL", "12"]}], 
      RowBox[{
       FractionBox["23", "60"], "-", 
       FractionBox["LLL", "12"]}], 
      RowBox[{
       FractionBox["17", "15"], "-", 
       FractionBox["LLL", "12"]}], "ComplexInfinity"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.640339364289369*^9, 3.640339390813209*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"8", "/", "7."}]], "Input",
 CellChangeTimes->{{3.6403400914173803`*^9, 3.640340093203562*^9}}],

Cell[BoxData["1.1428571428571428`"], "Output",
 CellChangeTimes->{3.640340093798121*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"LLL", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1", "/", "4"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], ")"}], 
           "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "-", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "-", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}]}], ",", " ", "\n", 
      "  ", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "-", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "+", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}]}], ",", " ", "\n", 
      "  ", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "-", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "+", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}]}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "+", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}]}], ",", " ", "\n", 
      "  ", 
      RowBox[{
       RowBox[{"LLL", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1", "/", "4"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], ")"}], 
           "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}], " ", "-", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}]}], ",", " ", "\n", 
      "  ", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}], " ", "-", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "+", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}]}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "+", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}]}], ",", " ", "\n", 
      "  ", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "+", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}]}], ",", " ", "\n", 
      "  ", 
      RowBox[{
       RowBox[{"LLL", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1", "/", "4"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], ")"}], 
           "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", " ", 
       RowBox[{"2", "/", 
        RowBox[{"(", "\n", "   ", 
         RowBox[{"1", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "+", " ", "\[Epsilon]p"}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", "/", "2"}], " ", "+", " ", "\[Epsilon]pp"}], 
               ")"}]}]}], ")"}], "^", "2"}]}], ")"}]}]}]}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.640581801666622*^9, 3.64058181351336*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}]}], ")"}], 
          "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}]}], ")"}], 
          "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}]}], ")"}], 
          "2"]}]], "+", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]], "+", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]]}]},
     {
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}]}], ")"}], 
          "2"]}]], "+", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}], "2"]}]], "-", 
       
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}]}], ")"}], 
          "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}]}], ")"}], 
          "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]], "+", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]]}]},
     {
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]], "+", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]]}], 
      RowBox[{
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]], "+", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]]}], 
      RowBox[{
       FractionBox["LLL", 
        RowBox[{
         FractionBox["1", "4"], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}], "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]], "-", 
       FractionBox["2", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "+", "\[Epsilon]p"}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "2"], "+", "\[Epsilon]pp"}], ")"}]}]}], ")"}],
           "2"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6405818140040693`*^9}]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1683, 999},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 84479, 2016, 4329, "Input"],
Cell[CellGroupData[{
Cell[84926, 2035, 175, 3, 23, "Print"],
Cell[85104, 2040, 116, 2, 23, "Print"],
Cell[85223, 2044, 176, 3, 23, "Print"],
Cell[85402, 2049, 116, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[85545, 2055, 2541, 54, 143, "Input"],
Cell[CellGroupData[{
Cell[88111, 2113, 9060, 265, 695, "Input"],
Cell[97174, 2380, 1594, 23, 32, "Output"],
Cell[98771, 2405, 1595, 23, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100403, 2433, 262, 6, 34, "Input"],
Cell[100668, 2441, 165, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100870, 2449, 788, 18, 32, "Input"],
Cell[101661, 2469, 378, 6, 23, "Print"],
Cell[102042, 2477, 410, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102489, 2488, 150, 2, 32, "Input"],
Cell[102642, 2492, 88, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102767, 2498, 7525, 233, 633, "Input"],
Cell[110295, 2733, 4943, 133, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115275, 2871, 957, 25, 77, "Input"],
Cell[116235, 2898, 120744, 1988, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237016, 4891, 244, 7, 37, "Input"],
Cell[237263, 4900, 127, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237427, 4907, 292, 5, 34, "Input"],
Cell[237722, 4914, 242, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238001, 4922, 158, 3, 55, "Input"],
Cell[238162, 4927, 71, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238270, 4933, 3976, 108, 231, "Input"],
Cell[242249, 5043, 510, 16, 58, "Output"]
}, Open  ]],
Cell[242774, 5062, 625, 16, 55, "Input"],
Cell[CellGroupData[{
Cell[243424, 5082, 2361, 68, 85, "Input"],
Cell[245788, 5152, 1179, 18, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247004, 5175, 415, 6, 32, "Input"],
Cell[247422, 5183, 11219, 307, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258678, 5495, 430, 11, 32, "Input"],
Cell[259111, 5508, 8713, 211, 165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267861, 5724, 5689, 167, 238, "Input"],
Cell[273553, 5893, 886, 23, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274476, 5921, 989, 24, 96, "Input"],
Cell[275468, 5947, 577, 11, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276082, 5963, 652, 17, 55, "Input"],
Cell[276737, 5982, 385, 10, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277159, 5997, 416, 9, 32, "Input"],
Cell[277578, 6008, 458, 13, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278073, 6026, 843, 23, 61, "Input"],
Cell[278919, 6051, 434, 13, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279390, 6069, 2294, 69, 165, "Input"],
Cell[281687, 6140, 15945, 475, 143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297669, 6620, 3262, 102, 209, "Input"],
Cell[300934, 6724, 29065, 743, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330036, 7472, 399, 10, 37, "Input"],
Cell[330438, 7484, 254, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330729, 7496, 390, 9, 32, "Input"],
Cell[331122, 7507, 471, 10, 51, "Message"],
Cell[331596, 7519, 471, 10, 51, "Message"],
Cell[332070, 7531, 471, 10, 51, "Message"],
Cell[332544, 7543, 554, 11, 23, "Message"],
Cell[333101, 7556, 1643, 52, 142, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334781, 7613, 118, 2, 32, "Input"],
Cell[334902, 7617, 88, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335027, 7623, 15775, 443, 605, "Input"],
Cell[350805, 8068, 13260, 392, 194, "Output"]
}, Open  ]]
}
]
*)

